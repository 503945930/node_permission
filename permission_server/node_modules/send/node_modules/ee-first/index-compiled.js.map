{"version":3,"sources":["index.js"],"names":[],"mappings":";;AACA,MAAM,CAAC,OAAO,GAAG,SAAS,KAAK,CAAC,KAAK,EAAE,IAAI,EAAE;AAC3C,MAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EACvB,MAAM,IAAI,SAAS,CAAC,gDAAgD,CAAC,CAAA;;AAEvE,MAAI,QAAQ,GAAG,EAAE,CAAA;;AAEjB,OAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACrC,QAAI,GAAG,GAAG,KAAK,CAAC,CAAC,CAAC,CAAA;;AAElB,QAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,GAAG,CAAC,MAAM,GAAG,CAAC,EACvC,MAAM,IAAI,SAAS,CAAC,2CAA2C,CAAC,CAAA;;AAElE,QAAI,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAA;;AAEf,SAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACnC,UAAI,KAAK,GAAG,GAAG,CAAC,CAAC,CAAC,CAAA;AAClB,UAAI,EAAE,GAAG,QAAQ,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAA;;;AAGlC,QAAE,CAAC,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC,CAAA;;AAEhB,cAAQ,CAAC,IAAI,CAAC;AACZ,UAAE,EAAE,EAAE;AACN,aAAK,EAAE,KAAK;AACZ,UAAE,EAAE,EAAE;OACP,CAAC,CAAA;KACH;GACF;;AAED,WAAS,QAAQ,GAAG;AAClB,WAAO,EAAE,CAAA;AACT,QAAI,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAA;GAC5B;;AAED,WAAS,OAAO,GAAG;AACjB,QAAI,CAAC,CAAA;AACL,SAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACxC,OAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAA;AACf,OAAC,CAAC,EAAE,CAAC,cAAc,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,CAAA;KACnC;GACF;;AAED,WAAS,KAAK,CAAC,EAAE,EAAE;AACjB,QAAI,GAAG,EAAE,CAAA;GACV;;AAED,OAAK,CAAC,MAAM,GAAG,OAAO,CAAA;;AAEtB,SAAO,KAAK,CAAA;CACb,CAAA;;AAED,SAAS,QAAQ,CAAC,KAAK,EAAE,IAAI,EAAE;AAC7B,SAAO,SAAS,OAAO,CAAC,IAAI,EAAE;AAC5B,QAAI,IAAI,GAAG,IAAI,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,CAAA;AACtC,QAAI,EAAE,GAAG,IAAI,CAAA;AACb,QAAI,GAAG,GAAG,KAAK,KAAK,OAAO,GACvB,IAAI,GACJ,IAAI,CAAA;;;AAGR,SAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACpC,UAAI,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,CAAA;KACvB;;AAED,QAAI,CAAC,GAAG,EAAE,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,CAAA;GAC3B,CAAA;CACF","file":"index-compiled.js","sourcesContent":["\r\nmodule.exports = function first(stuff, done) {\r\n  if (!Array.isArray(stuff))\r\n    throw new TypeError('arg must be an array of [ee, events...] arrays')\r\n\r\n  var cleanups = []\r\n\r\n  for (var i = 0; i < stuff.length; i++) {\r\n    var arr = stuff[i]\r\n\r\n    if (!Array.isArray(arr) || arr.length < 2)\r\n      throw new TypeError('each array member must be [ee, events...]')\r\n\r\n    var ee = arr[0]\r\n\r\n    for (var j = 1; j < arr.length; j++) {\r\n      var event = arr[j]\r\n      var fn = listener(event, callback)\r\n\r\n      // listen to the event\r\n      ee.on(event, fn)\r\n      // push this listener to the list of cleanups\r\n      cleanups.push({\r\n        ee: ee,\r\n        event: event,\r\n        fn: fn,\r\n      })\r\n    }\r\n  }\r\n\r\n  function callback() {\r\n    cleanup()\r\n    done.apply(null, arguments)\r\n  }\r\n\r\n  function cleanup() {\r\n    var x\r\n    for (var i = 0; i < cleanups.length; i++) {\r\n      x = cleanups[i]\r\n      x.ee.removeListener(x.event, x.fn)\r\n    }\r\n  }\r\n\r\n  function thunk(fn) {\r\n    done = fn\r\n  }\r\n\r\n  thunk.cancel = cleanup\r\n\r\n  return thunk\r\n}\r\n\r\nfunction listener(event, done) {\r\n  return function onevent(arg1) {\r\n    var args = new Array(arguments.length)\r\n    var ee = this\r\n    var err = event === 'error'\r\n      ? arg1\r\n      : null\r\n\r\n    // copy args to prevent arguments escaping scope\r\n    for (var i = 0; i < args.length; i++) {\r\n      args[i] = arguments[i]\r\n    }\r\n\r\n    done(err, ee, event, args)\r\n  }\r\n}\r\n"]}