{"version":3,"sources":["pullAt.js"],"names":[],"mappings":";;AAAA,IAAI,MAAM,GAAG,OAAO,CAAC,oBAAoB,CAAC;IACtC,oBAAoB,GAAG,OAAO,CAAC,kCAAkC,CAAC;IAClE,WAAW,GAAG,OAAO,CAAC,yBAAyB,CAAC;IAChD,OAAO,GAAG,OAAO,CAAC,qBAAqB,CAAC;IACxC,SAAS,GAAG,OAAO,CAAC,uBAAuB,CAAC,CAAC;;;AAGjD,IAAI,UAAU,GAAG,KAAK,CAAC,SAAS,CAAC;;;AAGjC,IAAI,MAAM,GAAG,UAAU,CAAC,MAAM,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2B/B,IAAI,MAAM,GAAG,SAAS,CAAC,UAAS,KAAK,EAAE,OAAO,EAAE;AAC9C,OAAK,KAAK,KAAK,GAAG,EAAE,CAAA,AAAC,CAAC;AACtB,SAAO,GAAG,WAAW,CAAC,OAAO,CAAC,CAAC;;AAE/B,MAAI,MAAM,GAAG,OAAO,CAAC,MAAM;MACvB,MAAM,GAAG,MAAM,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;;AAEpC,SAAO,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;AACnC,SAAO,MAAM,EAAE,EAAE;AACf,QAAI,KAAK,GAAG,UAAU,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;AACxC,QAAI,KAAK,IAAI,QAAQ,IAAI,OAAO,CAAC,KAAK,CAAC,EAAE;AACvC,UAAI,QAAQ,GAAG,KAAK,CAAC;AACrB,YAAM,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;KAC9B;GACF;AACD,SAAO,MAAM,CAAC;CACf,CAAC,CAAC;;AAEH,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC","file":"pullAt-compiled.js","sourcesContent":["var baseAt = require('../internal/baseAt'),\n    baseCompareAscending = require('../internal/baseCompareAscending'),\n    baseFlatten = require('../internal/baseFlatten'),\n    isIndex = require('../internal/isIndex'),\n    restParam = require('../function/restParam');\n\n/** Used for native method references. */\nvar arrayProto = Array.prototype;\n\n/** Native method references. */\nvar splice = arrayProto.splice;\n\n/**\n * Removes elements from `array` corresponding to the given indexes and returns\n * an array of the removed elements. Indexes may be specified as an array of\n * indexes or as individual arguments.\n *\n * **Note:** Unlike `_.at`, this method mutates `array`.\n *\n * @static\n * @memberOf _\n * @category Array\n * @param {Array} array The array to modify.\n * @param {...(number|number[])} [indexes] The indexes of elements to remove,\n *  specified as individual indexes or arrays of indexes.\n * @returns {Array} Returns the new array of removed elements.\n * @example\n *\n * var array = [5, 10, 15, 20];\n * var evens = _.pullAt(array, 1, 3);\n *\n * console.log(array);\n * // => [5, 15]\n *\n * console.log(evens);\n * // => [10, 20]\n */\nvar pullAt = restParam(function(array, indexes) {\n  array || (array = []);\n  indexes = baseFlatten(indexes);\n\n  var length = indexes.length,\n      result = baseAt(array, indexes);\n\n  indexes.sort(baseCompareAscending);\n  while (length--) {\n    var index = parseFloat(indexes[length]);\n    if (index != previous && isIndex(index)) {\n      var previous = index;\n      splice.call(array, index, 1);\n    }\n  }\n  return result;\n});\n\nmodule.exports = pullAt;\n"]}