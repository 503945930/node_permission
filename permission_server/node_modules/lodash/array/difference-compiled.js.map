{"version":3,"sources":["difference.js"],"names":[],"mappings":";;AAAA,IAAI,cAAc,GAAG,OAAO,CAAC,4BAA4B,CAAC;IACtD,WAAW,GAAG,OAAO,CAAC,yBAAyB,CAAC;IAChD,WAAW,GAAG,OAAO,CAAC,qBAAqB,CAAC;IAC5C,OAAO,GAAG,OAAO,CAAC,iBAAiB,CAAC;IACpC,SAAS,GAAG,OAAO,CAAC,uBAAuB,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;AAqBjD,IAAI,UAAU,GAAG,SAAS,CAAC,UAAS,KAAK,EAAE,MAAM,EAAE;AACjD,WAAO,AAAC,OAAO,CAAC,KAAK,CAAC,IAAI,WAAW,CAAC,KAAK,CAAC,GACxC,cAAc,CAAC,KAAK,EAAE,WAAW,CAAC,MAAM,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC,GACvD,EAAE,CAAC;CACR,CAAC,CAAC;;AAEH,MAAM,CAAC,OAAO,GAAG,UAAU,CAAC","file":"difference-compiled.js","sourcesContent":["var baseDifference = require('../internal/baseDifference'),\n    baseFlatten = require('../internal/baseFlatten'),\n    isArguments = require('../lang/isArguments'),\n    isArray = require('../lang/isArray'),\n    restParam = require('../function/restParam');\n\n/**\n * Creates an array excluding all values of the provided arrays using\n * `SameValueZero` for equality comparisons.\n *\n * **Note:** [`SameValueZero`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n * comparisons are like strict equality comparisons, e.g. `===`, except that\n * `NaN` matches `NaN`.\n *\n * @static\n * @memberOf _\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {...Array} [values] The arrays of values to exclude.\n * @returns {Array} Returns the new array of filtered values.\n * @example\n *\n * _.difference([1, 2, 3], [4, 2]);\n * // => [1, 3]\n */\nvar difference = restParam(function(array, values) {\n  return (isArray(array) || isArguments(array))\n    ? baseDifference(array, baseFlatten(values, false, true))\n    : [];\n});\n\nmodule.exports = difference;\n"]}