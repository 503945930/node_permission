{"version":3,"sources":["support.js"],"names":[],"mappings":";;;AACA,IAAI,WAAW,GAAG,MAAM,CAAC,SAAS,CAAC;;;AAGnC,IAAI,QAAQ,GAAG,CAAC,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAA,IAAK,QAAQ,CAAC,QAAQ,CAAC;;;AAG/D,IAAI,oBAAoB,GAAG,WAAW,CAAC,oBAAoB,CAAC;;;;;;;;;AAS5D,IAAI,OAAO,GAAG,EAAE,CAAC;;AAEjB,AAAC,CAAA,UAAS,CAAC,EAAE;;;;;;;;;;AAUX,SAAO,CAAC,UAAU,GAAG,UAAU,CAAC,IAAI,CAAC,YAAW;AAAE,WAAO,IAAI,CAAC;GAAE,CAAC,CAAC;;;;;;;;AAQlE,SAAO,CAAC,SAAS,GAAG,OAAO,QAAQ,CAAC,IAAI,IAAI,QAAQ,CAAC;;;;;;;;AAQrD,MAAI;AACF,WAAO,CAAC,GAAG,GAAG,QAAQ,CAAC,sBAAsB,EAAE,CAAC,QAAQ,KAAK,EAAE,CAAC;GACjE,CAAC,OAAM,CAAC,EAAE;AACT,WAAO,CAAC,GAAG,GAAG,KAAK,CAAC;GACrB;;;;;;;;;;;;;;AAcD,MAAI;AACF,WAAO,CAAC,WAAW,GAAG,CAAC,oBAAoB,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;GAChE,CAAC,OAAM,CAAC,EAAE;AACT,WAAO,CAAC,WAAW,GAAG,IAAI,CAAC;GAC5B;CACF,CAAA,CAAC,CAAC,EAAE,CAAC,CAAC,CAAE;;AAET,MAAM,CAAC,OAAO,GAAG,OAAO,CAAC","file":"support-compiled.js","sourcesContent":["/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to detect DOM support. */\nvar document = (document = global.window) && document.document;\n\n/** Native method references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * An object environment feature flags.\n *\n * @static\n * @memberOf _\n * @type Object\n */\nvar support = {};\n\n(function(x) {\n\n  /**\n   * Detect if functions can be decompiled by `Function#toString`\n   * (all but Firefox OS certified apps, older Opera mobile browsers, and\n   * the PlayStation 3; forced `false` for Windows 8 apps).\n   *\n   * @memberOf _.support\n   * @type boolean\n   */\n  support.funcDecomp = /\\bthis\\b/.test(function() { return this; });\n\n  /**\n   * Detect if `Function#name` is supported (all but IE).\n   *\n   * @memberOf _.support\n   * @type boolean\n   */\n  support.funcNames = typeof Function.name == 'string';\n\n  /**\n   * Detect if the DOM is supported.\n   *\n   * @memberOf _.support\n   * @type boolean\n   */\n  try {\n    support.dom = document.createDocumentFragment().nodeType === 11;\n  } catch(e) {\n    support.dom = false;\n  }\n\n  /**\n   * Detect if `arguments` object indexes are non-enumerable.\n   *\n   * In Firefox < 4, IE < 9, PhantomJS, and Safari < 5.1 `arguments` object\n   * indexes are non-enumerable. Chrome < 25 and Node.js < 0.11.0 treat\n   * `arguments` object indexes as non-enumerable and fail `hasOwnProperty`\n   * checks for indexes that exceed their function's formal parameters with\n   * associated values of `0`.\n   *\n   * @memberOf _.support\n   * @type boolean\n   */\n  try {\n    support.nonEnumArgs = !propertyIsEnumerable.call(arguments, 1);\n  } catch(e) {\n    support.nonEnumArgs = true;\n  }\n}(0, 0));\n\nmodule.exports = support;\n"]}