{"version":3,"sources":["matchesProperty.js"],"names":[],"mappings":";;AAAA,IAAI,SAAS,GAAG,OAAO,CAAC,uBAAuB,CAAC;IAC5C,mBAAmB,GAAG,OAAO,CAAC,iCAAiC,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BrE,SAAS,eAAe,CAAC,GAAG,EAAE,KAAK,EAAE;AACnC,SAAO,mBAAmB,CAAC,GAAG,GAAG,EAAE,EAAE,SAAS,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC;CAC9D;;AAED,MAAM,CAAC,OAAO,GAAG,eAAe,CAAC","file":"matchesProperty-compiled.js","sourcesContent":["var baseClone = require('../internal/baseClone'),\n    baseMatchesProperty = require('../internal/baseMatchesProperty');\n\n/**\n * Creates a function which compares the property value of `key` on a given\n * object to `value`.\n *\n * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n * numbers, `Object` objects, regexes, and strings. Objects are compared by\n * their own, not inherited, enumerable properties.\n *\n * @static\n * @memberOf _\n * @category Utility\n * @param {string} key The key of the property to get.\n * @param {*} value The value to compare.\n * @returns {Function} Returns the new function.\n * @example\n *\n * var users = [\n *   { 'user': 'barney' },\n *   { 'user': 'fred' }\n * ];\n *\n * _.find(users, _.matchesProperty('user', 'fred'));\n * // => { 'user': 'fred' }\n */\nfunction matchesProperty(key, value) {\n  return baseMatchesProperty(key + '', baseClone(value, true));\n}\n\nmodule.exports = matchesProperty;\n"]}