{"version":3,"sources":["result.js"],"names":[],"mappings":";;AAAA,IAAI,UAAU,GAAG,OAAO,CAAC,oBAAoB,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgC/C,SAAS,MAAM,CAAC,MAAM,EAAE,GAAG,EAAE,YAAY,EAAE;AACzC,MAAI,KAAK,GAAG,MAAM,IAAI,IAAI,GAAG,SAAS,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;AACrD,MAAI,OAAO,KAAK,IAAI,WAAW,EAAE;AAC/B,SAAK,GAAG,YAAY,CAAC;GACtB;AACD,SAAO,UAAU,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,KAAK,CAAC;CACvD;;AAED,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC","file":"result-compiled.js","sourcesContent":["var isFunction = require('../lang/isFunction');\n\n/**\n * Resolves the value of property `key` on `object`. If the value of `key` is\n * a function it is invoked with the `this` binding of `object` and its result\n * is returned, else the property value is returned. If the property value is\n * `undefined` the `defaultValue` is used in its place.\n *\n * @static\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @param {string} key The key of the property to resolve.\n * @param {*} [defaultValue] The value returned if the property value\n *  resolves to `undefined`.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'user': 'fred', 'age': _.constant(40) };\n *\n * _.result(object, 'user');\n * // => 'fred'\n *\n * _.result(object, 'age');\n * // => 40\n *\n * _.result(object, 'status', 'busy');\n * // => 'busy'\n *\n * _.result(object, 'status', _.constant('busy'));\n * // => 'busy'\n */\nfunction result(object, key, defaultValue) {\n  var value = object == null ? undefined : object[key];\n  if (typeof value == 'undefined') {\n    value = defaultValue;\n  }\n  return isFunction(value) ? value.call(object) : value;\n}\n\nmodule.exports = result;\n"]}