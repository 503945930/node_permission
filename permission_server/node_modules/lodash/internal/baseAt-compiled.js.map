{"version":3,"sources":["baseAt.js"],"names":[],"mappings":";;AAAA,IAAI,OAAO,GAAG,OAAO,CAAC,WAAW,CAAC;IAC9B,QAAQ,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC;;;;;;;;;;;AAWrC,SAAS,MAAM,CAAC,UAAU,EAAE,KAAK,EAAE;AACjC,MAAI,KAAK,GAAG,CAAC,CAAC;MACV,MAAM,GAAG,UAAU,CAAC,MAAM;MAC1B,KAAK,GAAG,QAAQ,CAAC,MAAM,CAAC;MACxB,WAAW,GAAG,KAAK,CAAC,MAAM;MAC1B,MAAM,GAAG,KAAK,CAAC,WAAW,CAAC,CAAC;;AAEhC,SAAM,EAAE,KAAK,GAAG,WAAW,EAAE;AAC3B,QAAI,GAAG,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC;AACvB,QAAI,KAAK,EAAE;AACT,SAAG,GAAG,UAAU,CAAC,GAAG,CAAC,CAAC;AACtB,YAAM,CAAC,KAAK,CAAC,GAAG,OAAO,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,UAAU,CAAC,GAAG,CAAC,GAAG,SAAS,CAAC;KACpE,MAAM;AACL,YAAM,CAAC,KAAK,CAAC,GAAG,UAAU,CAAC,GAAG,CAAC,CAAC;KACjC;GACF;AACD,SAAO,MAAM,CAAC;CACf;;AAED,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC","file":"baseAt-compiled.js","sourcesContent":["var isIndex = require('./isIndex'),\n    isLength = require('./isLength');\n\n/**\n * The base implementation of `_.at` without support for strings and individual\n * key arguments.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {number[]|string[]} [props] The property names or indexes of elements to pick.\n * @returns {Array} Returns the new array of picked elements.\n */\nfunction baseAt(collection, props) {\n  var index = -1,\n      length = collection.length,\n      isArr = isLength(length),\n      propsLength = props.length,\n      result = Array(propsLength);\n\n  while(++index < propsLength) {\n    var key = props[index];\n    if (isArr) {\n      key = parseFloat(key);\n      result[index] = isIndex(key, length) ? collection[key] : undefined;\n    } else {\n      result[index] = collection[key];\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseAt;\n"]}