{"version":3,"sources":["baseIsEqual.js"],"names":[],"mappings":";;AAAA,IAAI,eAAe,GAAG,OAAO,CAAC,mBAAmB,CAAC,CAAC;;;;;;;;;;;;;;;AAenD,SAAS,WAAW,CAAC,KAAK,EAAE,KAAK,EAAE,UAAU,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE;;AAEtE,MAAI,KAAK,KAAK,KAAK,EAAE;;AAEnB,WAAO,KAAK,KAAK,CAAC,IAAK,CAAC,GAAG,KAAK,IAAI,CAAC,GAAG,KAAK,AAAC,CAAC;GAChD;AACD,MAAI,OAAO,GAAG,OAAO,KAAK;MACtB,OAAO,GAAG,OAAO,KAAK,CAAC;;;AAG3B,MAAI,AAAC,OAAO,IAAI,UAAU,IAAI,OAAO,IAAI,QAAQ,IAAI,OAAO,IAAI,UAAU,IAAI,OAAO,IAAI,QAAQ,IAC7F,KAAK,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,EAAE;;AAElC,WAAO,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,CAAC;GAC3C;AACD,SAAO,eAAe,CAAC,KAAK,EAAE,KAAK,EAAE,WAAW,EAAE,UAAU,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;CACxF;;AAED,MAAM,CAAC,OAAO,GAAG,WAAW,CAAC","file":"baseIsEqual-compiled.js","sourcesContent":["var baseIsEqualDeep = require('./baseIsEqualDeep');\n\n/**\n * The base implementation of `_.isEqual` without support for `this` binding\n * `customizer` functions.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {Function} [customizer] The function to customize comparing values.\n * @param {boolean} [isLoose] Specify performing partial comparisons.\n * @param {Array} [stackA] Tracks traversed `value` objects.\n * @param {Array} [stackB] Tracks traversed `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, customizer, isLoose, stackA, stackB) {\n  // Exit early for identical values.\n  if (value === other) {\n    // Treat `+0` vs. `-0` as not equal.\n    return value !== 0 || (1 / value == 1 / other);\n  }\n  var valType = typeof value,\n      othType = typeof other;\n\n  // Exit early for unlike primitive values.\n  if ((valType != 'function' && valType != 'object' && othType != 'function' && othType != 'object') ||\n      value == null || other == null) {\n    // Return `false` unless both values are `NaN`.\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, baseIsEqual, customizer, isLoose, stackA, stackB);\n}\n\nmodule.exports = baseIsEqual;\n"]}