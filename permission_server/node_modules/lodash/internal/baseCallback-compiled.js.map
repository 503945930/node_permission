{"version":3,"sources":["baseCallback.js"],"names":[],"mappings":";;AAAA,IAAI,WAAW,GAAG,OAAO,CAAC,eAAe,CAAC;IACtC,mBAAmB,GAAG,OAAO,CAAC,uBAAuB,CAAC;IACtD,YAAY,GAAG,OAAO,CAAC,gBAAgB,CAAC;IACxC,YAAY,GAAG,OAAO,CAAC,gBAAgB,CAAC;IACxC,QAAQ,GAAG,OAAO,CAAC,qBAAqB,CAAC,CAAC;;;;;;;;;;;;AAY9C,SAAS,YAAY,CAAC,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE;AAC7C,MAAI,IAAI,GAAG,OAAO,IAAI,CAAC;AACvB,MAAI,IAAI,IAAI,UAAU,EAAE;AACtB,WAAO,OAAO,OAAO,IAAI,WAAW,GAChC,IAAI,GACJ,YAAY,CAAC,IAAI,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAC;GAC3C;AACD,MAAI,IAAI,IAAI,IAAI,EAAE;AAChB,WAAO,QAAQ,CAAC;GACjB;AACD,MAAI,IAAI,IAAI,QAAQ,EAAE;AACpB,WAAO,WAAW,CAAC,IAAI,CAAC,CAAC;GAC1B;AACD,SAAO,OAAO,OAAO,IAAI,WAAW,GAChC,YAAY,CAAC,IAAI,GAAG,EAAE,CAAC,GACvB,mBAAmB,CAAC,IAAI,GAAG,EAAE,EAAE,OAAO,CAAC,CAAC;CAC7C;;AAED,MAAM,CAAC,OAAO,GAAG,YAAY,CAAC","file":"baseCallback-compiled.js","sourcesContent":["var baseMatches = require('./baseMatches'),\n    baseMatchesProperty = require('./baseMatchesProperty'),\n    baseProperty = require('./baseProperty'),\n    bindCallback = require('./bindCallback'),\n    identity = require('../utility/identity');\n\n/**\n * The base implementation of `_.callback` which supports specifying the\n * number of arguments to provide to `func`.\n *\n * @private\n * @param {*} [func=_.identity] The value to convert to a callback.\n * @param {*} [thisArg] The `this` binding of `func`.\n * @param {number} [argCount] The number of arguments to provide to `func`.\n * @returns {Function} Returns the callback.\n */\nfunction baseCallback(func, thisArg, argCount) {\n  var type = typeof func;\n  if (type == 'function') {\n    return typeof thisArg == 'undefined'\n      ? func\n      : bindCallback(func, thisArg, argCount);\n  }\n  if (func == null) {\n    return identity;\n  }\n  if (type == 'object') {\n    return baseMatches(func);\n  }\n  return typeof thisArg == 'undefined'\n    ? baseProperty(func + '')\n    : baseMatchesProperty(func + '', thisArg);\n}\n\nmodule.exports = baseCallback;\n"]}