{"version":3,"sources":["baseAssign.js"],"names":[],"mappings":";;AAAA,IAAI,QAAQ,GAAG,OAAO,CAAC,YAAY,CAAC;IAChC,IAAI,GAAG,OAAO,CAAC,gBAAgB,CAAC,CAAC;;;;;;;;;;;;AAYrC,SAAS,UAAU,CAAC,MAAM,EAAE,MAAM,EAAE,UAAU,EAAE;AAC9C,MAAI,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;AACzB,MAAI,CAAC,UAAU,EAAE;AACf,WAAO,QAAQ,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;GACxC;AACD,MAAI,KAAK,GAAG,CAAC,CAAC;MACV,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;;AAE1B,SAAO,EAAE,KAAK,GAAG,MAAM,EAAE;AACvB,QAAI,GAAG,GAAG,KAAK,CAAC,KAAK,CAAC;QAClB,KAAK,GAAG,MAAM,CAAC,GAAG,CAAC;QACnB,MAAM,GAAG,UAAU,CAAC,KAAK,EAAE,MAAM,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;;AAEjE,QAAI,CAAC,MAAM,KAAK,MAAM,GAAI,MAAM,KAAK,KAAK,GAAK,KAAK,KAAK,KAAK,CAAC,IAC1D,OAAO,KAAK,IAAI,WAAW,IAAI,EAAE,GAAG,IAAI,MAAM,CAAA,AAAC,AAAC,EAAE;AACrD,YAAM,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC;KACtB;GACF;AACD,SAAO,MAAM,CAAC;CACf;;AAED,MAAM,CAAC,OAAO,GAAG,UAAU,CAAC","file":"baseAssign-compiled.js","sourcesContent":["var baseCopy = require('./baseCopy'),\n    keys = require('../object/keys');\n\n/**\n * The base implementation of `_.assign` without support for argument juggling,\n * multiple sources, and `this` binding `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {Function} [customizer] The function to customize assigning values.\n * @returns {Object} Returns the destination object.\n */\nfunction baseAssign(object, source, customizer) {\n  var props = keys(source);\n  if (!customizer) {\n    return baseCopy(source, object, props);\n  }\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index],\n        value = object[key],\n        result = customizer(value, source[key], key, object, source);\n\n    if ((result === result ? (result !== value) : (value === value)) ||\n        (typeof value == 'undefined' && !(key in object))) {\n      object[key] = result;\n    }\n  }\n  return object;\n}\n\nmodule.exports = baseAssign;\n"]}