{"version":3,"sources":["createCache.js"],"names":[],"mappings":";;AAAA,IAAI,QAAQ,GAAG,OAAO,CAAC,YAAY,CAAC;IAChC,QAAQ,GAAG,OAAO,CAAC,qBAAqB,CAAC;IACzC,QAAQ,GAAG,OAAO,CAAC,kBAAkB,CAAC,CAAC;;;AAG3C,IAAI,GAAG,GAAG,QAAQ,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC,IAAI,GAAG,CAAC;;;AAG5C,IAAI,YAAY,GAAG,QAAQ,CAAC,YAAY,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,YAAY,CAAC;;;;;;;;;AAS1E,IAAI,WAAW,GAAG,EAAE,YAAY,IAAI,GAAG,CAAA,AAAC,GAAG,QAAQ,CAAC,IAAI,CAAC,GAAG,UAAS,MAAM,EAAE;AAC3E,SAAO,IAAI,QAAQ,CAAC,MAAM,CAAC,CAAC;CAC7B,CAAC;;AAEF,MAAM,CAAC,OAAO,GAAG,WAAW,CAAC","file":"createCache-compiled.js","sourcesContent":["var SetCache = require('./SetCache'),\n    constant = require('../utility/constant'),\n    isNative = require('../lang/isNative');\n\n/** Native method references. */\nvar Set = isNative(Set = global.Set) && Set;\n\n/* Native method references for those with the same name as other `lodash` methods. */\nvar nativeCreate = isNative(nativeCreate = Object.create) && nativeCreate;\n\n/**\n * Creates a `Set` cache object to optimize linear searches of large arrays.\n *\n * @private\n * @param {Array} [values] The values to cache.\n * @returns {null|Object} Returns the new cache object if `Set` is supported, else `null`.\n */\nvar createCache = !(nativeCreate && Set) ? constant(null) : function(values) {\n  return new SetCache(values);\n};\n\nmodule.exports = createCache;\n"]}