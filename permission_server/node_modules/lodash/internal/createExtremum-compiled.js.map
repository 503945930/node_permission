{"version":3,"sources":["createExtremum.js"],"names":[],"mappings":";;AAAA,IAAI,YAAY,GAAG,OAAO,CAAC,gBAAgB,CAAC;IACxC,cAAc,GAAG,OAAO,CAAC,kBAAkB,CAAC;IAC5C,UAAU,GAAG,OAAO,CAAC,cAAc,CAAC;IACpC,OAAO,GAAG,OAAO,CAAC,iBAAiB,CAAC;IACpC,cAAc,GAAG,OAAO,CAAC,kBAAkB,CAAC;IAC5C,QAAQ,GAAG,OAAO,CAAC,kBAAkB,CAAC;IACtC,UAAU,GAAG,OAAO,CAAC,cAAc,CAAC,CAAC;;;;;;;;;;;AAWzC,SAAS,cAAc,CAAC,SAAS,EAAE,KAAK,EAAE;AACxC,SAAO,UAAS,UAAU,EAAE,QAAQ,EAAE,OAAO,EAAE;AAC7C,QAAI,OAAO,IAAI,cAAc,CAAC,UAAU,EAAE,QAAQ,EAAE,OAAO,CAAC,EAAE;AAC5D,cAAQ,GAAG,IAAI,CAAC;KACjB;AACD,QAAI,UAAU,GAAG,QAAQ,IAAI,IAAI,CAAC;;AAElC,YAAQ,GAAG,UAAU,GAAG,QAAQ,GAAG,YAAY,CAAC,QAAQ,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC;AACtE,QAAI,UAAU,EAAE;AACd,UAAI,KAAK,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;AAChC,UAAI,CAAC,KAAK,IAAI,QAAQ,CAAC,UAAU,CAAC,EAAE;AAClC,gBAAQ,GAAG,cAAc,CAAC;OAC3B,MAAM;AACL,eAAO,SAAS,CAAC,KAAK,GAAG,UAAU,GAAG,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC;OAC/D;KACF;AACD,WAAO,UAAU,CAAC,UAAU,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;GAChD,CAAC;CACH;;AAED,MAAM,CAAC,OAAO,GAAG,cAAc,CAAC","file":"createExtremum-compiled.js","sourcesContent":["var baseCallback = require('./baseCallback'),\n    charAtCallback = require('./charAtCallback'),\n    extremumBy = require('./extremumBy'),\n    isArray = require('../lang/isArray'),\n    isIterateeCall = require('./isIterateeCall'),\n    isString = require('../lang/isString'),\n    toIterable = require('./toIterable');\n\n/**\n * Creates a `_.max` or `_.min` function.\n *\n * @private\n * @param {Function} arrayFunc The function to get the extremum value from an array.\n * @param {boolean} [isMin] Specify returning the minimum, instead of the maximum,\n *  extremum value.\n * @returns {Function} Returns the new extremum function.\n */\nfunction createExtremum(arrayFunc, isMin) {\n  return function(collection, iteratee, thisArg) {\n    if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n      iteratee = null;\n    }\n    var noIteratee = iteratee == null;\n\n    iteratee = noIteratee ? iteratee : baseCallback(iteratee, thisArg, 3);\n    if (noIteratee) {\n      var isArr = isArray(collection);\n      if (!isArr && isString(collection)) {\n        iteratee = charAtCallback;\n      } else {\n        return arrayFunc(isArr ? collection : toIterable(collection));\n      }\n    }\n    return extremumBy(collection, iteratee, isMin);\n  };\n}\n\nmodule.exports = createExtremum;\n"]}