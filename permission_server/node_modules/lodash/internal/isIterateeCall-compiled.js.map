{"version":3,"sources":["isIterateeCall.js"],"names":[],"mappings":";;AAAA,IAAI,OAAO,GAAG,OAAO,CAAC,WAAW,CAAC;IAC9B,QAAQ,GAAG,OAAO,CAAC,YAAY,CAAC;IAChC,QAAQ,GAAG,OAAO,CAAC,kBAAkB,CAAC,CAAC;;;;;;;;;;;AAW3C,SAAS,cAAc,CAAC,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE;AAC5C,MAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;AACrB,WAAO,KAAK,CAAC;GACd;AACD,MAAI,IAAI,GAAG,OAAO,KAAK,CAAC;AACxB,MAAI,IAAI,IAAI,QAAQ,EAAE;AACpB,QAAI,MAAM,GAAG,MAAM,CAAC,MAAM;QACtB,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC,IAAI,OAAO,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;GACzD,MAAM;AACL,UAAM,GAAG,IAAI,IAAI,QAAQ,IAAI,KAAK,IAAI,MAAM,CAAC;GAC9C;AACD,MAAI,MAAM,EAAE;AACV,QAAI,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;AAC1B,WAAO,KAAK,KAAK,KAAK,GAAI,KAAK,KAAK,KAAK,GAAK,KAAK,KAAK,KAAK,AAAC,CAAC;GAChE;AACD,SAAO,KAAK,CAAC;CACd;;AAED,MAAM,CAAC,OAAO,GAAG,cAAc,CAAC","file":"isIterateeCall-compiled.js","sourcesContent":["var isIndex = require('./isIndex'),\n    isLength = require('./isLength'),\n    isObject = require('../lang/isObject');\n\n/**\n * Checks if the provided arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call, else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number') {\n    var length = object.length,\n        prereq = isLength(length) && isIndex(index, length);\n  } else {\n    prereq = type == 'string' && index in object;\n  }\n  if (prereq) {\n    var other = object[index];\n    return value === value ? (value === other) : (other !== other);\n  }\n  return false;\n}\n\nmodule.exports = isIterateeCall;\n"]}