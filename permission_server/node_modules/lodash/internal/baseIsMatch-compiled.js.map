{"version":3,"sources":["baseIsMatch.js"],"names":[],"mappings":";;AAAA,IAAI,WAAW,GAAG,OAAO,CAAC,eAAe,CAAC,CAAC;;;;;;;;;;;;;;AAc3C,SAAS,WAAW,CAAC,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,kBAAkB,EAAE,UAAU,EAAE;AAC1E,MAAI,KAAK,GAAG,CAAC,CAAC;MACV,MAAM,GAAG,KAAK,CAAC,MAAM;MACrB,YAAY,GAAG,CAAC,UAAU,CAAC;;AAE/B,SAAO,EAAE,KAAK,GAAG,MAAM,EAAE;AACvB,QAAI,AAAC,YAAY,IAAI,kBAAkB,CAAC,KAAK,CAAC,GACtC,MAAM,CAAC,KAAK,CAAC,KAAK,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,GACtC,EAAE,KAAK,CAAC,KAAK,CAAC,IAAI,MAAM,CAAA,AAAC,EAC3B;AACJ,aAAO,KAAK,CAAC;KACd;GACF;AACD,OAAK,GAAG,CAAC,CAAC,CAAC;AACX,SAAO,EAAE,KAAK,GAAG,MAAM,EAAE;AACvB,QAAI,GAAG,GAAG,KAAK,CAAC,KAAK,CAAC;QAClB,QAAQ,GAAG,MAAM,CAAC,GAAG,CAAC;QACtB,QAAQ,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;;AAE7B,QAAI,YAAY,IAAI,kBAAkB,CAAC,KAAK,CAAC,EAAE;AAC7C,UAAI,MAAM,GAAG,OAAO,QAAQ,IAAI,WAAW,IAAK,GAAG,IAAI,MAAM,AAAC,CAAC;KAChE,MAAM;AACL,YAAM,GAAG,UAAU,GAAG,UAAU,CAAC,QAAQ,EAAE,QAAQ,EAAE,GAAG,CAAC,GAAG,SAAS,CAAC;AACtE,UAAI,OAAO,MAAM,IAAI,WAAW,EAAE;AAChC,cAAM,GAAG,WAAW,CAAC,QAAQ,EAAE,QAAQ,EAAE,UAAU,EAAE,IAAI,CAAC,CAAC;OAC5D;KACF;AACD,QAAI,CAAC,MAAM,EAAE;AACX,aAAO,KAAK,CAAC;KACd;GACF;AACD,SAAO,IAAI,CAAC;CACb;;AAED,MAAM,CAAC,OAAO,GAAG,WAAW,CAAC","file":"baseIsMatch-compiled.js","sourcesContent":["var baseIsEqual = require('./baseIsEqual');\n\n/**\n * The base implementation of `_.isMatch` without support for callback\n * shorthands and `this` binding.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Array} props The source property names to match.\n * @param {Array} values The source values to match.\n * @param {Array} strictCompareFlags Strict comparison flags for source values.\n * @param {Function} [customizer] The function to customize comparing objects.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\nfunction baseIsMatch(object, props, values, strictCompareFlags, customizer) {\n  var index = -1,\n      length = props.length,\n      noCustomizer = !customizer;\n\n  while (++index < length) {\n    if ((noCustomizer && strictCompareFlags[index])\n          ? values[index] !== object[props[index]]\n          : !(props[index] in object)\n        ) {\n      return false;\n    }\n  }\n  index = -1;\n  while (++index < length) {\n    var key = props[index],\n        objValue = object[key],\n        srcValue = values[index];\n\n    if (noCustomizer && strictCompareFlags[index]) {\n      var result = typeof objValue != 'undefined' || (key in object);\n    } else {\n      result = customizer ? customizer(objValue, srcValue, key) : undefined;\n      if (typeof result == 'undefined') {\n        result = baseIsEqual(srcValue, objValue, customizer, true);\n      }\n    }\n    if (!result) {\n      return false;\n    }\n  }\n  return true;\n}\n\nmodule.exports = baseIsMatch;\n"]}