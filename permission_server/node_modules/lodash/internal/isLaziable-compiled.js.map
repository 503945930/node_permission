{"version":3,"sources":["isLaziable.js"],"names":[],"mappings":";;AAAA,IAAI,WAAW,GAAG,OAAO,CAAC,eAAe,CAAC;IACtC,WAAW,GAAG,OAAO,CAAC,eAAe,CAAC;IACtC,MAAM,GAAG,OAAO,CAAC,iBAAiB,CAAC,CAAC;;;;;;;;;AASxC,SAAS,UAAU,CAAC,IAAI,EAAE;AACxB,MAAI,QAAQ,GAAG,WAAW,CAAC,IAAI,CAAC,CAAC;AACjC,SAAO,CAAC,CAAC,QAAQ,IAAI,IAAI,KAAK,MAAM,CAAC,QAAQ,CAAC,IAAI,QAAQ,IAAI,WAAW,CAAC,SAAS,CAAC;CACrF;;AAED,MAAM,CAAC,OAAO,GAAG,UAAU,CAAC","file":"isLaziable-compiled.js","sourcesContent":["var LazyWrapper = require('./LazyWrapper'),\n    getFuncName = require('./getFuncName'),\n    lodash = require('../chain/lodash');\n\n/**\n * Checks if `func` has a lazy counterpart.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` has a lazy counterpart, else `false`.\n */\nfunction isLaziable(func) {\n  var funcName = getFuncName(func);\n  return !!funcName && func === lodash[funcName] && funcName in LazyWrapper.prototype;\n}\n\nmodule.exports = isLaziable;\n"]}