{"version":3,"sources":["throttle.js"],"names":[],"mappings":";;AAAA,IAAI,QAAQ,GAAG,OAAO,CAAC,YAAY,CAAC;IAChC,QAAQ,GAAG,OAAO,CAAC,kBAAkB,CAAC,CAAC;;;AAG3C,IAAI,eAAe,GAAG,qBAAqB,CAAC;;;AAG5C,IAAI,eAAe,GAAG;AACpB,WAAS,EAAE,KAAK;AAChB,WAAS,EAAE,CAAC;AACZ,YAAU,EAAE,KAAK;CAClB,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyCF,SAAS,QAAQ,CAAC,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE;AACrC,MAAI,OAAO,GAAG,IAAI;MACd,QAAQ,GAAG,IAAI,CAAC;;AAEpB,MAAI,OAAO,IAAI,IAAI,UAAU,EAAE;AAC7B,UAAM,IAAI,SAAS,CAAC,eAAe,CAAC,CAAC;GACtC;AACD,MAAI,OAAO,KAAK,KAAK,EAAE;AACrB,WAAO,GAAG,KAAK,CAAC;GACjB,MAAM,IAAI,QAAQ,CAAC,OAAO,CAAC,EAAE;AAC5B,WAAO,GAAG,SAAS,IAAI,OAAO,GAAG,CAAC,CAAC,OAAO,CAAC,OAAO,GAAG,OAAO,CAAC;AAC7D,YAAQ,GAAG,UAAU,IAAI,OAAO,GAAG,CAAC,CAAC,OAAO,CAAC,QAAQ,GAAG,QAAQ,CAAC;GAClE;AACD,iBAAe,CAAC,OAAO,GAAG,OAAO,CAAC;AAClC,iBAAe,CAAC,OAAO,GAAG,CAAC,IAAI,CAAC;AAChC,iBAAe,CAAC,QAAQ,GAAG,QAAQ,CAAC;AACpC,SAAO,QAAQ,CAAC,IAAI,EAAE,IAAI,EAAE,eAAe,CAAC,CAAC;CAC9C;;AAED,MAAM,CAAC,OAAO,GAAG,QAAQ,CAAC","file":"throttle-compiled.js","sourcesContent":["var debounce = require('./debounce'),\n    isObject = require('../lang/isObject');\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used as an internal `_.debounce` options object by `_.throttle`. */\nvar debounceOptions = {\n  'leading': false,\n  'maxWait': 0,\n  'trailing': false\n};\n\n/**\n * Creates a function that only invokes `func` at most once per every `wait`\n * milliseconds. The created function comes with a `cancel` method to cancel\n * delayed invocations. Provide an options object to indicate that `func`\n * should be invoked on the leading and/or trailing edge of the `wait` timeout.\n * Subsequent calls to the throttled function return the result of the last\n * `func` call.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n * on the trailing edge of the timeout only if the the throttled function is\n * invoked more than once during the `wait` timeout.\n *\n * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\n * for details over the differences between `_.throttle` and `_.debounce`.\n *\n * @static\n * @memberOf _\n * @category Function\n * @param {Function} func The function to throttle.\n * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n * @param {Object} [options] The options object.\n * @param {boolean} [options.leading=true] Specify invoking on the leading\n *  edge of the timeout.\n * @param {boolean} [options.trailing=true] Specify invoking on the trailing\n *  edge of the timeout.\n * @returns {Function} Returns the new throttled function.\n * @example\n *\n * // avoid excessively updating the position while scrolling\n * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n *\n * // invoke `renewToken` when the click event is fired, but not more than once every 5 minutes\n * jQuery('.interactive').on('click', _.throttle(renewToken, 300000, {\n *   'trailing': false\n * }));\n *\n * // cancel a trailing throttled call\n * jQuery(window).on('popstate', throttled.cancel);\n */\nfunction throttle(func, wait, options) {\n  var leading = true,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  if (options === false) {\n    leading = false;\n  } else if (isObject(options)) {\n    leading = 'leading' in options ? !!options.leading : leading;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n  debounceOptions.leading = leading;\n  debounceOptions.maxWait = +wait;\n  debounceOptions.trailing = trailing;\n  return debounce(func, wait, debounceOptions);\n}\n\nmodule.exports = throttle;\n"]}