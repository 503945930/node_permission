{"version":3,"sources":["isEqual.js"],"names":[],"mappings":";;AAAA,IAAI,WAAW,GAAG,OAAO,CAAC,yBAAyB,CAAC;IAChD,YAAY,GAAG,OAAO,CAAC,0BAA0B,CAAC;IAClD,kBAAkB,GAAG,OAAO,CAAC,gCAAgC,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6CnE,SAAS,OAAO,CAAC,KAAK,EAAE,KAAK,EAAE,UAAU,EAAE,OAAO,EAAE;AAClD,YAAU,GAAG,OAAO,UAAU,IAAI,UAAU,IAAI,YAAY,CAAC,UAAU,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC;AACrF,MAAI,CAAC,UAAU,IAAI,kBAAkB,CAAC,KAAK,CAAC,IAAI,kBAAkB,CAAC,KAAK,CAAC,EAAE;AACzE,WAAO,KAAK,KAAK,KAAK,CAAC;GACxB;AACD,MAAI,MAAM,GAAG,UAAU,GAAG,UAAU,CAAC,KAAK,EAAE,KAAK,CAAC,GAAG,SAAS,CAAC;AAC/D,SAAO,OAAO,MAAM,IAAI,WAAW,GAAG,WAAW,CAAC,KAAK,EAAE,KAAK,EAAE,UAAU,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC;CACxF;;AAED,MAAM,CAAC,OAAO,GAAG,OAAO,CAAC","file":"isEqual-compiled.js","sourcesContent":["var baseIsEqual = require('../internal/baseIsEqual'),\n    bindCallback = require('../internal/bindCallback'),\n    isStrictComparable = require('../internal/isStrictComparable');\n\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent. If `customizer` is provided it is invoked to compare values.\n * If `customizer` returns `undefined` comparisons are handled by the method\n * instead. The `customizer` is bound to `thisArg` and invoked with three\n * arguments: (value, other [, index|key]).\n *\n * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n * numbers, `Object` objects, regexes, and strings. Objects are compared by\n * their own, not inherited, enumerable properties. Functions and DOM nodes\n * are **not** supported. Provide a customizer function to extend support\n * for comparing other values.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {Function} [customizer] The function to customize comparing values.\n * @param {*} [thisArg] The `this` binding of `customizer`.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'user': 'fred' };\n * var other = { 'user': 'fred' };\n *\n * object == other;\n * // => false\n *\n * _.isEqual(object, other);\n * // => true\n *\n * // using a customizer callback\n * var array = ['hello', 'goodbye'];\n * var other = ['hi', 'goodbye'];\n *\n * _.isEqual(array, other, function(value, other) {\n *   if (_.every([value, other], RegExp.prototype.test, /^h(?:i|ello)$/)) {\n *     return true;\n *   }\n * });\n * // => true\n */\nfunction isEqual(value, other, customizer, thisArg) {\n  customizer = typeof customizer == 'function' && bindCallback(customizer, thisArg, 3);\n  if (!customizer && isStrictComparable(value) && isStrictComparable(other)) {\n    return value === other;\n  }\n  var result = customizer ? customizer(value, other) : undefined;\n  return typeof result == 'undefined' ? baseIsEqual(value, other, customizer) : !!result;\n}\n\nmodule.exports = isEqual;\n"]}