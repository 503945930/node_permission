{"version":3,"sources":["includes.js"],"names":[],"mappings":";;AAAA,IAAI,WAAW,GAAG,OAAO,CAAC,yBAAyB,CAAC;IAChD,OAAO,GAAG,OAAO,CAAC,iBAAiB,CAAC;IACpC,cAAc,GAAG,OAAO,CAAC,4BAA4B,CAAC;IACtD,QAAQ,GAAG,OAAO,CAAC,sBAAsB,CAAC;IAC1C,QAAQ,GAAG,OAAO,CAAC,kBAAkB,CAAC;IACtC,MAAM,GAAG,OAAO,CAAC,kBAAkB,CAAC,CAAC;;;AAGzC,IAAI,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCzB,SAAS,QAAQ,CAAC,UAAU,EAAE,MAAM,EAAE,SAAS,EAAE,KAAK,EAAE;AACtD,MAAI,MAAM,GAAG,UAAU,GAAG,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC;AAChD,MAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;AACrB,cAAU,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC;AAChC,UAAM,GAAG,UAAU,CAAC,MAAM,CAAC;GAC5B;AACD,MAAI,CAAC,MAAM,EAAE;AACX,WAAO,KAAK,CAAC;GACd;AACD,MAAI,OAAO,SAAS,IAAI,QAAQ,IAAK,KAAK,IAAI,cAAc,CAAC,MAAM,EAAE,SAAS,EAAE,KAAK,CAAC,AAAC,EAAE;AACvF,aAAS,GAAG,CAAC,CAAC;GACf,MAAM;AACL,aAAS,GAAG,SAAS,GAAG,CAAC,GAAG,SAAS,CAAC,MAAM,GAAG,SAAS,EAAE,CAAC,CAAC,GAAI,SAAS,IAAI,CAAC,AAAC,CAAC;GACjF;AACD,SAAO,AAAC,OAAO,UAAU,IAAI,QAAQ,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,QAAQ,CAAC,UAAU,CAAC,GAChF,SAAS,GAAG,MAAM,IAAI,UAAU,CAAC,OAAO,CAAC,MAAM,EAAE,SAAS,CAAC,GAAG,CAAC,CAAC,GAChE,WAAW,CAAC,UAAU,EAAE,MAAM,EAAE,SAAS,CAAC,GAAG,CAAC,CAAC,AAAC,CAAC;CACvD;;AAED,MAAM,CAAC,OAAO,GAAG,QAAQ,CAAC","file":"includes-compiled.js","sourcesContent":["var baseIndexOf = require('../internal/baseIndexOf'),\n    isArray = require('../lang/isArray'),\n    isIterateeCall = require('../internal/isIterateeCall'),\n    isLength = require('../internal/isLength'),\n    isString = require('../lang/isString'),\n    values = require('../object/values');\n\n/* Native method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * Checks if `value` is in `collection` using `SameValueZero` for equality\n * comparisons. If `fromIndex` is negative, it is used as the offset from\n * the end of `collection`.\n *\n * **Note:** [`SameValueZero`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\n * comparisons are like strict equality comparisons, e.g. `===`, except that\n * `NaN` matches `NaN`.\n *\n * @static\n * @memberOf _\n * @alias contains, include\n * @category Collection\n * @param {Array|Object|string} collection The collection to search.\n * @param {*} target The value to search for.\n * @param {number} [fromIndex=0] The index to search from.\n * @param- {Object} [guard] Enables use as a callback for functions like `_.reduce`.\n * @returns {boolean} Returns `true` if a matching element is found, else `false`.\n * @example\n *\n * _.includes([1, 2, 3], 1);\n * // => true\n *\n * _.includes([1, 2, 3], 1, 2);\n * // => false\n *\n * _.includes({ 'user': 'fred', 'age': 40 }, 'fred');\n * // => true\n *\n * _.includes('pebbles', 'eb');\n * // => true\n */\nfunction includes(collection, target, fromIndex, guard) {\n  var length = collection ? collection.length : 0;\n  if (!isLength(length)) {\n    collection = values(collection);\n    length = collection.length;\n  }\n  if (!length) {\n    return false;\n  }\n  if (typeof fromIndex != 'number' || (guard && isIterateeCall(target, fromIndex, guard))) {\n    fromIndex = 0;\n  } else {\n    fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : (fromIndex || 0);\n  }\n  return (typeof collection == 'string' || !isArray(collection) && isString(collection))\n    ? (fromIndex < length && collection.indexOf(target, fromIndex) > -1)\n    : (baseIndexOf(collection, target, fromIndex) > -1);\n}\n\nmodule.exports = includes;\n"]}