{"version":3,"sources":["sortByOrder.js"],"names":[],"mappings":";;AAAA,IAAI,eAAe,GAAG,OAAO,CAAC,6BAA6B,CAAC;IACxD,OAAO,GAAG,OAAO,CAAC,iBAAiB,CAAC;IACpC,cAAc,GAAG,OAAO,CAAC,4BAA4B,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6B3D,SAAS,WAAW,CAAC,UAAU,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE;AACrD,MAAI,UAAU,IAAI,IAAI,EAAE;AACtB,WAAO,EAAE,CAAC;GACX;AACD,MAAI,KAAK,IAAI,cAAc,CAAC,KAAK,EAAE,MAAM,EAAE,KAAK,CAAC,EAAE;AACjD,UAAM,GAAG,IAAI,CAAC;GACf;AACD,MAAI,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;AACnB,SAAK,GAAG,KAAK,IAAI,IAAI,GAAG,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC;GACtC;AACD,MAAI,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;AACpB,UAAM,GAAG,MAAM,IAAI,IAAI,GAAG,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC;GACzC;AACD,SAAO,eAAe,CAAC,UAAU,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;CACnD;;AAED,MAAM,CAAC,OAAO,GAAG,WAAW,CAAC","file":"sortByOrder-compiled.js","sourcesContent":["var baseSortByOrder = require('../internal/baseSortByOrder'),\n    isArray = require('../lang/isArray'),\n    isIterateeCall = require('../internal/isIterateeCall');\n\n/**\n * This method is like `_.sortByAll` except that it allows specifying the\n * sort orders of the property names to sort by. A truthy value in `orders`\n * will sort the corresponding property name in ascending order while a\n * falsey value will sort it in descending order.\n *\n * @static\n * @memberOf _\n * @category Collection\n * @param {Array|Object|string} collection The collection to iterate over.\n * @param {string[]} props The property names to sort by.\n * @param {boolean[]} orders The sort orders of `props`.\n * @param- {Object} [guard] Enables use as a callback for functions like `_.reduce`.\n * @returns {Array} Returns the new sorted array.\n * @example\n *\n * var users = [\n *   { 'user': 'barney', 'age': 26 },\n *   { 'user': 'fred',   'age': 40 },\n *   { 'user': 'barney', 'age': 36 },\n *   { 'user': 'fred',   'age': 30 }\n * ];\n *\n * // sort by `user` in ascending order and by `age` in descending order\n * _.map(_.sortByOrder(users, ['user', 'age'], [true, false]), _.values);\n * // => [['barney', 36], ['barney', 26], ['fred', 40], ['fred', 30]]\n */\nfunction sortByOrder(collection, props, orders, guard) {\n  if (collection == null) {\n    return [];\n  }\n  if (guard && isIterateeCall(props, orders, guard)) {\n    orders = null;\n  }\n  if (!isArray(props)) {\n    props = props == null ? [] : [props];\n  }\n  if (!isArray(orders)) {\n    orders = orders == null ? [] : [orders];\n  }\n  return baseSortByOrder(collection, props, orders);\n}\n\nmodule.exports = sortByOrder;\n"]}