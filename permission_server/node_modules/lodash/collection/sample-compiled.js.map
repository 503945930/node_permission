{"version":3,"sources":["sample.js"],"names":[],"mappings":";;AAAA,IAAI,UAAU,GAAG,OAAO,CAAC,wBAAwB,CAAC;IAC9C,cAAc,GAAG,OAAO,CAAC,4BAA4B,CAAC;IACtD,OAAO,GAAG,OAAO,CAAC,WAAW,CAAC;IAC9B,UAAU,GAAG,OAAO,CAAC,wBAAwB,CAAC,CAAC;;;AAGnD,IAAI,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC;;;;;;;;;;;;;;;;;;;;AAoBzB,SAAS,MAAM,CAAC,UAAU,EAAE,CAAC,EAAE,KAAK,EAAE;AACpC,MAAI,KAAK,GAAG,cAAc,CAAC,UAAU,EAAE,CAAC,EAAE,KAAK,CAAC,GAAG,CAAC,IAAI,IAAI,EAAE;AAC5D,cAAU,GAAG,UAAU,CAAC,UAAU,CAAC,CAAC;AACpC,QAAI,MAAM,GAAG,UAAU,CAAC,MAAM,CAAC;AAC/B,WAAO,MAAM,GAAG,CAAC,GAAG,UAAU,CAAC,UAAU,CAAC,CAAC,EAAE,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC;GACvE;AACD,MAAI,MAAM,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;AACjC,QAAM,CAAC,MAAM,GAAG,SAAS,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAI,CAAC,CAAC,IAAI,CAAC,AAAC,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC;AAChE,SAAO,MAAM,CAAC;CACf;;AAED,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC","file":"sample-compiled.js","sourcesContent":["var baseRandom = require('../internal/baseRandom'),\n    isIterateeCall = require('../internal/isIterateeCall'),\n    shuffle = require('./shuffle'),\n    toIterable = require('../internal/toIterable');\n\n/* Native method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min;\n\n/**\n * Gets a random element or `n` random elements from a collection.\n *\n * @static\n * @memberOf _\n * @category Collection\n * @param {Array|Object|string} collection The collection to sample.\n * @param {number} [n] The number of elements to sample.\n * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n * @returns {*} Returns the random sample(s).\n * @example\n *\n * _.sample([1, 2, 3, 4]);\n * // => 2\n *\n * _.sample([1, 2, 3, 4], 2);\n * // => [3, 1]\n */\nfunction sample(collection, n, guard) {\n  if (guard ? isIterateeCall(collection, n, guard) : n == null) {\n    collection = toIterable(collection);\n    var length = collection.length;\n    return length > 0 ? collection[baseRandom(0, length - 1)] : undefined;\n  }\n  var result = shuffle(collection);\n  result.length = nativeMin(n < 0 ? 0 : (+n || 0), result.length);\n  return result;\n}\n\nmodule.exports = sample;\n"]}