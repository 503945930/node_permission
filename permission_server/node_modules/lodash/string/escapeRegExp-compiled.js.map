{"version":3,"sources":["escapeRegExp.js"],"names":[],"mappings":";;AAAA,IAAI,YAAY,GAAG,OAAO,CAAC,0BAA0B,CAAC,CAAC;;;;;;;AAOvD,IAAI,aAAa,GAAG,uBAAuB;IACvC,gBAAgB,GAAG,MAAM,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;;;;;;;;;;;;;;;;AAgBpD,SAAS,YAAY,CAAC,MAAM,EAAE;AAC5B,QAAM,GAAG,YAAY,CAAC,MAAM,CAAC,CAAC;AAC9B,SAAO,AAAC,MAAM,IAAI,gBAAgB,CAAC,IAAI,CAAC,MAAM,CAAC,GAC3C,MAAM,CAAC,OAAO,CAAC,aAAa,EAAE,MAAM,CAAC,GACrC,MAAM,CAAC;CACZ;;AAED,MAAM,CAAC,OAAO,GAAG,YAAY,CAAC","file":"escapeRegExp-compiled.js","sourcesContent":["var baseToString = require('../internal/baseToString');\n\n/**\n * Used to match `RegExp` [special characters](http://www.regular-expressions.info/characters.html#special).\n * In addition to special characters the forward slash is escaped to allow for\n * easier `eval` use and `Function` compilation.\n */\nvar reRegExpChars = /[.*+?^${}()|[\\]\\/\\\\]/g,\n    reHasRegExpChars = RegExp(reRegExpChars.source);\n\n/**\n * Escapes the `RegExp` special characters \"\\\", \"/\", \"^\", \"$\", \".\", \"|\", \"?\",\n * \"*\", \"+\", \"(\", \")\", \"[\", \"]\", \"{\" and \"}\" in `string`.\n *\n * @static\n * @memberOf _\n * @category String\n * @param {string} [string=''] The string to escape.\n * @returns {string} Returns the escaped string.\n * @example\n *\n * _.escapeRegExp('[lodash](https://lodash.com/)');\n * // => '\\[lodash\\]\\(https:\\/\\/lodash\\.com\\/\\)'\n */\nfunction escapeRegExp(string) {\n  string = baseToString(string);\n  return (string && reHasRegExpChars.test(string))\n    ? string.replace(reRegExpChars, '\\\\$&')\n    : string;\n}\n\nmodule.exports = escapeRegExp;\n"]}