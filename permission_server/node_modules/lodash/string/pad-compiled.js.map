{"version":3,"sources":["pad.js"],"names":[],"mappings":";;AAAA,IAAI,YAAY,GAAG,OAAO,CAAC,0BAA0B,CAAC;IAClD,aAAa,GAAG,OAAO,CAAC,2BAA2B,CAAC,CAAC;;;AAGzD,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI;IAChB,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;;;AAGvB,IAAI,cAAc,GAAG,MAAM,CAAC,QAAQ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;AAwBrC,SAAS,GAAG,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE;AAClC,UAAM,GAAG,YAAY,CAAC,MAAM,CAAC,CAAC;AAC9B,UAAM,GAAG,CAAC,MAAM,CAAC;;AAEjB,QAAI,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC;AAC9B,QAAI,SAAS,IAAI,MAAM,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,EAAE;AAClD,eAAO,MAAM,CAAC;KACf;AACD,QAAI,GAAG,GAAG,CAAC,MAAM,GAAG,SAAS,CAAA,GAAI,CAAC;QAC9B,UAAU,GAAG,KAAK,CAAC,GAAG,CAAC;QACvB,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;;AAE5B,SAAK,GAAG,aAAa,CAAC,EAAE,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC;AAC9C,WAAO,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,UAAU,CAAC,GAAG,MAAM,GAAG,KAAK,CAAC;CACpD;;AAED,MAAM,CAAC,OAAO,GAAG,GAAG,CAAC","file":"pad-compiled.js","sourcesContent":["var baseToString = require('../internal/baseToString'),\n    createPadding = require('../internal/createPadding');\n\n/** Native method references. */\nvar ceil = Math.ceil,\n    floor = Math.floor;\n\n/* Native method references for those with the same name as other `lodash` methods. */\nvar nativeIsFinite = global.isFinite;\n\n/**\n * Pads `string` on the left and right sides if it is shorter than `length`.\n * Padding characters are truncated if they can't be evenly divided by `length`.\n *\n * @static\n * @memberOf _\n * @category String\n * @param {string} [string=''] The string to pad.\n * @param {number} [length=0] The padding length.\n * @param {string} [chars=' '] The string used as padding.\n * @returns {string} Returns the padded string.\n * @example\n *\n * _.pad('abc', 8);\n * // => '  abc   '\n *\n * _.pad('abc', 8, '_-');\n * // => '_-abc_-_'\n *\n * _.pad('abc', 3);\n * // => 'abc'\n */\nfunction pad(string, length, chars) {\n  string = baseToString(string);\n  length = +length;\n\n  var strLength = string.length;\n  if (strLength >= length || !nativeIsFinite(length)) {\n    return string;\n  }\n  var mid = (length - strLength) / 2,\n      leftLength = floor(mid),\n      rightLength = ceil(mid);\n\n  chars = createPadding('', rightLength, chars);\n  return chars.slice(0, leftLength) + string + chars;\n}\n\nmodule.exports = pad;\n"]}