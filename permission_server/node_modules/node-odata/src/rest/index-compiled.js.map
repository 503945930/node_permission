{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index-compiled.js","sourcesContent":["\"use strict\";\n\nimport http from 'http';\nimport { Router } from 'express';\nimport list from './list';\nimport post from './post';\nimport put from './put';\nimport del from './delete';\nimport get from './get';\n\nconst getRouter = (mongooseModel, { url, hooks, actions, options }) => {\n  let resourceListURL = `/${url}`;\n  let resourceURL = `${resourceListURL}\\\\(:id\\\\)`;\n\n  let routes = [\n    {\n      method: 'post',\n      url: resourceListURL,\n      ctrl: post,\n      hook: hooks.post,\n    },\n    {\n      method: 'put',\n      url: resourceURL,\n      ctrl: put,\n      hook: hooks.put,\n    },\n    {\n      method: 'delete',\n      url: resourceURL,\n      ctrl: del,\n      hook: hooks.delete,\n    },\n    {\n      method: 'get',\n      url: resourceURL,\n      ctrl: get,\n      hook: hooks.get,\n    },\n    {\n      method: 'get',\n      url: resourceListURL,\n      ctrl: list,\n      hook: hooks.list,\n    },\n  ];\n\n  let router = Router();\n\n  // add REST routes.\n  routes.map((route) => {\n    let { method, url, ctrl, hook } = route;\n    router[method](url, (req, res, next) => {\n      authorizePipe(req, res, hook.auth)\n      .then(function() { return beforePipe(req, res, hook.before); })\n      .then(function() { return ctrl(req, mongooseModel, options); })\n      .then(function(result) { return respondPipe(req, res, result); })\n      .then(function(data) { return afterPipe(req, res, hook.after, data); })\n      .catch(function(result) { errorPipe(req, res, result); });\n    });\n  });\n\n  // add ACTION routes.\n  Object.keys(actions).map(function(url) {\n    let action = actions[url];\n    router.post(`${resourceURL}${url}`, (req, res, next) => {\n      authorizePipe(req, res, action.auth).then(function() {\n        action(req, res, next);\n      }).catch(function(result) { errorPipe(req, res, result); });\n    });\n  });\n\n  return router;\n};\n\nfunction authorizePipe(req, res, auth) {\n  return new Promise((resolve, reject) => {\n    if (auth !== undefined) {\n      if (!auth(req, res)) {\n        return reject({ status: 401 });\n      }\n    }\n    resolve();\n  });\n}\n\nfunction beforePipe(req, res, before) {\n  return new Promise((resolve, reject) => {\n    if (before) {\n      before(req.body, req, res);\n    }\n    resolve();\n  });\n}\n\nfunction respondPipe(req, res, result) {\n  return new Promise((resolve, reject) => {\n    let status = result.status || 200;\n    let data = result.entity;\n    res.status(status).jsonp(data);\n    resolve(data);\n  });\n}\n\nfunction afterPipe(req, res, after, data) {\n  return new Promise((resolve, reject) => {\n    if (after) {\n      after(data, req.body, req, res);\n    }\n    resolve();\n  });\n}\n\nfunction errorPipe(req, res, result) {\n  return new Promise((resolve, reject) => {\n    let status = result.status || 200;\n    let text = result.text || http.STATUS_CODES[status];\n    res.status(status).send(text);\n  });\n}\n\nexport default { getRouter };\n"]}