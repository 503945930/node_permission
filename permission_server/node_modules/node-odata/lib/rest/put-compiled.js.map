{"version":3,"sources":["put.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAEb,MAAM,CAAC,cAAc,CAAC,OAAO,EAAE,YAAY,EAAE;AAC3C,OAAK,EAAE,IAAI;CACZ,CAAC,CAAC;;AAEH,IAAI,OAAO,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;;AAEhC,IAAI,OAAO,GAAG,4EAA4E,CAAC;;AAE3F,OAAO,CAAC,SAAS,CAAC,GAAG,UAAU,GAAG,EAAE,aAAa,EAAE;AACjD,SAAO,IAAI,OAAO,CAAC,UAAU,OAAO,EAAE,MAAM,EAAE;AAC5C,iBAAa,CAAC,OAAO,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,UAAU,GAAG,EAAE,MAAM,EAAE;AACnE,UAAI,GAAG,EAAE;AACP,eAAO,MAAM,CAAC,GAAG,CAAC,CAAC;OACpB;;AAED,UAAI,CAAC,MAAM,EAAE;;AAEX,YAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE;AAChC,iBAAO,MAAM,CAAC,EAAE,MAAM,EAAE,GAAG,EAAE,EAAE,EAAE,IAAI,EAAE,kBAAkB,EAAE,CAAC,CAAC;SAC9D;AACD,cAAM,GAAG,IAAI,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;AACrC,cAAM,CAAC,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC;AAC3B,cAAM,CAAC,IAAI,CAAC,UAAU,GAAG,EAAE;AACzB,cAAI,GAAG,EAAE;AACP,mBAAO,MAAM,CAAC,GAAG,CAAC,CAAC;WACpB;AACD,iBAAO,OAAO,CAAC,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC;SACjD,CAAC,CAAC;OACJ,MAAM;AACL,SAAC,YAAY;;AAEX,cAAI,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC;AACtD,gBAAM,GAAG,CAAC,CAAC,EAAE,OAAO,CAAC,MAAM,CAAA,CAAE,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAC/C,gBAAM,CAAC,IAAI,CAAC,UAAU,GAAG,EAAE;AACzB,gBAAI,GAAG,EAAE;AACP,qBAAO,MAAM,CAAC,GAAG,CAAC,CAAC;aACpB;;AAED,mBAAO,OAAO,CAAC,EAAE,MAAM,EAAE,MAAM,EAAE,YAAY,EAAE,YAAY,EAAE,CAAC,CAAC;WAChE,CAAC,CAAC;SACJ,CAAA,EAAG,CAAC;OACN;KACF,CAAC,CAAC;GACJ,CAAC,CAAC;CACJ,CAAC;;AAEF,MAAM,CAAC,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC","file":"put-compiled.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _lodash = require('lodash');\n\nvar uuidReg = /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i;\n\nexports['default'] = function (req, MongooseModel) {\n  return new Promise(function (resolve, reject) {\n    MongooseModel.findOne({ _id: req.params.id }, function (err, entity) {\n      if (err) {\n        return reject(err);\n      }\n\n      if (!entity) {\n        // create entity\n        if (!uuidReg.test(req.params.id)) {\n          return reject({ status: 400 }, { text: 'Id is not valid.' });\n        }\n        entity = new MongooseModel(req.body);\n        entity._id = req.params.id;\n        entity.save(function (err) {\n          if (err) {\n            return reject(err);\n          }\n          return resolve({ status: 201, entity: entity });\n        });\n      } else {\n        (function () {\n          // edit entity\n          var originEntity = JSON.parse(JSON.stringify(entity));\n          entity = (0, _lodash.extend)(entity, req.body);\n          entity.save(function (err) {\n            if (err) {\n              return reject(err);\n            }\n\n            return resolve({ entity: entity, originEntity: originEntity });\n          });\n        })();\n      }\n    });\n  });\n};\n\nmodule.exports = exports['default'];"]}