{"version":3,"sources":["collection.js"],"names":[],"mappings":"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","file":"collection-compiled.js","sourcesContent":["\"use strict\";\n\nvar checkCollectionName = require('./utils').checkCollectionName\n  , ObjectID = require('mongodb-core').BSON.ObjectID\n  , Long = require('mongodb-core').BSON.Long\n  , Code = require('mongodb-core').BSON.Code\n  , f = require('util').format\n  , AggregationCursor = require('./aggregation_cursor')\n  , MongoError = require('mongodb-core').MongoError\n  , shallowClone = require('./utils').shallowClone\n  , isObject = require('./utils').isObject\n  , toError = require('./utils').toError\n  , normalizeHintField = require('./utils').normalizeHintField\n  , handleCallback = require('./utils').handleCallback\n  , decorateCommand = require('./utils').decorateCommand\n  , formattedOrderClause = require('./utils').formattedOrderClause\n  , ReadPreference = require('./read_preference')\n  , CoreReadPreference = require('mongodb-core').ReadPreference\n  , CommandCursor = require('./command_cursor')\n  , Cursor = require('./cursor')\n  , unordered = require('./bulk/unordered')\n  , ordered = require('./bulk/ordered');\n\n/**\n * @fileOverview The **Collection** class is an internal class that embodies a MongoDB collection\n * allowing for insert/update/remove/find and other command operation on that MongoDB collection.\n * \n * **COLLECTION Cannot directly be instantiated**\n * @example\n * var MongoClient = require('mongodb').MongoClient,\n *   test = require('assert');\n * // Connection url\n * var url = 'mongodb://localhost:27017/test';\n * // Connect using MongoClient\n * MongoClient.connect(url, function(err, db) {\n *   // Create a collection we want to drop later\n *   var col = db.collection('createIndexExample1');\n *   // Show that duplicate records got dropped\n *   col.find({}).toArray(function(err, items) {\n *     test.equal(null, err);\n *     test.equal(4, items.length);\n *     db.close();\n *   });\n * });\n */\n\n/**\n * Create a new Collection instance (INTERNAL TYPE, do not instantiate directly)\n * @class\n * @property {string} collectionName Get the collection name.\n * @property {string} namespace Get the full collection namespace.\n * @property {object} writeConcern The current write concern values.\n * @property {object} hint Get current index hint for collection.\n * @return {Collection} a Collection instance.\n */\nvar Collection = function(db, topology, dbName, name, pkFactory, options) {  \n  checkCollectionName(name);\n  var self = this;\n  // Unpack variables\n  var internalHint = null;\n  var opts = options != null && ('object' === typeof options) ? options : {};\n  var slaveOk = options == null || options.slaveOk == null ? db.slaveOk : options.slaveOk;\n  var serializeFunctions = options == null || options.serializeFunctions == null ? db.serializeFunctions : options.serializeFunctions;\n  var raw = options == null || options.raw == null ? db.raw : options.raw;\n  var readPreference = null;\n  var collectionHint = null;\n  var namespace = f(\"%s.%s\", dbName, name);\n\n  // Assign the right collection level readPreference\n  if(options && options.readPreference) {\n    readPreference = options.readPreference;\n  } else if(db.options.readPreference) {\n    readPreference = db.options.readPreference;\n  }\n\n  // Set custom primary key factory if provided\n  pkFactory = pkFactory == null\n    ? ObjectID\n    : pkFactory;\n\n  // Internal state\n  this.s = {\n    // Set custom primary key factory if provided\n      pkFactory: pkFactory\n    // Db\n    , db: db\n    // Topology\n    , topology: topology\n    // dbName\n    , dbName: dbName\n    // Options\n    , options: options\n    // Namespace\n    , namespace: namespace\n    // Read preference\n    , readPreference: readPreference\n    // Raw\n    , raw: raw\n    // SlaveOK\n    , slaveOk: slaveOk\n    // Serialize functions\n    , serializeFunctions: serializeFunctions\n    // internalHint\n    , internalHint: internalHint\n    // collectionHint\n    , collectionHint: collectionHint\n    // Name\n    , name: name\n  }\n}\n\nObject.defineProperty(Collection.prototype, 'collectionName', {\n  enumerable: true, get: function() { return this.s.name; }\n});\n\nObject.defineProperty(Collection.prototype, 'namespace', {\n  enumerable: true, get: function() { return this.s.namespace; }\n});\n\nObject.defineProperty(Collection.prototype, 'writeConcern', {\n  enumerable:true,\n  get: function() { \n    var ops = {};\n    if(this.s.options.w != null) ops.w = this.s.options.w;\n    if(this.s.options.j != null) ops.j = this.s.options.j;\n    if(this.s.options.fsync != null) ops.fsync = this.s.options.fsync;\n    if(this.s.options.wtimeout != null) ops.wtimeout = this.s.options.wtimeout;\n    return ops;\n  }\n});\n\n/**\n * @ignore\n */\nObject.defineProperty(Collection.prototype, \"hint\", {\n    enumerable: true\n  , get: function () { return this.s.collectionHint; }\n  , set: function (v) { this.s.collectionHint = normalizeHintField(v); }\n});\n\n/**\n * Creates a cursor for a query that can be used to iterate over results from MongoDB\n * @method\n * @param {object} query The cursor query object.\n * @throws {MongoError}\n * @return {Cursor}\n */\nCollection.prototype.find = function() {\n  var options\n    , args = Array.prototype.slice.call(arguments, 0)\n    , has_callback = typeof args[args.length - 1] === 'function'\n    , has_weird_callback = typeof args[0] === 'function'\n    , callback = has_callback ? args.pop() : (has_weird_callback ? args.shift() : null)\n    , len = args.length\n    , selector = len >= 1 ? args[0] : {}\n    , fields = len >= 2 ? args[1] : undefined;\n\n  if(len === 1 && has_weird_callback) {\n    // backwards compat for callback?, options case\n    selector = {};\n    options = args[0];\n  }\n\n  if(len === 2 && !Array.isArray(fields)) {\n    var fieldKeys = Object.keys(fields);\n    var is_option = false;\n\n    for(var i = 0; i < fieldKeys.length; i++) {\n      if(testForFields[fieldKeys[i]] != null) {\n        is_option = true;\n        break;\n      }\n    }\n\n    if(is_option) {\n      options = fields;\n      fields = undefined;\n    } else {\n      options = {};\n    }\n  } else if(len === 2 && Array.isArray(fields) && !Array.isArray(fields[0])) {\n    var newFields = {};\n    // Rewrite the array\n    for(var i = 0; i < fields.length; i++) {\n      newFields[fields[i]] = 1;\n    }\n    // Set the fields\n    fields = newFields;\n  }\n\n  if(3 === len) {\n    options = args[2];\n  }\n\n  // Ensure selector is not null\n  selector = selector == null ? {} : selector;\n  // Validate correctness off the selector\n  var object = selector;\n  if(Buffer.isBuffer(object)) {\n    var object_size = object[0] | object[1] << 8 | object[2] << 16 | object[3] << 24;\n    if(object_size != object.length)  {\n      var error = new Error(\"query selector raw message size does not match message header size [\" + object.length + \"] != [\" + object_size + \"]\");\n      error.name = 'MongoError';\n      throw error;\n    }\n  }\n\n  // Validate correctness of the field selector\n  var object = fields;\n  if(Buffer.isBuffer(object)) {\n    var object_size = object[0] | object[1] << 8 | object[2] << 16 | object[3] << 24;\n    if(object_size != object.length)  {\n      var error = new Error(\"query fields raw message size does not match message header size [\" + object.length + \"] != [\" + object_size + \"]\");\n      error.name = 'MongoError';\n      throw error;\n    }\n  }\n\n  // Check special case where we are using an objectId\n  if(selector instanceof ObjectID || (selector != null && selector._bsontype == 'ObjectID')) {\n    selector = {_id:selector};\n  }\n\n  // If it's a serialized fields field we need to just let it through\n  // user be warned it better be good\n  if(options && options.fields && !(Buffer.isBuffer(options.fields))) {\n    fields = {};\n\n    if(Array.isArray(options.fields)) {\n      if(!options.fields.length) {\n        fields['_id'] = 1;\n      } else {\n        for (var i = 0, l = options.fields.length; i < l; i++) {\n          fields[options.fields[i]] = 1;\n        }\n      }\n    } else {\n      fields = options.fields;\n    }\n  }\n\n  if (!options) options = {};\n\n  var newOptions = {};\n  // Make a shallow copy of options\n  for (var key in options) {\n    newOptions[key] = options[key];\n  }\n\n  // Unpack options\n  newOptions.skip = len > 3 ? args[2] : options.skip ? options.skip : 0;\n  newOptions.limit = len > 3 ? args[3] : options.limit ? options.limit : 0;\n  newOptions.raw = options.raw != null && typeof options.raw === 'boolean' ? options.raw : this.s.raw;\n  newOptions.hint = options.hint != null ? normalizeHintField(options.hint) : this.s.collectionHint;\n  newOptions.timeout = len == 5 ? args[4] : typeof options.timeout === 'undefined' ? undefined : options.timeout;\n  // // If we have overridden slaveOk otherwise use the default db setting\n  newOptions.slaveOk = options.slaveOk != null ? options.slaveOk : this.s.db.slaveOk;\n\n  // Add read preference if needed\n  newOptions = getReadPreference(this, newOptions, this.s.db, this);\n  // Set slave ok to true if read preference different from primary\n  if(newOptions.readPreference != null\n    && (newOptions.readPreference != 'primary' || newOptions.readPreference.mode != 'primary')) {\n    newOptions.slaveOk = true;\n  }\n\n  // Ensure the query is an object\n  if(selector != null && typeof selector != 'object') {\n    throw new MongoError(\"query selector must be an object\");\n  }\n\n  // Build the find command\n  var findCommand = {\n      find: this.s.namespace\n    , limit: newOptions.limit\n    , skip: newOptions.skip\n    , query: selector\n  }\n\n  // Ensure we use the right await data option\n  if(typeof newOptions.awaitdata == 'boolean')  {\n    newOptions.awaitData = newOptions.awaitdata\n  };\n  \n  // Translate to new command option noCursorTimeout\n  if(typeof newOptions.timeout == 'boolean') newOptions.noCursorTimeout = newOptions.timeout;\n\n  // Merge in options to command\n  for(var name in newOptions) {\n    if(newOptions[name] != null) findCommand[name] = newOptions[name];\n  }\n\n  // Format the fields\n  var formatFields = function(fields) {\n    var object = {};\n    if(Array.isArray(fields)) {\n      for(var i = 0; i < fields.length; i++) {\n        if(Array.isArray(fields[i])) {\n          object[fields[i][0]] = fields[i][1];\n        } else {\n          object[fields[i][0]] = 1;\n        }\n      }\n    } else {\n      object = fields;\n    }\n\n    return object;\n  }\n\n  // Special treatment for the fields selector\n  if(fields) findCommand.fields = formatFields(fields);\n\n  // Add db object to the new options\n  newOptions.db = this.s.db;\n\n  // Set raw if available at collection level\n  if(newOptions.raw == null && this.s.raw) newOptions.raw = this.s.raw;\n\n  // Sort options\n  if(findCommand.sort) \n    findCommand.sort = formattedOrderClause(findCommand.sort);\n\n  // Create the cursor\n  if(typeof callback == 'function') return handleCallback(callback, null, this.s.topology.cursor(this.s.namespace, findCommand, newOptions));\n  return this.s.topology.cursor(this.s.namespace, findCommand, newOptions);\n}\n\n/**\n * Inserts a single document into MongoDB.\n * @method\n * @param {object} doc Document to insert.\n * @param {object} [options=null] Optional settings.\n * @param {(number|string)} [options.w=null] The write concern.\n * @param {number} [options.wtimeout=null] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {boolean} [options.serializeFunctions=false] Serialize functions on any object.\n * @param {boolean} [options.forceServerObjectId=false] Force server to assign _id values instead of driver.\n * @param {Collection~writeOpCallback} callback The command result callback   \n * @return {null}\n */\nCollection.prototype.insertOne = function(doc, options, callback) {\n  if(typeof options == 'function') callback = options, options = {};\n  if(Array.isArray(doc)) return callback(new MongoError('doc parameter must be an object'));\n  insertDocuments(this, [doc], options, function(err, r) {\n    if(callback == null) return;\n    if(err && callback) return callback(err);\n    r.insertedCount = r.result.n;\n    r.insertedId = doc._id;\n    if(callback) callback(null, r);\n  });\n}\n\n/**\n * Inserts an array of documents into MongoDB.\n * @method\n * @param {object[]} docs Documents to insert.\n * @param {object} [options=null] Optional settings.\n * @param {(number|string)} [options.w=null] The write concern.\n * @param {number} [options.wtimeout=null] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {boolean} [options.serializeFunctions=false] Serialize functions on any object.\n * @param {boolean} [options.forceServerObjectId=false] Force server to assign _id values instead of driver.\n * @param {Collection~writeOpCallback} callback The command result callback   \n * @return {null}\n */\nCollection.prototype.insertMany = function(docs, options, callback) {\n  if(typeof options == 'function') callback = options, options = {};\n  if(!Array.isArray(docs)) return callback(new MongoError('docs parameter must be an array of documents'));    \n  insertDocuments(this, docs, options, function(err, r) {\n    if(callback == null) return;\n    if(err && callback) return callback(err);\n    r.insertedCount = r.result.n;\n    var ids = [];\n    for(var i = 0; i < docs.length; i++) {\n      if(docs[i]._id) ids.push(docs[i]._id);\n    }\n    r.insertedIds = ids;\n    if(callback) callback(null, r);\n  });\n}\n\n/**\n * @typedef {Object} Collection~BulkWriteOpResult\n * @property {number} insertedCount Number of documents inserted.\n * @property {number} matchedCount Number of documents matched for update.\n * @property {number} modifiedCount Number of documents modified.\n * @property {number} deletedCount Number of documents deleted.\n * @property {number} upsertedCount Number of documents upserted.\n * @property {object} insertedIds Inserted document generated Id's, hash key is the index of the originating operation\n * @property {object} upsertedIds Upserted document generated Id's, hash key is the index of the originating operation\n * @property {object} result The command result object.\n */\n\n/**\n * The callback format for inserts\n * @callback Collection~bulkWriteOpCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {Collection~BulkWriteOpResult} result The result object if the command was executed successfully.\n */\n\n/**\n * Perform a bulkWrite operation without a fluent API\n *\n * Legal operation types are\n *\n *  { insertOne: { document: { a: 1 } } }\n *\n *  { updateOne: { filter: {a:2}, update: {$set: {a:2}}, upsert:true } }\n *\n *  { updateMany: { filter: {a:2}, update: {$set: {a:2}}, upsert:true } }\n *\n *  { deleteOne: { filter: {c:1} } }\n *\n *  { deleteMany: { filter: {c:1} } }\n *\n *  { replaceOne: { filter: {c:3}, replacement: {c:4}, upsert:true}}\n *\n * @method\n * @param {object[]} operations Bulk operations to perform.\n * @param {object} [options=null] Optional settings.\n * @param {(number|string)} [options.w=null] The write concern.\n * @param {number} [options.wtimeout=null] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {boolean} [options.serializeFunctions=false] Serialize functions on any object.\n * @param {Collection~bulkWriteOpCallback} callback The command result callback   \n * @return {null}\n */\nCollection.prototype.bulkWrite = function(operations, options, callback) {\n  if(typeof options == 'function') callback = options, options = {};\n  if(typeof callback != 'function') throw new MongoError(\"bulkWrite must have a callback function specified\");\n  if(!Array.isArray(operations)) throw new MongoError(\"operations must be an array of documents\");\n  var bulk = options.ordered == true || options.ordered == null ? this.initializeOrderedBulkOp() : this.initializeUnorderedBulkOp();\n  \n  // for each op go through and add to the bulk\n  for(var i = 0; i < operations.length; i++) {\n    bulk.raw(operations[i]);\n  }\n\n  // Final options for write concern\n  var finalOptions = writeConcern(shallowClone(options), this.s.db, this, options);\n  var writeCon = finalOptions.writeConcern ? finalOptions.writeConcern : {};\n\n  // Execute the bulk\n  bulk.execute(writeCon, function(err, r) {\n    r.insertedCount = r.nInserted;\n    r.matchedCount = r.nMatched;\n    r.modifiedCount = r.nModified || 0;\n    r.deletedCount = r.nRemoved;\n    r.upsertedCount = r.getUpsertedIds().length;\n    r.upsertedIds = {};\n    r.insertedIds = {};\n\n    // Inserted documents\n    var inserted = r.getInsertedIds();\n    // Map inserted ids\n    for(var i = 0; i < inserted.length; i++) {\n      r.insertedIds[inserted[i].index] = inserted[i]._id;\n    }\n\n    // Upserted documents\n    var upserted = r.getUpsertedIds();\n    // Map upserted ids\n    for(var i = 0; i < upserted.length; i++) {\n      r.upsertedIds[upserted[i].index] = upserted[i]._id;\n    }    \n\n    // Return the results\n    callback(null, r);\n  });\n}\n\nvar insertDocuments = function(self, docs, options, callback) {\n  if(typeof options == 'function') callback = options, options = {};\n  options = options || {};\n  // Ensure we are operating on an array op docs\n  docs = Array.isArray(docs) ? docs : [docs];\n\n  // Get the write concern options\n  var finalOptions = writeConcern(shallowClone(options), self.s.db, self, options);\n  if(typeof finalOptions.checkKeys != 'boolean') finalOptions.checkKeys = true;\n\n  // If keep going set unordered\n  if(options.keepGoing == true) finalOptions.ordered = false;\n  finalOptions['serializeFunctions'] = options['serializeFunctions'] || self.s.serializeFunctions;\n\n  // Add _id if not specified\n  for(var i = 0; i < docs.length; i++) {\n    if(docs[i]._id == null) docs[i]._id = self.s.pkFactory.createPk();\n  }\n\n  // File inserts\n  self.s.topology.insert(self.s.namespace, docs, finalOptions, function(err, result) {\n    if(callback == null) return;\n    if(err) return handleCallback(callback, err);\n    if(result == null) return handleCallback(callback, null, null);\n    if(result.result.code) return handleCallback(callback, toError(result.result));\n    if(result.result.writeErrors) return handleCallback(callback, toError(result.result.writeErrors[0]));\n    // Add docs to the list\n    result.ops = docs;\n    // Return the results\n    handleCallback(callback, null, result);   \n  });  \n}\n\n/**\n * @typedef {Object} Collection~WriteOpResult\n * @property {object[]} ops All the documents inserted using insertOne/insertMany/replaceOne. Documents contain the _id field if forceServerObjectId == false for insertOne/insertMany\n * @property {object} connection The connection object used for the operation.\n * @property {object} result The command result object.\n */\n\n/**\n * The callback format for inserts\n * @callback Collection~writeOpCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {Collection~WriteOpResult} result The result object if the command was executed successfully.\n */\n\n/**\n * Inserts a single document or a an array of documents into MongoDB.\n * @method\n * @param {(object|object[])} docs Documents to insert.\n * @param {object} [options=null] Optional settings.\n * @param {(number|string)} [options.w=null] The write concern.\n * @param {number} [options.wtimeout=null] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {boolean} [options.serializeFunctions=false] Serialize functions on any object.\n * @param {boolean} [options.forceServerObjectId=false] Force server to assign _id values instead of driver.\n * @param {Collection~writeOpCallback} callback The command result callback   \n * @return {null}\n * @deprecated Use insertOne, insertMany or bulkWrite\n */\nCollection.prototype.insert = function(docs, options, callback) {\n  return insertDocuments(this, docs, options, callback);\n}\n\n/**\n * Update a single document on MongoDB\n * @method\n * @param {object} filter The Filter used to select the document to update\n * @param {object} update The update operations to be applied to the document\n * @param {object} [options=null] Optional settings.\n * @param {boolean} [options.upsert=false] Update operation is an upsert.\n * @param {(number|string)} [options.w=null] The write concern.\n * @param {number} [options.wtimeout=null] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {Collection~writeOpCallback} callback The command result callback   \n * @return {null}\n */\nCollection.prototype.updateOne = function(filter, update, options, callback) {\n  if(typeof options == 'function') callback = options, options = {};\n  options = shallowClone(options)\n  // Set single document update\n  options.multi = false;\n  // Execute update\n  updateDocuments(this, filter, update, options, function(err, r) {\n    if(callback == null) return;\n    if(err && callback) return callback(err);\n    r.matchedCount = r.result.n;\n    r.modifiedCount = r.result.nModified != null ? r.result.nModified : r.result.n;\n    r.upsertedId = Array.isArray(r.result.upserted) && r.result.upserted.length > 0 ? r.result.upserted[0] : null;\n    r.upsertedCount = Array.isArray(r.result.upserted) && r.result.upserted.length ? r.result.upserted.length : 0;\n    if(callback) callback(null, r);\n  });\n}\n\n/**\n * Replace a document on MongoDB\n * @method\n * @param {object} filter The Filter used to select the document to update\n * @param {object} doc The Document that replaces the matching document\n * @param {object} [options=null] Optional settings.\n * @param {boolean} [options.upsert=false] Update operation is an upsert.\n * @param {(number|string)} [options.w=null] The write concern.\n * @param {number} [options.wtimeout=null] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {Collection~writeOpCallback} callback The command result callback   \n * @return {null}\n */\nCollection.prototype.replaceOne = function(filter, update, options, callback) {\n  if(typeof options == 'function') callback = options, options = {};\n  options = shallowClone(options)\n  // Set single document update\n  options.multi = false;\n  // Execute update\n  updateDocuments(this, filter, update, options, function(err, r) {\n    if(callback == null) return;\n    if(err && callback) return callback(err);\n    r.matchedCount = r.result.n;\n    r.modifiedCount = r.result.nModified != null ? r.result.nModified : r.result.n;\n    r.upsertedId = Array.isArray(r.result.upserted) && r.result.upserted.length > 0 ? r.result.upserted[0] : null;\n    r.upsertedCount = Array.isArray(r.result.upserted) && r.result.upserted.length ? r.result.upserted.length : 0;\n    r.ops = [update];\n    if(callback) callback(null, r);\n  });\n}\n\n/**\n * Update multiple documents on MongoDB\n * @method\n * @param {object} filter The Filter used to select the document to update\n * @param {object} update The update operations to be applied to the document\n * @param {object} [options=null] Optional settings.\n * @param {boolean} [options.upsert=false] Update operation is an upsert.\n * @param {(number|string)} [options.w=null] The write concern.\n * @param {number} [options.wtimeout=null] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {Collection~writeOpCallback} callback The command result callback   \n * @return {null}\n */\nCollection.prototype.updateMany = function(filter, update, options, callback) {\n  if(typeof options == 'function') callback = options, options = {};\n  options = shallowClone(options)\n  // Set single document update\n  options.multi = true;\n  // Execute update\n  updateDocuments(this, filter, update, options, function(err, r) {\n    if(callback == null) return;\n    if(err && callback) return callback(err);\n    r.matchedCount = r.result.n;\n    r.modifiedCount = r.result.nModified != null ? r.result.nModified : r.result.n;\n    r.upsertedId = Array.isArray(r.result.upserted) && r.result.upserted.length > 0 ? r.result.upserted[0] : null;\n    r.upsertedCount = Array.isArray(r.result.upserted) && r.result.upserted.length ? r.result.upserted.length : 0;\n    if(callback) callback(null, r);\n  });\n}\n\nvar updateDocuments = function(self, selector, document, options, callback) {\n  if('function' === typeof options) callback = options, options = null;\n  if(options == null) options = {};\n  if(!('function' === typeof callback)) callback = null;\n\n  // If we are not providing a selector or document throw\n  if(selector == null || typeof selector != 'object') return callback(toError(\"selector must be a valid JavaScript object\"));\n  if(document == null || typeof document != 'object') return callback(toError(\"document must be a valid JavaScript object\"));\n\n  // Get the write concern options\n  var finalOptions = writeConcern(shallowClone(options), self.s.db, self, options);\n\n  // Do we return the actual result document\n  // Either use override on the function, or go back to default on either the collection\n  // level or db\n  finalOptions['serializeFunctions'] = options['serializeFunctions'] || self.s.serializeFunctions;\n\n  // Execute the operation\n  var op = {q: selector, u: document};\n  if(options.upsert) op.upsert = true;\n  if(options.multi) op.multi = true;\n\n  // Update options\n  self.s.topology.update(self.s.namespace, [op], finalOptions, function(err, result) {\n    if(callback == null) return;\n    if(err) return handleCallback(callback, err, null);\n    if(result == null) return handleCallback(callback, null, null);\n    if(result.result.code) return handleCallback(callback, toError(result.result));\n    if(result.result.writeErrors) return handleCallback(callback, toError(result.result.writeErrors[0]));\n    // Return the results\n    handleCallback(callback, null, result);   \n  });  \n}\n\n/**\n * Updates documents.\n * @method\n * @param {object} selector The selector for the update operation.\n * @param {object} document The update document.\n * @param {object} [options=null] Optional settings.\n * @param {(number|string)} [options.w=null] The write concern.\n * @param {number} [options.wtimeout=null] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {boolean} [options.upsert=false] Update operation is an upsert.\n * @param {boolean} [options.multi=false] Update one/all documents with operation.\n * @param {Collection~writeOpCallback} callback The command result callback\n * @throws {MongoError}\n * @return {null}\n * @deprecated use updateOne, updateMany or bulkWrite\n */\nCollection.prototype.update = function(selector, document, options, callback) {\n  return updateDocuments(this, selector, document, options, callback);\n}\n\n/**\n * Delete a document on MongoDB\n * @method\n * @param {object} filter The Filter used to select the document to remove\n * @param {object} [options=null] Optional settings.\n * @param {(number|string)} [options.w=null] The write concern.\n * @param {number} [options.wtimeout=null] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {Collection~writeOpCallback} callback The command result callback   \n * @return {null}\n */\nCollection.prototype.deleteOne = function(filter, options, callback) {\n  if(typeof options == 'function') callback = options, options = {};\n  var options = shallowClone(options);    \n  options.single = true;\n  removeDocuments(this, filter, options, function(err, r) {\n    if(callback == null) return;\n    if(err && callback) return callback(err);\n    r.deletedCount = r.result.n;\n    if(callback) callback(null, r);\n  });\n}\n\nCollection.prototype.removeOne = Collection.prototype.deleteOne;\n\n/**\n * Delete multiple documents on MongoDB\n * @method\n * @param {object} filter The Filter used to select the documents to remove\n * @param {object} [options=null] Optional settings.\n * @param {(number|string)} [options.w=null] The write concern.\n * @param {number} [options.wtimeout=null] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {Collection~writeOpCallback} callback The command result callback   \n * @return {null}\n */\nCollection.prototype.deleteMany = function(filter, options, callback) {\n  if(typeof options == 'function') callback = options, options = {};\n  var options = shallowClone(options);    \n  options.single = false;\n  removeDocuments(this, filter, options, function(err, r) {\n    if(callback == null) return;\n    if(err && callback) return callback(err);\n    r.deletedCount = r.result.n;\n    if(callback) callback(null, r);\n  });\n}\n\nCollection.prototype.removeMany = Collection.prototype.deleteMany;\n\nvar removeDocuments = function(self, selector, options, callback) {\n  if(typeof options == 'function') {\n    callback = options, options = {};\n  } else if (typeof selector === 'function') {\n    callback = selector;\n    options = {};\n    selector = {};\n  }\n\n  // Create an empty options object if the provided one is null\n  options = options || {};\n\n  // Get the write concern options\n  var finalOptions = writeConcern(shallowClone(options), self.s.db, self, options);\n\n  // If selector is null set empty\n  if(selector == null) selector = {};\n\n  // Build the op\n  var op = {q: selector, limit: 0};\n  if(options.single) op.limit = 1;\n\n  // Execute the remove\n  self.s.topology.remove(self.s.namespace, [op], finalOptions, function(err, result) {\n    if(callback == null) return;\n    if(err) return handleCallback(callback, err, null);\n    if(result == null) return handleCallback(callback, null, null);\n    if(result.result.code) return handleCallback(callback, toError(result.result));\n    if(result.result.writeErrors) return handleCallback(callback, toError(result.result.writeErrors[0]));\n    // Return the results\n    handleCallback(callback, null, result);   \n  });  \n}\n\n/**\n * Remove documents.\n * @method\n * @param {object} selector The selector for the update operation.\n * @param {object} [options=null] Optional settings.\n * @param {(number|string)} [options.w=null] The write concern.\n * @param {number} [options.wtimeout=null] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {boolean} [options.single=false] Removes the first document found.\n * @param {Collection~writeOpCallback} callback The command result callback\n * @return {null}\n * @deprecated use deleteOne, deleteMany or bulkWrite\n */\nCollection.prototype.remove = function(selector, options, callback) {\n  return removeDocuments(this, selector, options, callback);\n}\n\n/**\n * Save a document. Simple full document replacement function. Not recommended for efficiency, use atomic\n * operators and update instead for more efficient operations.\n * @method\n * @param {object} doc Document to save\n * @param {object} [options=null] Optional settings.\n * @param {(number|string)} [options.w=null] The write concern.\n * @param {number} [options.wtimeout=null] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {Collection~writeOpCallback} callback The command result callback\n * @return {null}\n */\nCollection.prototype.save = function(doc, options, callback) {\n  if(typeof options == 'function') callback = options, options = {};\n  options = options || {};\n\n  // Get the write concern options\n  var finalOptions = writeConcern(shallowClone(options), this.s.db, this, options);\n  // Establish if we need to perform an insert or update\n  if(doc._id != null) {\n    finalOptions.upsert = true;\n    return updateDocuments(this, {_id: doc._id}, doc, finalOptions, callback);\n  }\n\n  // Insert the document\n  insertDocuments(this, [doc], options, function(err, r) {\n    if(callback == null) return;\n    if(doc == null) return handleCallback(callback, null, null);\n    if(err) return handleCallback(callback, err, null);\n    handleCallback(callback, null, r);\n  });\n}\n\n/**\n * The callback format for results\n * @callback Collection~resultCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {object} result The result object if the command was executed successfully.\n */\n\n/**\n * Fetches the first document that matches the query\n * @method\n * @param {object} query Query for find Operation\n * @param {object} [options=null] Optional settings.\n * @param {number} [options.limit=0] Sets the limit of documents returned in the query.\n * @param {(array|object)} [options.sort=null] Set to sort the documents coming back from the query. Array of indexes, [['a', 1]] etc.\n * @param {object} [options.fields=null] The fields to return in the query. Object of fields to include or exclude (not both), {'a':1} \n * @param {number} [options.skip=0] Set to skip N documents ahead in your query (useful for pagination).\n * @param {Object} [options.hint=null] Tell the query to use specific indexes in the query. Object of indexes to use, {'_id':1}\n * @param {boolean} [options.explain=false] Explain the query instead of returning the data.\n * @param {boolean} [options.snapshot=false] Snapshot query.\n * @param {boolean} [options.timeout=false] Specify if the cursor can timeout.\n * @param {boolean} [options.tailable=false] Specify if the cursor is tailable.\n * @param {number} [options.batchSize=0] Set the batchSize for the getMoreCommand when iterating over the query results.\n * @param {boolean} [options.returnKey=false] Only return the index key.\n * @param {number} [options.maxScan=null] Limit the number of items to scan. \n * @param {number} [options.min=null] Set index bounds.\n * @param {number} [options.max=null] Set index bounds.\n * @param {boolean} [options.showDiskLoc=false] Show disk location of results.\n * @param {string} [options.comment=null] You can put a $comment field on a query to make looking in the profiler logs simpler.\n * @param {boolean} [options.raw=false] Return all BSON documents as Raw Buffer documents.\n * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {boolean} [options.partial=false] Specify if the cursor should return partial results when querying against a sharded system\n * @param {number} [options.maxTimeMS=null] Number of miliseconds to wait before aborting the query.\n * @param {Collection~resultCallback} callback The command result callback\n * @return {null}\n */\nCollection.prototype.findOne = function() {    \n  var self = this;\n  var args = Array.prototype.slice.call(arguments, 0);\n  var callback = args.pop();\n  var cursor = this.find.apply(this, args).limit(-1).batchSize(1);\n\n  // Return the item\n  cursor.next(function(err, item) {\n    if(err != null) return handleCallback(callback, toError(err), null);\n    handleCallback(callback, null, item);\n  });\n}\n\n/**\n * The callback format for the collection method, must be used if strict is specified\n * @callback Collection~collectionResultCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {Collection} collection The collection instance.\n */\n\n/**\n * Rename the collection.\n *\n * @method\n * @param {string} newName New name of of the collection.\n * @param {object} [options=null] Optional settings.\n * @param {boolean} [options.dropTarget=false] Drop the target name collection if it previously exists.\n * @param {Collection~collectionResultCallback} callback The results callback\n * @return {null}\n */\nCollection.prototype.rename = function(newName, opt, callback) {\n  var self = this;\n  if(typeof opt == 'function') callback = opt, opt = {};\n  // Check the collection name\n  checkCollectionName(newName);\n  // Build the command\n  var renameCollection = f(\"%s.%s\", this.s.dbName, this.s.name);\n  var toCollection =  f(\"%s.%s\", this.s.dbName, newName);\n  var dropTarget = typeof opt.dropTarget == 'boolean' ? opt.dropTarget : false;\n  var cmd = {'renameCollection':renameCollection, 'to':toCollection, 'dropTarget':dropTarget};\n\n  // Execute against admin\n  self.s.db.admin().command(cmd, opt, function(err, doc) {\n    if(err) return handleCallback(callback, err, null);\n    // We have an error\n    if(doc.errmsg) return handleCallback(callback, toError(doc), null);\n    try {\n      return handleCallback(callback, null, new Collection(self.s.db, self.s.topology, self.s.dbName, newName, self.s.pkFactory, self.s.options));\n    } catch(err) {\n      return handleCallback(callback, toError(err), null);\n    }\n  });\n}\n\n/**\n * Drop the collection from the database, removing it permanently. New accesses will create a new collection.\n *\n * @method\n * @param {Collection~resultCallback} callback The results callback\n * @return {null}\n */\nCollection.prototype.drop = function(callback) {\n  this.s.db.dropCollection(this.s.name, callback);\n}\n\n/**\n * Returns the options of the collection.\n *\n * @method\n * @param {Collection~resultCallback} callback The results callback\n * @return {null}\n */\nCollection.prototype.options = function(callback) {\n  var self = this;\n  this.s.db.listCollections({name: this.s.name}).toArray(function(err, collections) {\n    if(err) return handleCallback(callback, err);\n    if(collections.length == 0) return handleCallback(callback, new MongoError(f(\"collection %s not found\", self.s.namespace)));\n    handleCallback(callback, err, collections[0].options || null);      \n  });\n}  \n\n/**\n * Returns if the collection is a capped collection\n *\n * @method\n * @param {Collection~resultCallback} callback The results callback\n * @return {null}\n */\nCollection.prototype.isCapped = function(callback) {\n  this.options(function(err, document) {\n    if(err) return handleCallback(callback, err);\n    handleCallback(callback, null, document && document.capped);\n  });    \n}\n\n/**\n * Creates an index on the db and collection collection.\n * @method\n * @param {(string|object)} fieldOrSpec Defines the index.\n * @param {object} [options=null] Optional settings.\n * @param {(number|string)} [options.w=null] The write concern.\n * @param {number} [options.wtimeout=null] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {boolean} [options.unique=false] Creates an unique index.\n * @param {boolean} [options.sparse=false] Creates a sparse index.\n * @param {boolean} [options.background=false] Creates the index in the background, yielding whenever possible.\n * @param {boolean} [options.dropDups=false] A unique index cannot be created on a key that has pre-existing duplicate values. If you would like to create the index anyway, keeping the first document the database indexes and deleting all subsequent documents that have duplicate value\n * @param {number} [options.min=null] For geospatial indexes set the lower bound for the co-ordinates.\n * @param {number} [options.max=null] For geospatial indexes set the high bound for the co-ordinates.\n * @param {number} [options.v=null] Specify the format version of the indexes.\n * @param {number} [options.expireAfterSeconds=null] Allows you to expire data on indexes applied to a data (MongoDB 2.2 or higher)\n * @param {number} [options.name=null] Override the autogenerated index name (useful if the resulting name is larger than 128 bytes)\n * @param {Collection~resultCallback} callback The command result callback\n * @return {null}\n */\nCollection.prototype.createIndex = function(fieldOrSpec, options, callback) {\n  var args = Array.prototype.slice.call(arguments, 1);\n  callback = args.pop();\n  options = args.length ? args.shift() || {} : {};\n  options = typeof callback === 'function' ? options : callback;\n  options = options == null ? {} : options;\n  // Execute create index\n  this.s.db.createIndex(this.s.name, fieldOrSpec, options, callback);\n}\n\n/**\n * Creates multiple indexes in the collection, this method is only supported for\n * MongoDB 2.6 or higher. Earlier version of MongoDB will throw a command not supported\n * error. Index specifications are defined at http://docs.mongodb.org/manual/reference/command/createIndexes/.\n * @method\n * @param {array} indexSpecs An array of index specifications to be created \n * @param {Collection~resultCallback} callback The command result callback\n * @return {null}\n */\nCollection.prototype.createIndexes = function(indexSpecs, callback) {\n  // Ensure we generate the correct name if the parameter is not set\n  for(var i = 0; i < indexSpecs.length; i++) {\n    if(indexSpecs[i].name == null) {\n      var keys = [];\n\n      for(var name in indexSpecs[i].key) {\n        keys.push(f('%s_%s', name, indexSpecs[i].key[name]));\n      }\n\n      // Set the name\n      indexSpecs[i].name = keys.join('_');\n    }\n  }\n\n  // Execute the index\n  this.s.db.command({ \n    createIndexes: this.s.name, indexes: indexSpecs\n  }, callback);\n}\n\n/**\n * Drops an index from this collection.\n * @method\n * @param {string} indexName Name of the index to drop.\n * @param {object} [options=null] Optional settings.\n * @param {(number|string)} [options.w=null] The write concern.\n * @param {number} [options.wtimeout=null] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {Collection~resultCallback} callback The command result callback\n * @return {null}\n */\nCollection.prototype.dropIndex = function(indexName, options, callback) {\n  var args = Array.prototype.slice.call(arguments, 1);\n  callback = args.pop();\n  options = args.length ? args.shift() || {} : {};\n\n  // Delete index command\n  var cmd = {'deleteIndexes':this.s.name, 'index':indexName};  \n\n  // Execute command\n  this.s.db.command(cmd, options, function(err, result) {\n    if(typeof callback != 'function') return;\n    if(err) return handleCallback(callback, err, null);\n    handleCallback(callback, null, result);\n  });\n}\n\n/**\n * Drops all indexes from this collection.\n * @method\n * @param {Collection~resultCallback} callback The command result callback\n * @return {null}\n */\nCollection.prototype.dropIndexes = function(callback) {\n  this.dropIndex('*', function (err, result) {\n    if(err) return handleCallback(callback, err, false);\n    handleCallback(callback, null, true);\n  });  \n}\n\n/**\n * Drops all indexes from this collection.\n * @method\n * @deprecated use dropIndexes\n * @param {Collection~resultCallback} callback The command result callback\n * @return {null}\n */\nCollection.prototype.dropAllIndexes = Collection.prototype.dropIndexes;\n\n/**\n * Reindex all indexes on the collection\n * Warning: reIndex is a blocking operation (indexes are rebuilt in the foreground) and will be slow for large collections.\n * @method\n * @param {Collection~resultCallback} callback The command result callback\n * @return {null}\n */\nCollection.prototype.reIndex = function(options, callback) {\n  if(typeof options == 'function') callback = options, options = {};\n  options = options || {};\n  \n  // Reindex\n  var cmd = {'reIndex':this.s.name};\n\n  // Execute the command\n  this.s.db.command(cmd, options, function(err, result) {\n    if(callback == null) return;\n    if(err) return handleCallback(callback, err, null);\n    handleCallback(callback, null, result.ok ? true : false);\n  });\n}\n\n/**\n * Get the list of all indexes information for the collection.\n *\n * @method\n * @param {object} [options=null] Optional settings.\n * @param {number} [options.batchSize=null] The batchSize for the returned command cursor or if pre 2.8 the systems batch collection\n * @return {CommandCursor}\n */\nCollection.prototype.listIndexes = function(options) {\n  options = options || {};\n  // Clone the options\n  options = shallowClone(options);\n  // Set the CommandCursor constructor\n  options.cursorFactory = CommandCursor;\n\n  // We have a list collections command\n  if(this.s.db.serverConfig.capabilities().hasListIndexesCommand) {\n    // Cursor options\n    var cursor = options.batchSize ? {batchSize: options.batchSize} : {}\n    // Build the command\n    var command = { listIndexes: this.s.name, cursor: cursor };\n    // Execute the cursor\n    return this.s.topology.cursor(f('%s.$cmd', this.s.dbName), command, options);\n  }\n\n  // Get the namespace\n  var ns = f('%s.system.indexes', this.s.dbName);\n  // Get the query\n  return this.s.topology.cursor(ns, {find: ns, query: {ns: this.s.namespace}}, options);\n};\n\n/**\n * Ensures that an index exists, if it does not it creates it\n * @method\n * @deprecated use createIndexes instead\n * @param {(string|object)} fieldOrSpec Defines the index.\n * @param {object} [options=null] Optional settings.\n * @param {(number|string)} [options.w=null] The write concern.\n * @param {number} [options.wtimeout=null] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {boolean} [options.unique=false] Creates an unique index.\n * @param {boolean} [options.sparse=false] Creates a sparse index.\n * @param {boolean} [options.background=false] Creates the index in the background, yielding whenever possible.\n * @param {boolean} [options.dropDups=false] A unique index cannot be created on a key that has pre-existing duplicate values. If you would like to create the index anyway, keeping the first document the database indexes and deleting all subsequent documents that have duplicate value\n * @param {number} [options.min=null] For geospatial indexes set the lower bound for the co-ordinates.\n * @param {number} [options.max=null] For geospatial indexes set the high bound for the co-ordinates.\n * @param {number} [options.v=null] Specify the format version of the indexes.\n * @param {number} [options.expireAfterSeconds=null] Allows you to expire data on indexes applied to a data (MongoDB 2.2 or higher)\n * @param {number} [options.name=null] Override the autogenerated index name (useful if the resulting name is larger than 128 bytes)\n * @param {Collection~resultCallback} callback The command result callback\n * @return {null}\n */\nCollection.prototype.ensureIndex = function(fieldOrSpec, options, callback) {\n  if(typeof options == 'function') callback = options, options = {};\n  options = options || {};\n  this.s.db.ensureIndex(this.s.name, fieldOrSpec, options, callback);\n}\n\n/**\n * Checks if one or more indexes exist on the collection, fails on first non-existing index\n * @method\n * @param {(string|array)} indexes One or more index names to check.\n * @param {Collection~resultCallback} callback The command result callback\n * @return {null}\n */\nCollection.prototype.indexExists = function(indexes, callback) {\n  this.indexInformation(function(err, indexInformation) {\n    // If we have an error return\n    if(err != null) return handleCallback(callback, err, null);\n    // Let's check for the index names\n    if(!Array.isArray(indexes)) return handleCallback(callback, null, indexInformation[indexes] != null);\n    // Check in list of indexes\n    for(var i = 0; i < indexes.length; i++) {\n      if(indexInformation[indexes[i]] == null) {\n        return handleCallback(callback, null, false);\n      }\n    }\n\n    // All keys found return true\n    return handleCallback(callback, null, true);\n  });    \n}\n\n/**\n * Retrieves this collections index info.\n * @method\n * @param {object} [options=null] Optional settings.\n * @param {boolean} [options.full=false] Returns the full raw index information.\n * @param {Collection~resultCallback} callback The command result callback\n * @return {null}\n */\nCollection.prototype.indexInformation = function(options, callback) {\n  // Unpack calls\n  var args = Array.prototype.slice.call(arguments, 0);\n  callback = args.pop();\n  options = args.length ? args.shift() || {} : {};\n  // Call the index information\n  this.s.db.indexInformation(this.s.name, options, callback);    \n}\n\n/**\n * The callback format for results\n * @callback Collection~countCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {number} result The count of documents that matched the query.\n */\n\n/**\n * Count number of matching documents in the db to a query.\n * @method\n * @param {object} query The query for the count.\n * @param {object} [options=null] Optional settings.\n * @param {boolean} [options.limit=null] The limit of documents to count.\n * @param {boolean} [options.skip=null] The number of documents to skip for the count.\n * @param {string} [options.hint=null] An index name hint for the query.\n * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {Collection~countCallback} callback The command result callback\n * @return {null}\n */\nCollection.prototype.count = function(query, options, callback) {\n  var args = Array.prototype.slice.call(arguments, 0);\n  callback = args.pop();\n  query = args.length ? args.shift() || {} : {};\n  options = args.length ? args.shift() || {} : {};\n  var skip = options.skip;\n  var limit = options.limit;\n  var hint = options.hint;\n  var maxTimeMS = options.maxTimeMS;\n\n  // Final query\n  var cmd = {\n      'count': this.s.name, 'query': query\n    , 'fields': null\n  };\n\n  // Add limit and skip if defined\n  if(typeof skip == 'number') cmd.skip = skip;\n  if(typeof limit == 'number') cmd.limit = limit;\n  if(hint) options.hint = hint;\n\n  // Ensure we have the right read preference inheritance\n  options = getReadPreference(this, options, this.s.db, this);\n\n  // Execute command\n  this.s.db.command(cmd, options, function(err, result) {\n    if(err) return handleCallback(callback, err);\n    handleCallback(callback, null, result.n);\n  });\n};\n\n/**\n * The distinct command returns returns a list of distinct values for the given key across a collection.\n * @method\n * @param {string} key Field of the document to find distinct values for.\n * @param {object} query The query for filtering the set of documents to which we apply the distinct filter.\n * @param {object} [options=null] Optional settings.\n * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {Collection~resultCallback} callback The command result callback\n * @return {null}\n */\nCollection.prototype.distinct = function(key, query, options, callback) {\n  var args = Array.prototype.slice.call(arguments, 1);\n  callback = args.pop();\n  query = args.length ? args.shift() || {} : {};\n  options = args.length ? args.shift() || {} : {};\n\n  // maxTimeMS option\n  var maxTimeMS = options.maxTimeMS;\n\n  // Distinct command\n  var cmd = {\n    'distinct': this.s.name, 'key': key, 'query': query\n  };\n\n  // Ensure we have the right read preference inheritance\n  options = getReadPreference(this, options, this.s.db, this);\n\n  // Execute the command\n  this.s.db.command(cmd, options, function(err, result) {\n    if(err) return handleCallback(callback, err);\n    handleCallback(callback, null, result.values);\n  });\n};\n\n/**\n * Retrieve all the indexes on the collection.\n * @method\n * @param {Collection~resultCallback} callback The command result callback\n * @return {null}\n */\nCollection.prototype.indexes = function(callback) {\n  this.s.db.indexInformation(this.s.name, {full:true}, callback);    \n}\n\n/**\n * Get all the collection statistics.\n *\n * @method\n * @param {object} [options=null] Optional settings.\n * @param {number} [options.scale=null] Divide the returned sizes by scale value.\n * @param {Collection~resultCallback} callback The collection result callback\n * @return {null}\n */\nCollection.prototype.stats = function(options, callback) {\n  var args = Array.prototype.slice.call(arguments, 0);\n  callback = args.pop();\n  // Fetch all commands\n  options = args.length ? args.shift() || {} : {};\n\n  // Build command object\n  var commandObject = {\n    collStats:this.s.name\n  }\n\n  // Check if we have the scale value\n  if(options['scale'] != null) commandObject['scale'] = options['scale'];\n\n  // Ensure we have the right read preference inheritance\n  options = getReadPreference(this, options, this.s.db, this);\n\n  // Execute the command\n  this.s.db.command(commandObject, options, callback);\n}\n\n/**\n * Find a document and delete it in one atomic operation, requires a write lock for the duration of the operation.\n *\n * @method\n * @param {object} filter Document selection filter.\n * @param {object} [options=null] Optional settings.\n * @param {object} [options.projection=null] Limits the fields to return for all matching documents.\n * @param {object} [options.sort=null] Determines which document the operation modifies if the query selects multiple documents.\n * @param {number} [options.maxTimeMS=null] The maximum amount of time to allow the query to run.\n * @param {Collection~resultCallback} callback The collection result callback\n * @return {null}\n */\nCollection.prototype.findOneAndDelete = function(filter, options, callback) {\n  if(typeof options == 'function') callback = options, options = {};\n  this.findAndModify(\n      filter\n    , options.sort\n    , null\n    , {\n        fields: options.projection\n      , remove:true\n    }\n    , callback\n  );\n}\n\n/**\n * Find a document and replace it in one atomic operation, requires a write lock for the duration of the operation.\n *\n * @method\n * @param {object} filter Document selection filter.\n * @param {object} replacement Document replacing the matching document.\n * @param {object} [options=null] Optional settings.\n * @param {object} [options.projection=null] Limits the fields to return for all matching documents.\n * @param {object} [options.sort=null] Determines which document the operation modifies if the query selects multiple documents.\n * @param {number} [options.maxTimeMS=null] The maximum amount of time to allow the query to run.\n * @param {boolean} [options.upsert=false] Upsert the document if it does not exist.\n * @param {boolean} [options.returnOriginal=true] When false, returns the updated document rather than the original. The default is true.\n * @param {Collection~resultCallback} callback The collection result callback\n * @return {null}\n */\nCollection.prototype.findOneAndReplace = function(filter, replacement, options, callback) {\n  if(typeof options == 'function') callback = options, options = {};\n  this.findAndModify(\n      filter\n    , options.sort\n    , replacement\n    , {\n        fields: options.projection\n      , update: true\n      , new: typeof options.returnOriginal == 'boolean' ? !options.returnOriginal : false\n      , upsert: typeof options.upsert == 'boolean' ? options.upsert : false\n    }\n    , callback\n  );\n}\n\n/**\n * Find a document and update it in one atomic operation, requires a write lock for the duration of the operation.\n *\n * @method\n * @param {object} filter Document selection filter.\n * @param {object} update Update operations to be performed on the document\n * @param {object} [options=null] Optional settings.\n * @param {object} [options.projection=null] Limits the fields to return for all matching documents.\n * @param {object} [options.sort=null] Determines which document the operation modifies if the query selects multiple documents.\n * @param {number} [options.maxTimeMS=null] The maximum amount of time to allow the query to run.\n * @param {boolean} [options.upsert=false] Upsert the document if it does not exist.\n * @param {boolean} [options.returnOriginal=true] When false, returns the updated document rather than the original. The default is true.\n * @param {Collection~resultCallback} callback The collection result callback\n * @return {null}\n */\nCollection.prototype.findOneAndUpdate = function(filter, update, options, callback) {\n  if(typeof options == 'function') callback = options, options = {};\n  this.findAndModify(\n      filter\n    , options.sort\n    , update\n    , {\n        fields: options.projection\n      , update: true\n      , new: typeof options.returnOriginal == 'boolean' ? !options.returnOriginal : false\n      , upsert: typeof options.upsert == 'boolean' ? options.upsert : false\n    }\n    , callback\n  );\n}\n\n/**\n * Find and update a document.\n * @method\n * @param {object} query Query object to locate the object to modify.\n * @param {array} sort If multiple docs match, choose the first one in the specified sort order as the object to manipulate.\n * @param {object} doc The fields/vals to be updated.\n * @param {object} [options=null] Optional settings.\n * @param {(number|string)} [options.w=null] The write concern.\n * @param {number} [options.wtimeout=null] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {boolean} [options.remove=false] Set to true to remove the object before returning.\n * @param {boolean} [options.upsert=false] Perform an upsert operation.\n * @param {boolean} [options.new=false] Set to true if you want to return the modified object rather than the original. Ignored for remove.\n * @param {object} [options.fields=null] Object containing the field projection for the result returned from the operation.\n * @param {Collection~resultCallback} callback The command result callback\n * @return {null}\n * @deprecated use findOneAndUpdate, findOneAndReplace or findOneAndDelete instead \n */\nCollection.prototype.findAndModify = function(query, sort, doc, options, callback) {\n  var args = Array.prototype.slice.call(arguments, 1);\n  callback = args.pop();\n  sort = args.length ? args.shift() || [] : [];\n  doc = args.length ? args.shift() : null;\n  options = args.length ? args.shift() || {} : {};\n\n  // Clone options\n  var options = shallowClone(options);\n  // Force read preference primary\n  options.readPreference = ReadPreference.PRIMARY;\n\n  // Create findAndModify command object\n  var queryObject = {\n     'findandmodify': this.s.name\n   , 'query': query\n  };\n\n  sort = formattedOrderClause(sort);\n  if(sort) {\n    queryObject.sort = sort;\n  }\n\n  queryObject.new = options.new ? true : false;\n  queryObject.remove = options.remove ? true : false;\n  queryObject.upsert = options.upsert ? true : false;\n\n  if(options.fields) {\n    queryObject.fields = options.fields;\n  }\n\n  if(doc && !options.remove) {\n    queryObject.update = doc;\n  }\n\n  // Either use override on the function, or go back to default on either the collection\n  // level or db\n  if(options['serializeFunctions'] != null) {\n    options['serializeFunctions'] = options['serializeFunctions'];\n  } else {\n    options['serializeFunctions'] = this.s.serializeFunctions;\n  }\n\n  // No check on the documents\n  options.checkKeys = false;\n\n  // Execute the command\n  this.s.db.command(queryObject\n    , options, function(err, result) {\n      if(err) return handleCallback(callback, err, null);\n      return handleCallback(callback, null, result);\n  });\n}\n\n/**\n * Find and remove a document.\n * @method\n * @param {object} query Query object to locate the object to modify.\n * @param {array} sort If multiple docs match, choose the first one in the specified sort order as the object to manipulate.\n * @param {object} [options=null] Optional settings.\n * @param {(number|string)} [options.w=null] The write concern.\n * @param {number} [options.wtimeout=null] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {Collection~resultCallback} callback The command result callback\n * @return {null}\n * @deprecated use findOneAndDelete instead\n */\nCollection.prototype.findAndRemove = function(query, sort, options, callback) {\n  var args = Array.prototype.slice.call(arguments, 1);\n  callback = args.pop();\n  sort = args.length ? args.shift() || [] : [];\n  options = args.length ? args.shift() || {} : {};\n  // Add the remove option\n  options['remove'] = true;\n  // Execute the callback\n  this.findAndModify(query, sort, null, options, callback);\n}\n\n/**\n * Execute an aggregation framework pipeline against the collection, needs MongoDB >= 2.2\n * @method\n * @param {object} pipeline Array containing all the aggregation framework commands for the execution.\n * @param {object} [options=null] Optional settings.\n * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {object} [options.cursor=null] Return the query as cursor, on 2.6 > it returns as a real cursor on pre 2.6 it returns as an emulated cursor.\n * @param {number} [options.cursor.batchSize=null] The batchSize for the cursor\n * @param {boolean} [options.explain=false] Explain returns the aggregation execution plan (requires mongodb 2.6 >).\n * @param {boolean} [options.allowDiskUse=false] allowDiskUse lets the server know if it can use disk to store temporary results for the aggregation (requires mongodb 2.6 >).\n * @param {number} [options.maxTimeMS=null] maxTimeMS specifies a cumulative time limit in milliseconds for processing operations on the cursor. MongoDB interrupts the operation at the earliest following interrupt point.\n * @param {Collection~resultCallback} callback The command result callback\n * @return {(null|AggregationCursor)}\n */\nCollection.prototype.aggregate = function(pipeline, options, callback) {\n  if(Array.isArray(pipeline)) {\n    // Set up callback if one is provided\n    if(typeof options == 'function') {\n      callback = options;\n      options = {};\n    }\n\n    // If we have no options or callback we are doing\n    // a cursor based aggregation\n    if(options == null && callback == null) {\n      options = {};\n    }      \n  } else {\n    // Aggregation pipeline passed as arguments on the method\n    var args = Array.prototype.slice.call(arguments, 0);\n    // Get the callback\n    callback = args.pop();\n    // Get the possible options object\n    var opts = args[args.length - 1];\n    // If it contains any of the admissible options pop it of the args\n    options = opts && (opts.readPreference \n      || opts.explain || opts.cursor || opts.out\n      || opts.maxTimeMS || opts.allowDiskUse) ? args.pop() : {};\n      // Left over arguments is the pipeline\n    pipeline = args;\n  }\n\n  // If out was specified\n  if(typeof options.out == 'string') {\n    pipeline.push({$out: options.out});\n  }\n\n  // Build the command\n  var command = { aggregate : this.s.name, pipeline : pipeline};\n  // If we have allowDiskUse defined\n  if(options.allowDiskUse) command.allowDiskUse = options.allowDiskUse;\n  if(typeof options.maxTimeMS == 'number') command.maxTimeMS = options.maxTimeMS;\n\n  // Ensure we have the right read preference inheritance\n  options = getReadPreference(this, options, this.s.db, this);\n\n  // If explain has been specified add it\n  if(options.explain) command.explain = options.explain;\n\n  // Validate that cursor options is valid\n  if(options.cursor != null && typeof options.cursor != 'object') {\n    throw toError('cursor options must be an object');\n  }\n\n  // Set the AggregationCursor constructor\n  options.cursorFactory = AggregationCursor;\n  if(typeof callback != 'function') {\n    if(this.s.topology.capabilities().hasAggregationCursor) {\n      options.cursor = options.cursor || { batchSize : 1000 };\n      command.cursor = options.cursor;        \n    }\n\n    // Allow disk usage command\n    if(typeof options.allowDiskUse == 'boolean') command.allowDiskUse = options.allowDiskUse;\n    if(typeof options.maxTimeMS == 'number') command.maxTimeMS = options.maxTimeMS;\n\n    // Execute the cursor\n    return this.s.topology.cursor(this.s.namespace, command, options);\n  }\n\n  var cursor = null;\n  // We do not allow cursor\n  if(options.cursor) {\n    return this.s.topology.cursor(this.s.namespace, command, options);\n  }\n\n  // Execute the command\n  this.s.db.command(command, options, function(err, result) {\n    if(err) {\n      handleCallback(callback, err);\n    } else if(result['err'] || result['errmsg']) {\n      handleCallback(callback, toError(result));\n    } else if(typeof result == 'object' && result['serverPipeline']) {\n      handleCallback(callback, null, result['serverPipeline']);\n    } else if(typeof result == 'object' && result['stages']) {\n      handleCallback(callback, null, result['stages']);\n    } else {\n      handleCallback(callback, null, result.result);\n    }\n  });\n}\n\n/**\n * The callback format for results\n * @callback Collection~parallelCollectionScanCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {Cursor[]} cursors A list of cursors returned allowing for parallel reading of collection.\n */\n\n/**\n * Return N number of parallel cursors for a collection allowing parallel reading of entire collection. There are\n * no ordering guarantees for returned results.\n * @method\n * @param {object} [options=null] Optional settings.\n * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {number} [options.batchSize=null] Set the batchSize for the getMoreCommand when iterating over the query results.\n * @param {number} [options.numCursors=1] The maximum number of parallel command cursors to return (the number of returned cursors will be in the range 1:numCursors)\n * @param {boolean} [options.raw=false] Return all BSON documents as Raw Buffer documents.\n * @param {Collection~parallelCollectionScanCallback} callback The command result callback\n * @return {null}\n */\nCollection.prototype.parallelCollectionScan = function(options, callback) {\n  var self = this;\n  if(typeof options == 'function') callback = options, options = {numCursors: 1};\n  // Set number of cursors to 1\n  options.numCursors = options.numCursors || 1;\n  options.batchSize = options.batchSize || 1000;\n\n  // Ensure we have the right read preference inheritance\n  options = getReadPreference(this, options, this.s.db, this);\n  \n  // Create command object\n  var commandObject = {\n      parallelCollectionScan: this.s.name\n    , numCursors: options.numCursors\n  }\n\n  // Execute the command\n  this.s.db.command(commandObject, options, function(err, result) {\n    if(err) return handleCallback(callback, err, null);\n    if(result == null) return handleCallback(callback, new Error(\"no result returned for parallelCollectionScan\"), null);\n\n    var cursors = [];\n    // Create command cursors for each item\n    for(var i = 0; i < result.cursors.length; i++) {\n      var rawId = result.cursors[i].cursor.id\n      // Convert cursorId to Long if needed\n      var cursorId = typeof rawId == 'number' ? Long.fromNumber(rawId) : rawId;\n\n      // Command cursor options\n      var cmd = {\n          batchSize: options.batchSize\n        , cursorId: cursorId\n        , items: result.cursors[i].cursor.firstBatch\n      }\n\n      // Add a command cursor\n      cursors.push(self.s.topology.cursor(self.s.namespace, cursorId, options));\n    }\n\n    handleCallback(callback, null, cursors);\n  });\n}\n\n/**\n * Execute the geoNear command to search for items in the collection\n *\n * @method   \n * @param {number} x Point to search on the x axis, ensure the indexes are ordered in the same order.\n * @param {number} y Point to search on the y axis, ensure the indexes are ordered in the same order.\n * @param {object} [options=null] Optional settings.\n * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {number} [options.num=null] Max number of results to return.\n * @param {number} [options.minDistance=null] Include results starting at minDistance from a point (2.6 or higher)\n * @param {number} [options.maxDistance=null] Include results up to maxDistance from the point.\n * @param {number} [options.distanceMultiplier=null] Include a value to multiply the distances with allowing for range conversions.\n * @param {object} [options.query=null] Filter the results by a query.\n * @param {boolean} [options.spherical=false] Perform query using a spherical model.\n * @param {boolean} [options.uniqueDocs=false] The closest location in a document to the center of the search region will always be returned MongoDB > 2.X.\n * @param {boolean} [options.includeLocs=false] Include the location data fields in the top level of the results MongoDB > 2.X. \n * @param {Collection~resultCallback} callback The command result callback\n * @return {null}\n */\nCollection.prototype.geoNear = function(x, y, options, callback) {\n  var point = typeof(x) == 'object' && x\n    , args = Array.prototype.slice.call(arguments, point?1:2);\n\n  callback = args.pop();\n  // Fetch all commands\n  options = args.length ? args.shift() || {} : {};\n\n  // Build command object\n  var commandObject = {\n    geoNear:this.s.name,\n    near: point || [x, y]\n  }\n\n  // Ensure we have the right read preference inheritance\n  options = getReadPreference(this, options, this.s.db, this);\n\n  // Exclude readPreference and existing options to prevent user from\n  // shooting themselves in the foot\n  var exclude = {\n    readPreference: true, \n    geoNear: true,\n    near: true  \n  };\n\n  // Filter out any excluded objects\n  commandObject = decorateCommand(commandObject, options, exclude);\n\n  // Execute the command\n  this.s.db.command(commandObject, options, function (err, res) {\n    if(err) return handleCallback(callback, err);\n    if(res.err || res.errmsg) return handleCallback(callback, toError(res));\n    // should we only be returning res.results here? Not sure if the user\n    // should see the other return information\n    handleCallback(callback, null, res);\n  });\n}\n\n/**\n * Execute a geo search using a geo haystack index on a collection.\n *\n * @method   \n * @param {number} x Point to search on the x axis, ensure the indexes are ordered in the same order.\n * @param {number} y Point to search on the y axis, ensure the indexes are ordered in the same order.\n * @param {object} [options=null] Optional settings.\n * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {number} [options.maxDistance=null] Include results up to maxDistance from the point.\n * @param {object} [options.search=null] Filter the results by a query.\n * @param {number} [options.limit=false] Max number of results to return.\n * @param {Collection~resultCallback} callback The command result callback\n * @return {null}\n */\nCollection.prototype.geoHaystackSearch = function(x, y, options, callback) {\n  var args = Array.prototype.slice.call(arguments, 2);\n  callback = args.pop();\n  // Fetch all commands\n  options = args.length ? args.shift() || {} : {};\n\n  // Build command object\n  var commandObject = {\n    geoSearch: this.s.name,\n    near: [x, y]\n  }\n\n  // Remove read preference from hash if it exists\n  commandObject = decorateCommand(commandObject, options, {readPreference: true});\n\n  // Ensure we have the right read preference inheritance\n  options = getReadPreference(this, options, this.s.db, this);\n\n  // Execute the command\n  this.s.db.command(commandObject, options, function (err, res) {\n    if(err) return handleCallback(callback, err);\n    if(res.err || res.errmsg) handleCallback(callback, utils.toError(res));\n    // should we only be returning res.results here? Not sure if the user\n    // should see the other return information\n    handleCallback(callback, null, res);\n  });\n}\n\n/**\n * Group function helper\n * @ignore\n */\nvar groupFunction = function () {\n  var c = db[ns].find(condition);\n  var map = new Map();\n  var reduce_function = reduce;\n\n  while (c.hasNext()) {\n    var obj = c.next();\n    var key = {};\n\n    for (var i = 0, len = keys.length; i < len; ++i) {\n      var k = keys[i];\n      key[k] = obj[k];\n    }\n\n    var aggObj = map.get(key);\n\n    if (aggObj == null) {\n      var newObj = Object.extend({}, key);\n      aggObj = Object.extend(newObj, initial);\n      map.put(key, aggObj);\n    }\n\n    reduce_function(obj, aggObj);\n  }\n\n  return { \"result\": map.values() };\n}.toString();\n\n/**\n * Run a group command across a collection\n *\n * @method   \n * @param {(object|array|function|code)} keys An object, array or function expressing the keys to group by.\n * @param {object} condition An optional condition that must be true for a row to be considered.\n * @param {object} initial Initial value of the aggregation counter object.\n * @param {(function|Code)} reduce The reduce function aggregates (reduces) the objects iterated\n * @param {(function|Code)} finalize An optional function to be run on each item in the result set just before the item is returned.\n * @param {boolean} command Specify if you wish to run using the internal group command or using eval, default is true.\n * @param {object} [options=null] Optional settings.\n * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {Collection~resultCallback} callback The command result callback\n * @return {null}\n */\nCollection.prototype.group = function(keys, condition, initial, reduce, finalize, command, options, callback) {\n  var args = Array.prototype.slice.call(arguments, 3);\n  callback = args.pop();\n  // Fetch all commands\n  reduce = args.length ? args.shift() : null;\n  finalize = args.length ? args.shift() : null;\n  command = args.length ? args.shift() : null;\n  options = args.length ? args.shift() || {} : {};\n\n  // Make sure we are backward compatible\n  if(!(typeof finalize == 'function')) {\n    command = finalize;\n    finalize = null;\n  }\n\n  if (!Array.isArray(keys) && keys instanceof Object && typeof(keys) !== 'function' && !(keys instanceof Code)) {\n    keys = Object.keys(keys);\n  }\n\n  if(typeof reduce === 'function') {\n    reduce = reduce.toString();\n  }\n\n  if(typeof finalize === 'function') {\n    finalize = finalize.toString();\n  }\n\n  // Set up the command as default\n  command = command == null ? true : command;\n\n  // Execute using the command\n  if(command) {\n    var reduceFunction = reduce instanceof Code\n        ? reduce\n        : new Code(reduce);\n\n    var selector = {\n      group: {\n          'ns': this.s.name\n        , '$reduce': reduceFunction\n        , 'cond': condition\n        , 'initial': initial\n        , 'out': \"inline\"\n      }\n    };\n\n    // if finalize is defined\n    if(finalize != null) selector.group['finalize'] = finalize;\n    // Set up group selector\n    if ('function' === typeof keys || keys instanceof Code) {\n      selector.group.$keyf = keys instanceof Code\n        ? keys\n        : new Code(keys);\n    } else {\n      var hash = {};\n      keys.forEach(function (key) {\n        hash[key] = 1;\n      });\n      selector.group.key = hash;\n    }\n\n    // Ensure we have the right read preference inheritance\n    options = getReadPreference(this, options, this.s.db, this);\n    // Execute command\n    this.s.db.command(selector, options, function(err, result) {\n      if(err) return handleCallback(callback, err, null);\n      handleCallback(callback, null, result.retval);\n    });\n  } else {\n    // Create execution scope\n    var scope = reduce != null && reduce instanceof Code\n      ? reduce.scope\n      : {};\n\n    scope.ns = this.s.name;\n    scope.keys = keys;\n    scope.condition = condition;\n    scope.initial = initial;\n\n    // Pass in the function text to execute within mongodb.\n    var groupfn = groupFunction.replace(/ reduce;/, reduce.toString() + ';');\n\n    this.s.db.eval(new Code(groupfn, scope), function (err, results) {\n      if (err) return handleCallback(callback, err, null);\n      handleCallback(callback, null, results.result || results);\n    });\n  }\n}\n\n/**\n * Functions that are passed as scope args must\n * be converted to Code instances.\n * @ignore\n */\nfunction processScope (scope) {\n  if(!isObject(scope)) {\n    return scope;\n  }\n\n  var keys = Object.keys(scope);\n  var i = keys.length;\n  var key;\n  var new_scope = {};\n\n  while (i--) {\n    key = keys[i];\n    if ('function' == typeof scope[key]) {\n      new_scope[key] = new Code(String(scope[key]));\n    } else {\n      new_scope[key] = processScope(scope[key]);\n    }\n  }\n\n  return new_scope;\n}\n\n/**\n * Run Map Reduce across a collection. Be aware that the inline option for out will return an array of results not a collection.\n *\n * @method   \n * @param {(function|string)} map The mapping function.\n * @param {(function|string)} reduce The reduce function.\n * @param {object} [options=null] Optional settings.\n * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {object} [options.out=null] Sets the output target for the map reduce job. *{inline:1} | {replace:'collectionName'} | {merge:'collectionName'} | {reduce:'collectionName'}*\n * @param {object} [options.query=null] Query filter object.\n * @param {object} [options.sort=null] Sorts the input objects using this key. Useful for optimization, like sorting by the emit key for fewer reduces.\n * @param {number} [options.limit=null] Number of objects to return from collection.\n * @param {boolean} [options.keeptemp=false] Keep temporary data.\n * @param {(function|string)} [options.finalize=null] Finalize function.\n * @param {object} [options.scope=null] Can pass in variables that can be access from map/reduce/finalize.\n * @param {boolean} [options.jsMode=false] It is possible to make the execution stay in JS. Provided in MongoDB > 2.0.X.\n * @param {boolean} [options.verbose=false] Provide statistics on job execution time.\n * @param {Collection~resultCallback} callback The command result callback\n * @throws {MongoError}\n * @return {null}\n */\nCollection.prototype.mapReduce = function(map, reduce, options, callback) {\n  var self = this;\n  if('function' === typeof options) callback = options, options = {};\n  // Out must allways be defined (make sure we don't break weirdly on pre 1.8+ servers)\n  if(null == options.out) {\n    throw new Error(\"the out option parameter must be defined, see mongodb docs for possible values\");\n  }\n\n  if('function' === typeof map) {\n    map = map.toString();\n  }\n\n  if('function' === typeof reduce) {\n    reduce = reduce.toString();\n  }\n\n  if('function' === typeof options.finalize) {\n    options.finalize = options.finalize.toString();\n  }\n\n  var mapCommandHash = {\n      mapreduce: this.s.name\n    , map: map\n    , reduce: reduce\n  };\n\n  // Add any other options passed in\n  for(var n in options) {\n    if('scope' == n) {\n      mapCommandHash[n] = processScope(options[n]);\n    } else {\n      mapCommandHash[n] = options[n];\n    }\n  }\n\n  // Ensure we have the right read preference inheritance\n  options = getReadPreference(this, options, this.s.db, this);\n\n  // If we have a read preference and inline is not set as output fail hard\n  if((options.readPreference != false && options.readPreference != 'primary') \n    && options['out'] && (options['out'].inline != 1 && options['out'] != 'inline')) {\n      options.readPreference = 'primary';    \n  }\n\n  // Execute command\n  this.s.db.command(mapCommandHash, {readPreference:options.readPreference}, function (err, result) {\n    if(err) return handleCallback(callback, err);\n    // Check if we have an error\n    if(1 != result.ok || result.err || result.errmsg) {\n      return handleCallback(callback, toError(result));\n    }\n\n    // Create statistics value\n    var stats = {};\n    if(result.timeMillis) stats['processtime'] = result.timeMillis;\n    if(result.counts) stats['counts'] = result.counts;\n    if(result.timing) stats['timing'] = result.timing;\n\n    // invoked with inline?\n    if(result.results) {\n      // If we wish for no verbosity\n      if(options['verbose'] == null || !options['verbose']) {\n        return handleCallback(callback, null, result.results);\n      }\n      \n      return handleCallback(callback, null, result.results, stats);\n    }\n\n    // The returned collection\n    var collection = null;\n\n    // If we have an object it's a different db\n    if(result.result != null && typeof result.result == 'object') {\n      var doc = result.result;\n      collection = self.s.db.db(doc.db).collection(doc.collection);\n    } else {\n      // Create a collection object that wraps the result collection\n      collection = self.s.db.collection(result.result)\n    }\n\n    // If we wish for no verbosity\n    if(options['verbose'] == null || !options['verbose']) {\n      return handleCallback(callback, err, collection);\n    }\n\n    // Return stats as third set of values\n    handleCallback(callback, err, collection, stats);\n  });\n}\n\n/**\n * Initiate a Out of order batch write operation. All operations will be buffered into insert/update/remove commands executed out of order.\n *\n * @method   \n * @param {object} [options=null] Optional settings.\n * @param {(number|string)} [options.w=null] The write concern.\n * @param {number} [options.wtimeout=null] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {UnorderedBulkOperation} callback The command result callback\n * @return {null}\n */\nCollection.prototype.initializeUnorderedBulkOp = function(options) {\n  return unordered(this.s.topology, this, options);\n}\n\n/**\n * Initiate an In order bulk write operation, operations will be serially executed in the order they are added, creating a new operation for each switch in types.\n *\n * @method   \n * @param {object} [options=null] Optional settings.\n * @param {(number|string)} [options.w=null] The write concern.\n * @param {number} [options.wtimeout=null] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {OrderedBulkOperation} callback The command result callback\n * @return {null}\n */\nCollection.prototype.initializeOrderedBulkOp = function(options) {\n  return ordered(this.s.topology, this, options);\n}\n\n// Get write concern\nvar writeConcern = function(target, db, col, options) {\n  if(options.w != null || options.j != null || options.fsync != null) {\n    var opts = {};\n    if(options.w != null) opts.w = options.w;\n    if(options.wtimeout != null) opts.wtimeout = options.wtimeout;\n    if(options.j != null) opts.j = options.j;\n    if(options.fsync != null) opts.fsync = options.fsync;\n    target.writeConcern = opts;\n  } else if(col.writeConcern.w != null || col.writeConcern.j != null || col.writeConcern.fsync != null) {      \n    target.writeConcern = col.writeConcern;\n  } else if(db.writeConcern.w != null || db.writeConcern.j != null || db.writeConcern.fsync != null) {\n    target.writeConcern = db.writeConcern;\n  }\n\n  return target\n}\n\n// Figure out the read preference\nvar getReadPreference = function(self, options, db, coll) {\n  var r = null\n  if(options.readPreference) {\n    r = options.readPreference\n  } else if(self.s.readPreference) {\n    r = self.s.readPreference\n  } else if(db.readPreference) {\n    r = db.readPreference;\n  }\n\n  if(r instanceof ReadPreference) {      \n    options.readPreference = new CoreReadPreference(r.mode, r.tags);\n  } else if(typeof r == 'string') {\n    options.readPreference = new CoreReadPreference(r);\n  }\n\n  return options;\n}\n\nvar testForFields = {\n    limit: 1, sort: 1, fields:1, skip: 1, hint: 1, explain: 1, snapshot: 1, timeout: 1, tailable: 1, tailableRetryInterval: 1\n  , numberOfRetries: 1, awaitdata: 1, awaitData: 1, exhaust: 1, batchSize: 1, returnKey: 1, maxScan: 1, min: 1, max: 1, showDiskLoc: 1\n  , comment: 1, raw: 1, readPreference: 1, partial: 1, read: 1, dbName: 1, oplogReplay: 1, connection: 1, maxTimeMS: 1, transforms: 1\n}\n\nmodule.exports = Collection;\n"]}