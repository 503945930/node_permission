{"version":3,"sources":["cursor.js"],"names":[],"mappings":"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","file":"cursor-compiled.js","sourcesContent":["\"use strict\";\n\nvar inherits = require('util').inherits\n  , f = require('util').format\n  , toError = require('./utils').toError\n  , getSingleProperty = require('./utils').getSingleProperty\n  , formattedOrderClause = require('./utils').formattedOrderClause\n  , handleCallback = require('./utils').handleCallback\n  , Logger = require('mongodb-core').Logger\n  , EventEmitter = require('events').EventEmitter\n  , ReadPreference = require('./read_preference')\n  , MongoError = require('mongodb-core').MongoError\n  , Readable = require('stream').Readable || require('readable-stream').Readable\n  , CoreCursor = require('mongodb-core').Cursor\n  , Query = require('mongodb-core').Query\n  , CoreReadPreference = require('mongodb-core').ReadPreference;\n\n/**\n * @fileOverview The **Cursor** class is an internal class that embodies a cursor on MongoDB\n * allowing for iteration over the results returned from the underlying query. It supports\n * one by one document iteration, conversion to an array or can be iterated as a Node 0.10.X\n * or higher stream\n *\n * **CURSORS Cannot directly be instantiated**\n * @example\n * var MongoClient = require('mongodb').MongoClient,\n *   test = require('assert');\n * // Connection url\n * var url = 'mongodb://localhost:27017/test';\n * // Connect using MongoClient\n * MongoClient.connect(url, function(err, db) {\n *   // Create a collection we want to drop later\n *   var col = db.collection('createIndexExample1');\n *   // Insert a bunch of documents\n *   col.insert([{a:1, b:1}\n *     , {a:2, b:2}, {a:3, b:3}\n *     , {a:4, b:4}], {w:1}, function(err, result) {\n *     test.equal(null, err);\n *\n *     // Show that duplicate records got dropped\n *     col.find({}).toArray(function(err, items) {\n *       test.equal(null, err);\n *       test.equal(4, items.length);\n *       db.close();\n *     });\n *   });\n * });\n */\n\n/**\n * Namespace provided by the mongodb-core and node.js\n * @external CoreCursor\n * @external Readable\n */\n\n// Flags allowed for cursor\nvar flags = ['tailable', 'oplogReplay', 'noCursorTimeout', 'awaitData', 'exhaust', 'partial'];\nvar fields = ['numberOfRetries', 'tailableRetryInterval'];\n\n/**\n * Creates a new Cursor instance (INTERNAL TYPE, do not instantiate directly)\n * @class Cursor\n * @extends external:CoreCursor\n * @extends external:Readable\n * @property {string} sortValue Cursor query sort setting.\n * @property {boolean} timeout Is Cursor able to time out.\n * @property {ReadPreference} readPreference Get cursor ReadPreference.\n * @fires Cursor#data\n * @fires Cursor#end\n * @fires Cursor#close\n * @fires Cursor#readable\n * @return {Cursor} a Cursor instance.\n * @example\n * Some example\n */\nvar Cursor = function(bson, ns, cmd, options, topology, topologyOptions) {\n  CoreCursor.apply(this, Array.prototype.slice.call(arguments, 0));\n  var self = this;\n  var state = Cursor.INIT;\n  var streamOptions = {};\n\n  // Tailable cursor options\n  var numberOfRetries = options.numberOfRetries || 5;\n  var tailableRetryInterval = options.tailableRetryInterval || 500;\n  var currentNumberOfRetries = numberOfRetries;\n\n  // Set up\n  Readable.call(this, {objectMode: true});\n\n  // Internal cursor state\n  this.s = {\n    // Tailable cursor options\n      numberOfRetries: numberOfRetries\n    , tailableRetryInterval: tailableRetryInterval\n    , currentNumberOfRetries: currentNumberOfRetries\n    // State\n    , state: state\n    // Stream options\n    , streamOptions: streamOptions\n    // BSON\n    , bson: bson\n    // Namespace\n    , ns: ns\n    // Command\n    , cmd: cmd\n    // Options\n    , options: options\n    // Topology\n    , topology: topology\n    // Topology options\n    , topologyOptions: topologyOptions\n  }\n\n  // Legacy fields\n  this.timeout = self.s.options.noCursorTimeout == true;\n  this.sortValue = self.s.cmd.sort;\n  this.readPreference = self.s.options.readPreference;\n}\n\n/**\n * Cursor stream data event, fired for each document in the cursor.\n *\n * @event Cursor#data\n * @type {object}\n */\n\n/**\n * Cursor stream end event\n *\n * @event Cursor#end\n * @type {null}\n */\n\n/**\n * Cursor stream close event\n *\n * @event Cursor#close\n * @type {null}\n */\n\n/**\n * Cursor stream readable event\n *\n * @event Cursor#readable\n * @type {null}\n */\n\n// Inherit from Readable\ninherits(Cursor, Readable);\n\n// Map core cursor _next method so we can apply mapping\nCoreCursor.prototype._next = CoreCursor.prototype.next;\n\nfor(var name in CoreCursor.prototype) {\n  Cursor.prototype[name] = CoreCursor.prototype[name];\n}\n\nCursor.prototype.mister = function() {}\n\n/**\n * Set the cursor query\n * @method\n * @param {object} filter The filter object used for the cursor.\n * @return {Cursor}\n */\nCursor.prototype.filter = function(filter) {\n  if(this.s.state == Cursor.CLOSED || this.s.state == Cursor.OPEN || this.isDead()) throw new MongoError(\"Cursor is closed\");\n  this.s.cmd.query = filter;\n  return this;\n}\n\n/**\n * Set a node.js specific cursor option\n * @method\n * @param {string} field The cursor option to set ['numberOfRetries', 'tailableRetryInterval'].\n * @param {object} value The field value.\n * @throws {MongoError}\n * @return {Cursor}\n */\nCursor.prototype.setCursorOption = function(field, value) {\n  if(this.s.state == Cursor.CLOSED || this.s.state == Cursor.OPEN || this.isDead()) throw new MongoError(\"Cursor is closed\");\n  if(fields.indexOf(field) == -1) throw new MongoError(f(\"option %s not a supported option %s\", field, fields));\n  this.s[field] = value;\n  if(field == 'numberOfRetries') \n    this.s.currentNumberOfRetries = value;\n  return this;\n}\n\n/**\n * Add a cursor flag to the cursor\n * @method\n * @param {string} flag The flag to set, must be one of following ['tailable', 'oplogReplay', 'noCursorTimeout', 'awaitData', 'exhaust', 'partial'].\n * @param {boolean} value The flag boolean value.\n * @throws {MongoError}\n * @return {Cursor}\n */\nCursor.prototype.addCursorFlag = function(flag, value) {\n  if(this.s.state == Cursor.CLOSED || this.s.state == Cursor.OPEN || this.isDead()) throw new MongoError(\"Cursor is closed\");\n  if(flags.indexOf(flag) == -1) throw new MongoError(f(\"flag %s not a supported flag %s\", flag, flags));\n  if(typeof value != 'boolean') throw new MongoError(f(\"flag %s must be a boolean value\", flag));\n  this.s.cmd[flag] = value;\n  return this;\n}\n\n/**\n * Add a query modifier to the cursor query\n * @method\n * @param {string} name The query modifier (must start with $, such as $orderby etc)\n * @param {boolean} value The flag boolean value.\n * @throws {MongoError}\n * @return {Cursor}\n */\nCursor.prototype.addQueryModifier = function(name, value) {\n  if(this.s.state == Cursor.CLOSED || this.s.state == Cursor.OPEN || this.isDead()) throw new MongoError(\"Cursor is closed\");\n  if(name[0] != '$') throw new MongoError(f(\"%s is not a valid query modifier\"));\n  // Strip of the $\n  var field = name.substr(1);\n  // Set on the command\n  this.s.cmd[field] = value;\n  // Deal with the special case for sort\n  if(field == 'orderby') this.s.cmd.sort = this.s.cmd[field];\n  return this;\n}\n\n/**\n * Add a comment to the cursor query allowing for tracking the comment in the log.\n * @method\n * @param {string} value The comment attached to this query.\n * @throws {MongoError}\n * @return {Cursor}\n */\nCursor.prototype.comment = function(value) {\n  if(this.s.state == Cursor.CLOSED || this.s.state == Cursor.OPEN || this.isDead()) throw new MongoError(\"Cursor is closed\");\n  this.s.cmd.comment = value;\n  return this;\n}\n\n/**\n * Set a maxTimeMS on the cursor query, allowing for hard timeout limits on queries (Only supported on MongoDB 2.6 or higher)\n * @method\n * @param {number} value Number of milliseconds to wait before aborting the query.\n * @throws {MongoError}\n * @return {Cursor}\n */\nCursor.prototype.maxTimeMS = function(value) {\n  if(typeof value != 'number') throw new MongoError(\"maxTimeMS must be a number\");\n  if(this.s.state == Cursor.CLOSED || this.s.state == Cursor.OPEN || this.isDead()) throw new MongoError(\"Cursor is closed\");\n  this.s.cmd.maxTimeMS = value;\n  return this;\n}\n\nCursor.prototype.maxTimeMs = Cursor.prototype.maxTimeMS;\n\n/**\n * Sets a field projection for the query.\n * @method\n * @param {object} value The field projection object.\n * @throws {MongoError}\n * @return {Cursor}\n */\nCursor.prototype.project = function(value) {\n  if(this.s.state == Cursor.CLOSED || this.s.state == Cursor.OPEN || this.isDead()) throw new MongoError(\"Cursor is closed\");\n  this.s.cmd.fields = value;\n  return this;\n}\n\n/**\n * Sets the sort order of the cursor query.\n * @method\n * @param {(string|array|object)} keyOrList The key or keys set for the sort.\n * @param {number} [direction] The direction of the sorting (1 or -1).\n * @throws {MongoError}\n * @return {Cursor}\n */\nCursor.prototype.sort = function(keyOrList, direction) {\n  if(this.s.options.tailable) throw new MongoError(\"Tailable cursor doesn't support sorting\");\n  if(this.s.state == Cursor.CLOSED || this.s.state == Cursor.OPEN || this.isDead()) throw new MongoError(\"Cursor is closed\");\n  var order = keyOrList;\n\n  if(direction != null) {\n    order = [[keyOrList, direction]];\n  }\n\n  this.s.cmd.sort = order;\n  this.sortValue = order;\n  return this;\n}\n\n/**\n * Set the batch size for the cursor.\n * @method\n * @param {number} value The batchSize for the cursor.\n * @throws {MongoError}\n * @return {Cursor}\n */\nCursor.prototype.batchSize = function(value) {\n  if(this.s.options.tailable) throw new MongoError(\"Tailable cursor doesn't support limit\");\n  if(this.s.state == Cursor.CLOSED || this.isDead()) throw new MongoError(\"Cursor is closed\");\n  if(typeof value != 'number') throw new MongoError(\"batchSize requires an integer\");\n  this.s.cmd.batchSize = value;\n  this.setCursorBatchSize(value);\n  return this;\n}\n\n/**\n * Set the limit for the cursor.\n * @method\n * @param {number} value The limit for the cursor query.\n * @throws {MongoError}\n * @return {Cursor}\n */\nCursor.prototype.limit = function(value) {\n  if(this.s.options.tailable) throw new MongoError(\"Tailable cursor doesn't support limit\");\n  if(this.s.state == Cursor.OPEN || this.s.state == Cursor.CLOSED || this.isDead()) throw new MongoError(\"Cursor is closed\");\n  if(typeof value != 'number') throw new MongoError(\"limit requires an integer\");\n  this.s.cmd.limit = value;\n  // this.cursorLimit = value;\n  this.setCursorLimit(value);\n  return this;\n}\n\n/**\n * Set the skip for the cursor.\n * @method\n * @param {number} value The skip for the cursor query.\n * @throws {MongoError}\n * @return {Cursor}\n */\nCursor.prototype.skip = function(value) {\n  if(this.s.options.tailable) throw new MongoError(\"Tailable cursor doesn't support skip\");\n  if(this.s.state == Cursor.OPEN || this.s.state == Cursor.CLOSED || this.isDead()) throw new MongoError(\"Cursor is closed\");\n  if(typeof value != 'number') throw new MongoError(\"skip requires an integer\");\n  this.s.cmd.skip = value;\n  this.setCursorSkip(value);\n  return this;\n}\n\n/**\n * The callback format for results\n * @callback Cursor~resultCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {(object|null)} result The result object if the command was executed successfully.\n */\n\n/**\n * Get the next available document from the cursor, returns null if no more documents are available.\n * @function external:CoreCursor#next\n * @param {Cursor~resultCallback} callback The result callback.\n * @throws {MongoError}\n * @return {null}\n */\n\n/**\n * Set the new batchSize of the cursor\n * @function Cursor.prototype.setBatchSize\n * @param {number} value The new batchSize for the cursor\n * @return {null}\n */\n\n/**\n * Get the batchSize of the cursor\n * @function Cursor.prototype.batchSize\n * @param {number} value The current batchSize for the cursor\n * @return {null}\n */\n\n/**\n * Set the new skip value of the cursor\n * @function Cursor.prototype.setCursorSkip\n * @param {number} value The new skip for the cursor\n * @return {null}\n */\n\n/**\n * Get the skip value of the cursor\n * @function Cursor.prototype.cursorSkip\n * @param {number} value The current skip value for the cursor\n * @return {null}\n */\n\n/**\n * Set the new limit value of the cursor\n * @function Cursor.prototype.setCursorLimit\n * @param {number} value The new limit for the cursor\n * @return {null}\n */\n\n/**\n * Get the limit value of the cursor\n * @function Cursor.prototype.cursorLimit\n * @param {number} value The current limit value for the cursor\n * @return {null}\n */\n\n/**\n * Clone the cursor\n * @function external:CoreCursor#clone\n * @return {Cursor}\n */\n\n/**\n * Resets the cursor\n * @function external:CoreCursor#rewind\n * @return {null}\n */\n\n/**\n * Get the next available document from the cursor, returns null if no more documents are available.\n * @method\n * @param {Cursor~resultCallback} callback The result callback.\n * @throws {MongoError}\n * @deprecated\n * @return {null}\n */\nCursor.prototype.nextObject = function(callback) {\n  var self = this;\n  if(this.s.state == Cursor.CLOSED || self.isDead()) return handleCallback(callback, new MongoError(\"Cursor is closed\"));\n  if(this.s.state == Cursor.INIT && this.s.cmd.sort) {\n    try {\n      this.s.cmd.sort = formattedOrderClause(this.s.cmd.sort);\n    } catch(err) {\n      return handleCallback(callback, err);\n    }\n  }\n\n  // Get the next object\n  self._next(function(err, doc) {\n    if(err && err.tailable && self.s.currentNumberOfRetries == 0) return callback(err);\n    if(err && err.tailable && self.s.currentNumberOfRetries > 0) {\n      self.s.currentNumberOfRetries = self.s.currentNumberOfRetries - 1;\n      return setTimeout(function() {\n        self.nextObject(callback);\n      }, self.s.tailableRetryInterval);\n    }\n\n    self.s.state = Cursor.OPEN;\n    if(err) return handleCallback(callback, err);\n    handleCallback(callback, null, doc);\n  });\n}\n\n// Trampoline emptying the number of retrieved items\n// without incurring a nextTick operation\nvar loop = function(self, callback) {\n  // No more items we are done\n  if(self.bufferedCount() == 0) return;\n  // Get the next document\n  self._next(callback);\n  // Loop\n  return loop;\n}\n\n/**\n * Iterates over all the documents for this cursor. As with **{cursor.toArray}**,\n * not all of the elements will be iterated if this cursor had been previouly accessed.\n * In that case, **{cursor.rewind}** can be used to reset the cursor. However, unlike\n * **{cursor.toArray}**, the cursor will only hold a maximum of batch size elements\n * at any given time if batch size is specified. Otherwise, the caller is responsible\n * for making sure that the entire result can fit the memory.\n * @method\n * @deprecated\n * @param {Cursor~resultCallback} callback The result callback.\n * @throws {MongoError}\n * @return {null}\n */\nCursor.prototype.each = function(callback) {\n  // Rewind cursor state\n  this.rewind();\n  // Set current cursor to INIT\n  this.s.state = Cursor.INIT;\n  // Run the query\n  _each(this, callback);\n};\n\n// Run the each loop\nvar _each = function(self, callback) {\n  if(!callback) throw new MongoError('callback is mandatory');\n  if(self.isNotified()) return;\n  if(self.s.state == Cursor.CLOSED || self.isDead()) {\n    return handleCallback(callback, new MongoError(\"Cursor is closed\"), null);\n  }\n\n  if(self.s.state == Cursor.INIT) self.s.state = Cursor.OPEN;\n\n  // Define function to avoid global scope escape\n  var fn = null;\n  // Trampoline all the entries\n  if(self.bufferedCount() > 0) {\n    while(fn = loop(self, callback)) fn(self, callback);\n    _each(self, callback);\n  } else {\n    self._next(function(err, item) {\n      if(err) return handleCallback(callback, err);\n      if(item == null) {\n        self.s.state = Cursor.CLOSED;\n        return handleCallback(callback, null, null);\n      }\n\n      if(handleCallback(callback, null, item) == false) return;\n      _each(self, callback);\n    })\n  }\n}\n\n/**\n * The callback format for the forEach iterator method\n * @callback Cursor~iteratorCallback\n * @param {Object} doc An emitted document for the iterator\n */\n\n/**\n * The callback error format for the forEach iterator method\n * @callback Cursor~endCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n */\n\n/**\n * Iterates over all the documents for this cursor using the iterator, callback pattern.\n * @method\n * @param {Cursor~iteratorCallback} iterator The iteration callback.\n * @param {Cursor~endCallback} callback The end callback.\n * @throws {MongoError}\n * @return {null}\n */\nCursor.prototype.forEach = function(iterator, callback) {\n  this.each(function(err, doc){\n    if(err) { callback(err); return false; }\n    if(doc != null) { iterator(doc); return true; }\n    if(doc == null && callback) {\n      var internalCallback = callback;\n      callback = null;\n      internalCallback(null);\n      return false;\n    }\n  });\n}\n\n/**\n * Set the ReadPreference for the cursor.\n * @method\n * @param {(string|ReadPreference)} readPreference The new read preference for the cursor.\n * @throws {MongoError}\n * @return {Cursor}\n */\nCursor.prototype.setReadPreference = function(r) {\n  if(this.s.state != Cursor.INIT) throw new MongoError('cannot change cursor readPreference after cursor has been accessed');\n  if(r instanceof ReadPreference) {\n    this.s.options.readPreference = new CoreReadPreference(r.mode, r.tags);\n  } else {\n    this.s.options.readPreference = new CoreReadPreference(r);\n  }\n\n  return this;\n}\n\n/**\n * The callback format for results\n * @callback Cursor~toArrayResultCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {object[]} documents All the documents the satisfy the cursor.\n */\n\n/**\n * Returns an array of documents. The caller is responsible for making sure that there\n * is enough memory to store the results. Note that the array only contain partial\n * results when this cursor had been previouly accessed. In that case,\n * cursor.rewind() can be used to reset the cursor.\n * @method\n * @param {Cursor~toArrayResultCallback} callback The result callback.\n * @throws {MongoError}\n * @return {null}\n */\nCursor.prototype.toArray = function(callback) {\n  var self = this;\n  if(!callback) throw new MongoError('callback is mandatory');\n  if(self.s.options.tailable) return handleCallback(callback, new MongoError(\"Tailable cursor cannot be converted to array\"), null);\n  var items = [];\n\n  // Reset cursor\n  this.rewind();\n  self.s.state = Cursor.INIT;\n\n\n  // Fetch all the documents\n  var fetchDocs = function() {\n    self._next(function(err, doc) {\n      if(err) return handleCallback(callback, err);\n      if(doc == null) {\n        self.s.state = Cursor.CLOSED;\n        return handleCallback(callback, null, items);\n      }\n\n      // Add doc to items\n      items.push(doc)\n      // Get all buffered objects\n      if(self.bufferedCount() > 0) {\n        var docs = self.readBufferedDocuments(self.bufferedCount())\n\n        // Transform the doc if transform method added\n        if(self.s.transforms && typeof self.s.transforms.doc == 'function') {\n          docs = docs.map(self.s.transforms.doc);\n        }\n\n        items = items.concat(docs);\n      }\n\n      // Attempt a fetch\n      fetchDocs();\n    })\n  }\n\n  fetchDocs();\n}\n\n/**\n * The callback format for results\n * @callback Cursor~countResultCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {number} count The count of documents.\n */\n\n/**\n * Get the count of documents for this cursor\n * @method\n * @param {boolean} applySkipLimit Should the count command apply limit and skip settings on the cursor or in the passed in options.\n * @param {object} [options=null] Optional settings.\n * @param {number} [options.skip=null] The number of documents to skip.\n * @param {number} [options.limit=null] The maximum amounts to count before aborting.\n * @param {number} [options.maxTimeMS=null] Number of miliseconds to wait before aborting the query.\n * @param {string} [options.hint=null] An index name hint for the query.\n * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {Cursor~countResultCallback} callback The result callback.\n * @return {null}\n */\nCursor.prototype.count = function(applySkipLimit, opts, callback) {\n  var self = this;\n  if(typeof opts == 'function') callback = opts, opts = {};\n  opts = opts || {};\n  if(self.s.cmd.query == null) callback(new MongoError(\"count can only be used with find command\"));\n  if(typeof applySkipLimit == 'function') {\n    callback = applySkipLimit;\n    applySkipLimit = true;\n  }\n\n  if(applySkipLimit) {\n    if(typeof this.cursorSkip() == 'number') opts.skip = this.cursorSkip();\n    if(typeof this.cursorLimit() == 'number') opts.limit = this.cursorLimit();\n  }\n\n  // Command\n  var delimiter = self.s.ns.indexOf('.');\n\n  var command = {\n    'count': self.s.ns.substr(delimiter+1), 'query': self.s.cmd.query\n  }\n\n  if(typeof opts.maxTimeMS == 'number') {\n    command.maxTimeMS = opts.maxTimeMS;\n  } else if(typeof self.s.maxTimeMS == 'number') {\n    command.maxTimeMS = self.s.maxTimeMS;\n  }\n\n  // Get a server\n  var server = self.s.topology.getServer(opts);\n  // Get a connection\n  var connection = self.s.topology.getConnection(opts);\n  // Get the callbacks\n  var callbacks = server.getCallbacks();\n\n  // Merge in any options\n  if(opts.skip) command.skip = opts.skip;\n  if(opts.limit) command.limit = opts.limit;\n  if(self.s.options.hint) command.hint = self.s.options.hint;\n\n  // Build Query object\n  var query = new Query(self.s.bson, f(\"%s.$cmd\", self.s.ns.substr(0, delimiter)), command, {\n      numberToSkip: 0, numberToReturn: -1\n    , checkKeys: false\n  });\n\n  // Set up callback\n  callbacks.register(query.requestId, function(err, result) {\n    if(err) return handleCallback(callback, err);\n    if(result.documents.length == 1\n      && (result.documents[0].errmsg\n      || result.documents[0].err\n      || result.documents[0]['$err'])) return callback(MongoError.create(result.documents[0]));\n    handleCallback(callback, null, result.documents[0].n);\n  });\n\n  // Write the initial command out\n  connection.write(query.toBin());\n};\n\n/**\n * Close the cursor, sending a KillCursor command and emitting close.\n * @method\n * @param {Cursor~resultCallback} [callback] The result callback.\n * @return {null}\n */\nCursor.prototype.close = function(callback) {\n  this.s.state = Cursor.CLOSED;\n  // Kill the cursor\n  this.kill();\n  // Emit the close event for the cursor\n  this.emit('close');\n  // Callback if provided\n  if(callback) return handleCallback(callback, null, this);\n}\n\n/**\n * Map all documents using the provided function\n * @method\n * @param {function} [transform] The mapping transformation method.\n * @return {null}\n */\nCursor.prototype.map = function(transform) {\n  this.cursorState.transforms = { doc: transform };\n  return this;\n}\n\n/**\n * Is the cursor closed\n * @method\n * @return {boolean}\n */\nCursor.prototype.isClosed = function() {\n  return this.isDead();\n}\n\nCursor.prototype.destroy = function(err) {\n  this.pause();\n  this.close();\n  if(err) this.emit('error', err);\n}\n\n/**\n * Return a modified Readable stream including a possible transform method.\n * @method\n * @param {object} [options=null] Optional settings.\n * @param {function} [options.transform=null] A transformation method applied to each document emitted by the stream.\n * @return {Cursor}\n */\nCursor.prototype.stream = function(options) {\n  this.s.streamOptions = options || {};\n  return this;\n}\n\n/**\n * Execute the explain for the cursor\n * @method\n * @param {Cursor~resultCallback} [callback] The result callback.\n * @return {null}\n */\nCursor.prototype.explain = function(callback) {\n  this.s.cmd.explain = true;\n  this._next(callback);\n}\n\nCursor.prototype._read = function(n) {\n  var self = this;\n  if(self.s.state == Cursor.CLOSED || self.isDead()) {\n    return self.push(null);\n  }\n\n  // Get the next item\n  self.nextObject(function(err, result) {\n    if(err) {\n      if(!self.isDead()) self.close();\n      if(self.listeners('error') && self.listeners('error').length > 0) {\n        self.emit('error', err);\n      }\n\n      // Emit end event\n      return self.emit('end');\n    }\n\n    // If we provided a transformation method\n    if(typeof self.s.streamOptions.transform == 'function' && result != null) {\n      return self.push(self.s.streamOptions.transform(result));\n    }\n\n    // If we provided a map function\n    if(self.cursorState.transforms && typeof self.cursorState.transforms.doc == 'function' && result != null) {\n      return self.push(self.cursorState.transforms.doc(result));\n    }\n\n    // Return the result\n    self.push(result);\n  });\n}\n\nObject.defineProperty(Cursor.prototype, 'namespace', {\n  enumerable: true,\n  get: function() {\n    if (!this || !this.s) {\n      return null;\n    }\n\n    // TODO: refactor this logic into core\n    var ns = this.s.ns || '';\n    var firstDot = ns.indexOf('.');\n    if (firstDot < 0) {\n      return {\n        database: this.s.ns,\n        collection: ''\n      };\n    }\n    return {\n      database: ns.substr(0, firstDot),\n      collection: ns.substr(firstDot + 1)\n    };\n  }\n});\n\n/**\n * The read() method pulls some data out of the internal buffer and returns it. If there is no data available, then it will return null.\n * @function external:Readable#read\n * @param {number} size Optional argument to specify how much data to read.\n * @return {(String | Buffer | null)}\n */\n\n/**\n * Call this function to cause the stream to return strings of the specified encoding instead of Buffer objects.\n * @function external:Readable#setEncoding\n * @param {string} encoding The encoding to use.\n * @return {null}\n */\n\n/**\n * This method will cause the readable stream to resume emitting data events.\n * @function external:Readable#resume\n * @return {null}\n */\n\n/**\n * This method will cause a stream in flowing-mode to stop emitting data events. Any data that becomes available will remain in the internal buffer.\n * @function external:Readable#pause\n * @return {null}\n */\n\n/**\n * This method pulls all the data out of a readable stream, and writes it to the supplied destination, automatically managing the flow so that the destination is not overwhelmed by a fast readable stream.\n * @function external:Readable#pipe\n * @param {Writable} destination The destination for writing data\n * @param {object} [options] Pipe options\n * @return {null}\n */\n\n/**\n * This method will remove the hooks set up for a previous pipe() call.\n * @function external:Readable#unpipe\n * @param {Writable} [destination] The destination for writing data\n * @return {null}\n */\n\n/**\n * This is useful in certain cases where a stream is being consumed by a parser, which needs to \"un-consume\" some data that it has optimistically pulled out of the source, so that the stream can be passed on to some other party.\n * @function external:Readable#unshift\n * @param {(Buffer|string)} chunk Chunk of data to unshift onto the read queue.\n * @return {null}\n */\n\n/**\n * Versions of Node prior to v0.10 had streams that did not implement the entire Streams API as it is today. (See \"Compatibility\" below for more information.)\n * @function external:Readable#wrap\n * @param {Stream} stream An \"old style\" readable stream.\n * @return {null}\n */\n\nCursor.INIT = 0;\nCursor.OPEN = 1;\nCursor.CLOSED = 2;\nCursor.GET_MORE = 3;\n\nmodule.exports = Cursor;\n"]}