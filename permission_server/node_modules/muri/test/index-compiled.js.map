{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index-compiled.js","sourcesContent":["\nvar muri = require('../')\nvar assert = require('assert')\n\ndescribe('muri', function(){\n  it('must begin with mongodb://', function(done){\n    assert.throws(function () {\n      muri('localhost:27017');\n    }, /Invalid mongodb uri/);\n    assert.doesNotThrow(function () {\n      muri('mongodb://localhost:27017');\n    })\n    done();\n  })\n\n  describe('user:password', function(done){\n    it('is optional', function(done){\n      var uri = 'mongodb://local:27017';\n      var val = muri(uri);\n      assert.ok(!val.auth);\n      done();\n    })\n\n    it('parses properly', function(done){\n      var uri = 'mongodb://user:password@local:27017';\n      var val = muri(uri);\n      assert.ok(val.auth);\n      assert.equal('user', val.auth.user);\n      assert.equal('password', val.auth.pass);\n      done();\n    })\n\n    it('handles # in the username', function(done){\n      var uri = 'mongodb://us#er:password@local:27017';\n      var val = muri(uri);\n      assert.ok(val.auth);\n      assert.equal('us#er', val.auth.user);\n      assert.equal('password', val.auth.pass);\n      done();\n    })\n\n    it('handles # in the password', function(done){\n      var uri = 'mongodb://user:pa#ssword@local:27017';\n      var val = muri(uri);\n      assert.ok(val.auth);\n      assert.equal('user', val.auth.user);\n      assert.equal('pa#ssword', val.auth.pass);\n      done();\n    })\n  })\n\n  describe('host', function(){\n    it('must be specified', function(done){\n      assert.throws(function () {\n        muri('mongodb://');\n      }, /Missing host/)\n      assert.throws(function () {\n        muri('mongodb:///fake');\n      }, /Missing host/)\n      assert.throws(function () {\n        muri('mongodb://?yep');\n      }, /Missing host/)\n      assert.throws(function () {\n        muri('mongodb:///?yep');\n      }, /Missing host/)\n\n      var val = muri('mongodb://local');\n      assert.ok(Array.isArray(val.hosts));\n      assert.equal(1, val.hosts.length);\n      assert.equal('local', val.hosts[0].host);\n      done();\n    })\n\n    it('supports replica sets', function(done){\n      var val = muri('mongodb://local:27017,remote:27018,japan:99999');\n      assert.ok(Array.isArray(val.hosts));\n      assert.equal(3, val.hosts.length);\n      assert.equal('local', val.hosts[0].host);\n      assert.equal(27017, val.hosts[0].port);\n      assert.equal('remote', val.hosts[1].host);\n      assert.equal(27018, val.hosts[1].port);\n      assert.equal('japan', val.hosts[2].host);\n      assert.equal(99999, val.hosts[2].port);\n      done();\n    })\n  })\n\n  describe('port', function(){\n\n    describe('with single host', function(){\n      it('defaults to 27017 if not specified', function(done){\n        var val = muri('mongodb://local/');\n        assert.equal(27017, val.hosts[0].port);\n        done();\n      })\n\n      it('uses what is specified', function(done){\n        var val = muri('mongodb://local:27018');\n        assert.equal(27018, val.hosts[0].port);\n        done();\n      })\n    })\n\n    describe('with replica sets', function(){\n      var val;\n\n      before(function(){\n        val = muri('mongodb://local,remote:27018,another');\n      })\n\n      it('defaults to 27017 if not specified', function(done){\n        assert.equal(27017, val.hosts[0].port);\n        assert.equal(27017, val.hosts[2].port);\n        done();\n      })\n\n      it('uses what is specified', function(done){\n        assert.equal(27018, val.hosts[1].port);\n        done();\n      })\n    })\n  })\n\n  describe('database', function(){\n    it('default', function(done){\n      var val = muri('mongodb://localhost/');\n      assert.equal('test', val.db);\n      var val = muri('mongodb://localhost');\n      assert.equal('test', val.db);\n      done();\n    })\n    it('is overridable', function(done){\n      var val = muri('mongodb://localhost,a,x:34343,b/muri');\n      assert.equal('muri', val.db);\n      done();\n    })\n    it('works with multiple specified protocols', function(done){\n      var uri = 'mongodb://localhost:27020/testing,mongodb://localhost:27019,mongodb://localhost:27018'\n      var val = muri(uri);\n      assert.equal('testing', val.db);\n      done();\n    })\n  })\n\n  describe('querystring separator', function(){\n    it('can be ; ', function(done){\n      var val = muri('mongodb://muri/?replicaSet=myreplset;slaveOk=true;x=1');\n      assert.ok(val.options);\n      assert.equal(true, val.options.slaveOk);\n      assert.equal('myreplset', val.options.replicaSet);\n      assert.equal(1, val.options.x);\n      done();\n    })\n    it('can be & ', function(done){\n      var val = muri('mongodb://muri/?replicaSet=myreplset&slaveOk=true&x=1');\n      assert.ok(val.options);\n      assert.equal(true, val.options.slaveOk);\n      assert.equal('myreplset', val.options.replicaSet);\n      assert.equal(1, val.options.x);\n      done();\n    })\n  })\n\n  describe('readPref tags', function(){\n    describe('with & ', function(){\n      it('mongodb://localhost/?readPreferenceTags=dc:ny', function(done){\n        var val = muri('mongodb://localhost/?readPreferenceTags=dc:ny');\n        assert.equal('test', val.db);\n        assert.deepEqual([{ dc: 'ny' }], val.options.readPreferenceTags);\n        done();\n      })\n      it('mongodb://localhost/?readPreferenceTags=dc:ny,rack:1', function(done){\n        var val = muri('mongodb://localhost/?readPreferenceTags=dc:ny,rack:1');\n        assert.deepEqual([{ dc: 'ny', rack: 1 }], val.options.readPreferenceTags);\n        done();\n      })\n      it('mongodb://localhost/?readPreferenceTags=dc:ny,rack:1&readPreferenceTags=dc:sf,rack:2', function(done){\n        var val = muri('mongodb://localhost/?readPreferenceTags=dc:ny,rack:1&readPreferenceTags=dc:sf,rack:2');\n        assert.deepEqual([{ dc: 'ny', rack: 1 }, { dc: 'sf', rack: 2 }], val.options.readPreferenceTags);\n        done();\n      })\n      it('mongodb://localhost/db?readPreferenceTags=dc:ny,rack:1&readPreferenceTags=dc:sf,rack:2&readPreferenceTags=', function(done){\n        var val = muri('mongodb://localhost/db?readPreferenceTags=dc:ny,rack:1&readPreferenceTags=dc:sf,rack:2&readPreferenceTags=');\n        assert.deepEqual([{ dc: 'ny', rack: 1 }, { dc: 'sf', rack: 2 }], val.options.readPreferenceTags);\n        done();\n      })\n      it('mongodb://localhost/?readPreferenceTags=dc:ny,rack:1&readPreferenceTags=dc:ny&readPreferenceTags=', function(done){\n        var val = muri('mongodb://localhost/?readPreferenceTags=dc:ny,rack:1&readPreferenceTags=dc:ny&readPreferenceTags=');\n        assert.deepEqual([{ dc: 'ny', rack: 1 }, { dc: 'ny' }], val.options.readPreferenceTags);\n        done();\n      })\n    })\n    describe('with ; ', function(){\n      it('mongodb://localhost/?readPreferenceTags=dc:ny,rack:1;readPreferenceTags=dc:sf,rack:2', function(done){\n        var val = muri('mongodb://localhost/?readPreferenceTags=dc:ny,rack:1;readPreferenceTags=dc:sf,rack:2');\n        assert.deepEqual([{ dc: 'ny', rack: 1 }, { dc: 'sf', rack: 2 }], val.options.readPreferenceTags);\n        done();\n      })\n      it('mongodb://localhost/db?readPreferenceTags=dc:ny,rack:1;readPreferenceTags=dc:sf,rack:2;readPreferenceTags=', function(done){\n        var val = muri('mongodb://localhost/db?readPreferenceTags=dc:ny,rack:1;readPreferenceTags=dc:sf,rack:2;readPreferenceTags=');\n        assert.deepEqual([{ dc: 'ny', rack: 1 }, { dc: 'sf', rack: 2 }], val.options.readPreferenceTags);\n        done();\n      })\n      it('mongodb://localhost/?readPreferenceTags=dc:ny,rack:1;readPreferenceTags=dc:ny;readPreferenceTags=', function(done){\n        var val = muri('mongodb://localhost/?readPreferenceTags=dc:ny,rack:1;readPreferenceTags=dc:ny;readPreferenceTags=');\n        assert.deepEqual([{ dc: 'ny', rack: 1 }, { dc: 'ny' }], val.options.readPreferenceTags);\n        done();\n      })\n    })\n  })\n\n  describe('unix domain sockets', function(){\n    it('without auth', function(done){\n      var val = muri('mongodb:///tmp/mongodb-27017.sock?safe=false');\n      assert.equal(val.db, 'test')\n      assert.ok(Array.isArray(val.hosts));\n      assert.equal(1, val.hosts.length);\n      assert.equal(val.hosts[0].ipc, '/tmp/mongodb-27017.sock')\n      assert.equal(val.hosts[0].host, undefined);\n      assert.equal(val.hosts[0].port, undefined);\n      assert.equal(false, val.options.safe);\n      done();\n    })\n    it('without auth with a database name', function(done){\n      var val = muri('mongodb:///tmp/mongodb-27017.sock/tester?safe=false');\n      assert.equal(val.db, 'tester')\n      assert.ok(Array.isArray(val.hosts));\n      assert.equal(1, val.hosts.length);\n      assert.equal(val.hosts[0].ipc, '/tmp/mongodb-27017.sock')\n      assert.equal(val.hosts[0].host, undefined);\n      assert.equal(val.hosts[0].port, undefined);\n      assert.equal(false, val.options.safe);\n      done();\n    })\n    it('with auth', function(done){\n      var val = muri('mongodb://user:password@/tmp/mongodb-27017.sock?safe=false');\n      assert.equal(val.db, 'admin')\n      assert.ok(Array.isArray(val.hosts));\n      assert.equal(1, val.hosts.length);\n      assert.equal(val.hosts[0].ipc, '/tmp/mongodb-27017.sock')\n      assert.equal(val.hosts[0].host, undefined);\n      assert.equal(val.hosts[0].port, undefined);\n      assert.equal(false, val.options.safe);\n      done();\n    })\n    it('with auth with a db name', function(done){\n      var val = muri('mongodb://user:password@/tmp/mongodb-27017.sock/tester?safe=false');\n      assert.equal(val.db, 'tester')\n      assert.ok(Array.isArray(val.hosts));\n      assert.equal(1, val.hosts.length);\n      assert.equal(val.hosts[0].ipc, '/tmp/mongodb-27017.sock')\n      assert.equal(val.hosts[0].host, undefined);\n      assert.equal(val.hosts[0].port, undefined);\n      assert.equal(false, val.options.safe);\n      done();\n    })\n    it('with auth + repl sets', function(done){\n      var val = muri('mongodb://user:password@/tmp/mongodb-27017.sock,/tmp/another-27018.sock?safe=false');\n      assert.equal(val.db, 'admin')\n      assert.ok(Array.isArray(val.hosts));\n      assert.equal(2, val.hosts.length);\n      assert.equal(val.hosts[0].ipc, '/tmp/mongodb-27017.sock')\n      assert.equal(val.hosts[0].host, undefined);\n      assert.equal(val.hosts[0].port, undefined);\n      assert.equal(val.hosts[1].ipc, '/tmp/another-27018.sock')\n      assert.equal(val.hosts[1].host, undefined);\n      assert.equal(val.hosts[1].port, undefined);\n      assert.equal(false, val.options.safe);\n      done();\n    })\n    it('with auth + repl sets with a db name', function(done){\n      var val = muri('mongodb://user:password@/tmp/mongodb-27017.sock,/tmp/another-27018.sock/tester?safe=false');\n      assert.equal(val.db, 'tester')\n      assert.ok(Array.isArray(val.hosts));\n      assert.equal(2, val.hosts.length);\n      assert.equal(val.hosts[0].ipc, '/tmp/mongodb-27017.sock')\n      assert.equal(val.hosts[0].host, undefined);\n      assert.equal(val.hosts[0].port, undefined);\n      assert.equal(val.hosts[1].ipc, '/tmp/another-27018.sock')\n      assert.equal(val.hosts[1].host, undefined);\n      assert.equal(val.hosts[1].port, undefined);\n      assert.equal(false, val.options.safe);\n      done();\n    })\n  })\n\n  it('all together now', function(done){\n    var uri = 'mongodb://u#ser:pas#s@local,remote:27018,japan:27019/neatdb'\n    uri +=    '?replicaSet=myreplset&journal=true&w=2&wtimeoutMS=50'\n    var val = muri(uri);\n\n    assert.equal('u#ser', val.auth.user);\n    assert.equal('pas#s', val.auth.pass);\n    assert.equal('neatdb', val.db);\n    assert.equal(3, val.hosts.length);\n    assert.equal('local', val.hosts[0].host);\n    assert.strictEqual(27017, val.hosts[0].port);\n    assert.equal('remote', val.hosts[1].host);\n    assert.strictEqual(27018, val.hosts[1].port);\n    assert.equal('japan', val.hosts[2].host);\n    assert.strictEqual(27019, val.hosts[2].port);\n    assert.equal('myreplset', val.options.replicaSet);\n    assert.equal(true, val.options.journal);\n    assert.equal(50, val.options.wtimeoutMS);\n    done();\n  })\n\n  it('has a version', function(done){\n    assert.ok(muri.version);\n    done();\n  })\n})\n"]}