{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index-compiled.js","sourcesContent":["// muri\n\n/**\n * MongoDB URI parser as described here:\n * http://www.mongodb.org/display/DOCS/Connections\n */\n\n/**\n * Module dependencies\n */\n\nvar qs = require('querystring');\n\n/**\n * Defaults\n */\n\nvar DEFAULT_PORT = 27017;\nvar DEFAULT_DB = 'test';\nvar ADMIN_DB = 'admin';\n\n/**\n * Muri\n */\n\nmodule.exports = exports = function muri (str) {\n  if (!/^mongodb:\\/\\//.test(str)) {\n    throw new Error('Invalid mongodb uri. Must begin with \"mongodb://\"'\n                  + '\\n  Received: ' + str);\n  }\n\n  var ret = {\n      hosts: []\n    , db: DEFAULT_DB\n    , options: {}\n  }\n\n  var match = /^mongodb:\\/\\/([^?]+)(\\??.*)$/.exec(str);\n  if (!match || '/' == match[1]) {\n    throw new Error('Invalid mongodb uri. Missing hostname');\n  }\n\n  var uris = match[1];\n  var path = match[2];\n  var db;\n\n  uris.split(',').forEach(function (uri) {\n    var o = parse(uri);\n\n    if (o.host) {\n      ret.hosts.push({\n          host: o.host\n        , port: parseInt(o.port, 10)\n      })\n\n      if (!db && o.db) {\n        db = o.db;\n      }\n    } else if (o.ipc) {\n      ret.hosts.push({ ipc: o.ipc });\n    }\n\n    if (o.auth) {\n      ret.auth = {\n          user: o.auth.user\n        , pass: o.auth.pass\n      }\n    }\n  })\n\n  if (!ret.hosts.length) {\n    throw new Error('Invalid mongodb uri. Missing hostname');\n  }\n\n  var parts = path.split('?');\n\n  if (!db) {\n    if (parts[0]) {\n      db = parts[0].replace(/^\\//, '');\n    } else {\n      // deal with ipc formats\n      db = /\\/([^\\.]+)$/.exec(match[1]);\n      if (db && db[1]) {\n        db = db[1];\n      }\n    }\n  }\n\n  if (db) {\n    ret.db = db;\n  } else if (ret.auth) {\n    ret.db = ADMIN_DB;\n  }\n\n  if (parts[1]) {\n    ret.options = options(parts[1]);\n  }\n\n  return ret;\n}\n\n/**\n * Parse str into key/val pairs casting values appropriately.\n */\n\nfunction options (str) {\n  var sep = /;/.test(str)\n    ? ';'\n    : '&';\n\n  var ret = qs.parse(str, sep);\n\n  Object.keys(ret).forEach(function (key) {\n    var val = ret[key];\n    if ('readPreferenceTags' == key) {\n      val = readPref(val);\n      if (val) {\n        ret[key] = Array.isArray(val)\n          ? val\n          : [val];\n      }\n    } else {\n      ret[key] = format(val);\n    }\n  });\n\n  return ret;\n}\n\nfunction format (val) {\n  var num;\n\n  if ('true' == val) {\n    return true;\n  } else if ('false' == val) {\n    return false;\n  } else {\n    num = parseInt(val, 10);\n    if (!isNaN(num)) {\n      return num;\n    }\n  }\n\n  return val;\n}\n\nfunction readPref (val) {\n  var ret;\n\n  if (Array.isArray(val)) {\n    ret = val.map(readPref).filter(Boolean);\n    return ret.length\n      ? ret\n      : undefined\n  }\n\n  var pair = val.split(',');\n  var hasKeys;\n  ret = {};\n\n  pair.forEach(function (kv) {\n    kv = (kv || '').trim();\n    if (!kv) return;\n    hasKeys = true;\n    var split = kv.split(':');\n    ret[split[0]] = format(split[1]);\n  });\n\n  return hasKeys && ret;\n}\n\nvar ipcRgx = /\\.sock/;\n\nfunction parse (uriString) {\n  // do not use require('url').parse b/c it can't handle # in username or pwd\n  // mongo uris are strange\n\n  var uri = uriString;\n  var ret = {};\n  var parts;\n  var auth;\n  var ipcs;\n\n  // skip protocol\n  uri = uri.replace(/^mongodb:\\/\\//, '');\n\n  // auth\n  if (/@/.test(uri)) {\n    parts = uri.split(/@/);\n    auth = parts[0];\n    uri = parts[1];\n\n    parts = auth.split(':');\n    ret.auth = {};\n    ret.auth.user = parts[0];\n    ret.auth.pass = parts[1];\n  }\n\n  // unix domain sockets\n  if (ipcRgx.test(uri)) {\n    ipcs = uri.split(ipcRgx);\n    ret.ipc = ipcs[0] + '.sock';\n\n    // included a database?\n    if (ipcs[1]) {\n      // strip leading / from database name\n      ipcs[1] = ipcs[1].replace(/^\\//, '');\n\n      if (ipcs[1]) {\n        ret.db = ipcs[1];\n      }\n    }\n\n    return ret;\n  }\n\n  // database name\n  parts = uri.split('/');\n  if (parts[1]) ret.db = parts[1];\n\n  // host:port\n  parts = parts[0].split(':');\n  ret.host = parts[0];\n  ret.port = parts[1] || DEFAULT_PORT;\n\n  return ret;\n}\n\n/**\n * Version\n */\n\nmodule.exports.version = JSON.parse(\n  require('fs').readFileSync(__dirname + '/../package.json', 'utf8')\n).version;\n"]}