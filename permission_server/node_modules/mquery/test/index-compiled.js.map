{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index-compiled.js","sourcesContent":["var mquery = require('../');\nvar assert = require('assert');\n\ndescribe('mquery', function(){\n  var col;\n\n  before(function(done){\n    // get the env specific collection interface\n    require('./env').getCollection(function (err, collection) {\n      assert.ifError(err);\n      col = collection;\n      done();\n    });\n  })\n\n  after(function(done){\n    require('./env').dropCollection(done);\n  })\n\n  describe('mquery', function(){\n    it('is a function', function(){\n      assert.equal('function', typeof mquery);\n    })\n    it('creates instances with the `new` keyword', function(){\n      assert.ok(mquery() instanceof mquery);\n    })\n    describe('defaults', function(){\n      it('are set', function(){\n        var m = mquery();\n        assert.strictEqual(undefined, m.op);\n        assert.deepEqual({}, m.options);\n      })\n    })\n    describe('criteria', function(){\n      it('if collection-like is used as collection', function(){\n        var m = mquery(col);\n        assert.equal(col, m._collection.collection);\n      })\n      it('non-collection-like is used as criteria', function(){\n        var m = mquery({ works: true });\n        assert.ok(!m._collection);\n        assert.deepEqual({ works: true }, m._conditions);\n      })\n    })\n    describe('options', function(){\n      it('are merged when passed', function(){\n        var m = mquery(col, { safe: true });\n        assert.deepEqual({ safe: true }, m.options);\n        var m = mquery({ name: 'mquery' }, { safe: true });\n        assert.deepEqual({ safe: true }, m.options);\n      })\n    })\n  })\n\n  describe('toConstructor', function(){\n    it('creates subclasses of mquery', function(){\n      var opts = { safe: { w: 'majority' }, readPreference: 'p' };\n      var match = { name: 'test', count: { $gt: 101 }};\n      var select = { name: 1, count: 0 }\n      var update = { $set: { x: true }};\n      var path = 'street';\n\n      var q = mquery().setOptions(opts);\n      q.where(match);\n      q.select(select);\n      q.update(update);\n      q.where(path);\n      q.find();\n\n      var M = q.toConstructor();\n      var m = M();\n\n      assert.ok(m instanceof mquery);\n      assert.deepEqual(opts, m.options);\n      assert.deepEqual(match, m._conditions);\n      assert.deepEqual(select, m._fields);\n      assert.deepEqual(update, m._update);\n      assert.equal(path, m._path);\n      assert.equal('find', m.op);\n    })\n  })\n\n  describe('setOptions', function(){\n    it('calls associated methods', function(){\n      var m = mquery();\n      assert.equal(m._collection, null);\n      m.setOptions({ collection: col });\n      assert.equal(m._collection.collection, col);\n    })\n    it('directly sets option when no method exists', function(){\n      var m = mquery();\n      assert.equal(m.options.woot, null);\n      m.setOptions({ woot: 'yay' });\n      assert.equal(m.options.woot, 'yay');\n    })\n    it('is chainable', function(){\n      var m = mquery();\n      var n = m.setOptions();\n      assert.equal(m, n);\n      var n = m.setOptions({ x: 1 });\n      assert.equal(m, n);\n    })\n  })\n\n  describe('collection', function(){\n    it('sets the _collection', function(){\n      var m = mquery();\n      m.collection(col);\n      assert.equal(m._collection.collection, col);\n    })\n    it('is chainable', function(){\n      var m = mquery();\n      var n = m.collection(col);\n      assert.equal(m, n);\n    })\n  })\n\n  describe('$where', function(){\n    it('sets the $where condition', function(){\n      var m = mquery();\n      function go () {}\n      m.$where(go);\n      assert.ok(go === m._conditions.$where);\n    })\n    it('is chainable', function(){\n      var m = mquery();\n      var n = m.$where('x');\n      assert.equal(m, n);\n    })\n  })\n\n  describe('where', function(){\n    it('without arguments', function(){\n      var m = mquery();\n      m.where();\n      assert.deepEqual({}, m._conditions);\n    })\n    it('with non-string/object argument', function(){\n      var m = mquery();\n\n      assert.throws(function(){\n        m.where([]);\n      }, /path must be a string or object/);\n    })\n    describe('with one argument', function(){\n      it('that is an object', function(){\n        var m = mquery();\n        m.where({ name: 'flawed' });\n        assert.strictEqual(m._conditions.name, 'flawed');\n      })\n      it('that is a query', function(){\n        var m = mquery({ name: 'first' });\n        var n = mquery({ name: 'changed' });\n        m.where(n);\n        assert.strictEqual(m._conditions.name, 'changed');\n      })\n      it('that is a string', function(){\n        var m = mquery();\n        m.where('name');\n        assert.equal('name', m._path);\n        assert.strictEqual(m._conditions.name, undefined);\n      })\n    })\n    it('with two arguments', function(){\n      var m = mquery();\n      m.where('name', 'The Great Pumpkin');\n      assert.equal('name', m._path);\n      assert.strictEqual(m._conditions.name, 'The Great Pumpkin');\n    })\n    it('is chainable', function(){\n      var m = mquery();\n      var n = m.where('x', 'y');\n      assert.equal(m, n);\n      var n = m.where()\n      assert.equal(m, n);\n    })\n  })\n\n  describe('equals', function(){\n    it('must be called after where()', function(){\n      var m = mquery();\n      assert.throws(function () {\n        m.equals();\n      }, /must be used after where/)\n    })\n    it('sets value of path set with where()', function(){\n      var m = mquery();\n      m.where('age').equals(1000);\n      assert.deepEqual({ age: 1000 }, m._conditions);\n    })\n    it('is chainable', function(){\n      var m = mquery();\n      var n = m.where('x').equals(3);\n      assert.equal(m, n);\n    })\n  })\n\n  describe('or', function(){\n    it('pushes onto the internal $or condition', function(){\n      var m = mquery();\n      m.or({ 'Nightmare Before Christmas': true });\n      assert.deepEqual([{'Nightmare Before Christmas': true }], m._conditions.$or)\n    })\n    it('allows passing arrays', function(){\n      var m = mquery();\n      var arg = [{ 'Nightmare Before Christmas': true }, { x: 1 }];\n      m.or(arg);\n      assert.deepEqual(arg, m._conditions.$or)\n    })\n    it('allows calling multiple times', function(){\n      var m = mquery();\n      var arg = [{ looper: true }, { x: 1 }];\n      m.or(arg);\n      m.or({ y: 1 })\n      m.or([{ w: 'oo' }, { z: 'oo'} ])\n      assert.deepEqual([{looper:true},{x:1},{y:1},{w:'oo'},{z:'oo'}], m._conditions.$or)\n    })\n    it('is chainable', function(){\n      var m = mquery();\n      m.or({ o: \"k\"}).where('name', 'table');\n      assert.deepEqual({ name: 'table', $or: [{ o: 'k' }] }, m._conditions)\n    })\n  })\n\n  describe('nor', function(){\n    it('pushes onto the internal $nor condition', function(){\n      var m = mquery();\n      m.nor({ 'Nightmare Before Christmas': true });\n      assert.deepEqual([{'Nightmare Before Christmas': true }], m._conditions.$nor)\n    })\n    it('allows passing arrays', function(){\n      var m = mquery();\n      var arg = [{ 'Nightmare Before Christmas': true }, { x: 1 }];\n      m.nor(arg);\n      assert.deepEqual(arg, m._conditions.$nor)\n    })\n    it('allows calling multiple times', function(){\n      var m = mquery();\n      var arg = [{ looper: true }, { x: 1 }];\n      m.nor(arg);\n      m.nor({ y: 1 })\n      m.nor([{ w: 'oo' }, { z: 'oo'} ])\n      assert.deepEqual([{looper:true},{x:1},{y:1},{w:'oo'},{z:'oo'}], m._conditions.$nor)\n    })\n    it('is chainable', function(){\n      var m = mquery();\n      m.nor({ o: \"k\"}).where('name', 'table');\n      assert.deepEqual({ name: 'table', $nor: [{ o: 'k' }] }, m._conditions)\n    })\n  })\n\n  describe('and', function(){\n    it('pushes onto the internal $and condition', function(){\n      var m = mquery();\n      m.and({ 'Nightmare Before Christmas': true });\n      assert.deepEqual([{'Nightmare Before Christmas': true }], m._conditions.$and)\n    })\n    it('allows passing arrays', function(){\n      var m = mquery();\n      var arg = [{ 'Nightmare Before Christmas': true }, { x: 1 }];\n      m.and(arg);\n      assert.deepEqual(arg, m._conditions.$and)\n    })\n    it('allows calling multiple times', function(){\n      var m = mquery();\n      var arg = [{ looper: true }, { x: 1 }];\n      m.and(arg);\n      m.and({ y: 1 })\n      m.and([{ w: 'oo' }, { z: 'oo'} ])\n      assert.deepEqual([{looper:true},{x:1},{y:1},{w:'oo'},{z:'oo'}], m._conditions.$and)\n    })\n    it('is chainable', function(){\n      var m = mquery();\n      m.and({ o: \"k\"}).where('name', 'table');\n      assert.deepEqual({ name: 'table', $and: [{ o: 'k' }] }, m._conditions)\n    })\n  })\n\n  function generalCondition (type) {\n    return function () {\n      it('accepts 2 args', function(){\n        var m = mquery()[type]('count', 3);\n        var check = {};\n        check['$' + type] = 3;\n        assert.deepEqual(m._conditions.count, check);\n      })\n      it('uses previously set `where` path if 1 arg passed', function(){\n        var m = mquery().where('count')[type](3);\n        var check = {};\n        check['$' + type] = 3;\n        assert.deepEqual(m._conditions.count, check);\n      })\n      it('throws if 1 arg was passed but no previous `where` was used', function(){\n        assert.throws(function(){\n          mquery()[type](3);\n        }, /must be used after where/);\n      })\n      it('is chainable', function(){\n        var m = mquery().where('count')[type](3).where('x', 8);\n        var check = {x: 8, count: {}};\n        check.count['$' + type] = 3;\n        assert.deepEqual(m._conditions, check);\n      })\n      it('overwrites previous value', function(){\n        var m = mquery().where('count')[type](3)[type](8);\n        var check = {};\n        check['$' + type] = 8;\n        assert.deepEqual(m._conditions.count, check);\n      })\n    }\n  }\n\n  'gt gte lt lte ne in nin regex size maxDistance'.split(' ').forEach(function (type) {\n    describe(type, generalCondition(type))\n  })\n\n  describe('mod', function () {\n    describe('with 1 argument', function(){\n      it('requires a previous where()', function(){\n        assert.throws(function () {\n          mquery().mod([30, 10])\n        }, /must be used after where/);\n      })\n      it('works', function(){\n        var m = mquery().where('madmen').mod([10,20]);\n        assert.deepEqual(m._conditions, { madmen: { $mod: [10,20] }})\n      })\n    })\n\n    describe('with 2 arguments and second is non-Array', function(){\n      it('requires a previous where()', function(){\n        assert.throws(function () {\n          mquery().mod('x', 10)\n        }, /must be used after where/);\n      })\n      it('works', function(){\n        var m = mquery().where('madmen').mod(10, 20);\n        assert.deepEqual(m._conditions, { madmen: { $mod: [10,20] }})\n      })\n    })\n\n    it('with 2 arguments and second is an array', function(){\n      var m = mquery().mod('madmen', [10,20]);\n      assert.deepEqual(m._conditions, { madmen: { $mod: [10,20] }})\n    })\n\n    it('with 3 arguments', function(){\n      var m = mquery().mod('madmen', 10, 20);\n      assert.deepEqual(m._conditions, { madmen: { $mod: [10,20] }})\n    })\n\n    it('is chainable', function(){\n      var m = mquery().mod('madmen', 10, 20).where('x', 8);\n      var check = { madmen: { $mod: [10,20] }, x: 8};\n      assert.deepEqual(m._conditions, check);\n    })\n  })\n\n  describe('exists', function(){\n    it('with 0 args', function(){\n      it('throws if not used after where()', function(){\n        assert.throws(function () {\n          mquery().exists()\n        }, /must be used after where/);\n      })\n      it('works', function(){\n        var m = mquery().where('name').exists();\n        var check = { name: { $exists: true }};\n        assert.deepEqual(m._conditions, check);\n      })\n    })\n\n    describe('with 1 arg', function(){\n      describe('that is boolean', function(){\n        it('throws if not used after where()', function(){\n          assert.throws(function () {\n            mquery().exists()\n          }, /must be used after where/);\n        })\n        it('works', function(){\n          var m = mquery().exists('name', false);\n          var check = { name: { $exists: false }};\n          assert.deepEqual(m._conditions, check);\n        })\n      })\n      describe('that is not boolean', function(){\n        it('sets the value to `true`', function(){\n          var m = mquery().where('name').exists('yummy');\n          var check = { yummy: { $exists: true }};\n          assert.deepEqual(m._conditions, check);\n        })\n      })\n    })\n\n    describe('with 2 args', function(){\n      it('works', function(){\n        var m = mquery().exists('yummy', false);\n        var check = { yummy: { $exists: false }};\n        assert.deepEqual(m._conditions, check);\n      })\n    })\n\n    it('is chainable', function(){\n      var m = mquery().where('name').exists().find({ x: 1 });\n      var check = { name: { $exists: true }, x: 1};\n      assert.deepEqual(m._conditions, check);\n    })\n  })\n\n  describe('elemMatch', function(){\n    describe('with null/undefined first argument', function(){\n      assert.throws(function () {\n        mquery().elemMatch();\n      }, /Invalid argument/);\n      assert.throws(function () {\n        mquery().elemMatch(null);\n      }, /Invalid argument/);\n      assert.doesNotThrow(function () {\n        mquery().elemMatch('', {});\n      });\n    })\n\n    describe('with 1 argument', function(){\n      it('throws if not a function or object', function(){\n        assert.throws(function () {\n          mquery().elemMatch([]);\n        }, /Invalid argument/);\n      })\n\n      describe('that is an object', function(){\n        it('throws if no previous `where` was used', function(){\n          assert.throws(function () {\n            mquery().elemMatch({});\n          }, /must be used after where/);\n        })\n        it('works', function(){\n          var m = mquery().where('comment').elemMatch({ author: 'joe', votes: {$gte: 3 }});\n          assert.deepEqual({ comment: { $elemMatch: { author: 'joe', votes: {$gte: 3}}}}, m._conditions);\n        })\n      })\n      describe('that is a function', function(){\n        it('throws if no previous `where` was used', function(){\n          assert.throws(function () {\n            mquery().elemMatch(function(){});\n          }, /must be used after where/);\n        })\n        it('works', function(){\n          var m = mquery().where('comment').elemMatch(function (query) {\n            query.where({ author: 'joe', votes: {$gte: 3 }})\n          });\n          assert.deepEqual({ comment: { $elemMatch: { author: 'joe', votes: {$gte: 3}}}}, m._conditions);\n        })\n      })\n    })\n\n    describe('with 2 arguments', function(){\n      describe('and the 2nd is an object', function(){\n        it('works', function(){\n          var m = mquery().elemMatch('comment', { author: 'joe', votes: {$gte: 3 }});\n          assert.deepEqual({ comment: { $elemMatch: { author: 'joe', votes: {$gte: 3}}}}, m._conditions);\n        })\n      })\n      describe('and the 2nd is a function', function(){\n        it('works', function(){\n          var m = mquery().elemMatch('comment', function (query) {\n            query.where({ author: 'joe', votes: {$gte: 3 }})\n          });\n          assert.deepEqual({ comment: { $elemMatch: { author: 'joe', votes: {$gte: 3}}}}, m._conditions);\n        })\n      })\n      it('and the 2nd is not a function or object', function(){\n        assert.throws(function () {\n          mquery().elemMatch('comment', []);\n        }, /Invalid argument/);\n      })\n    })\n  })\n\n  describe('within', function(){\n    it('is chainable', function(){\n      var m = mquery();\n      assert.equal(m.where('a').within(), m);\n    })\n    describe('when called with arguments', function(){\n      it('must follow where()', function(){\n        assert.throws(function () {\n          mquery().within([]);\n        }, /must be used after where/);\n      })\n\n      describe('of length 1', function(){\n        it('throws if not a recognized shape', function(){\n          assert.throws(function () {\n            mquery().where('loc').within({});\n          }, /Invalid argument/)\n          assert.throws(function () {\n            mquery().where('loc').within(null);\n          }, /Invalid argument/)\n        })\n        it('delegates to circle when center exists', function(){\n          var m = mquery().where('loc').within({ center: [10,10], radius: 3 });\n          assert.deepEqual({ $geoWithin: {$center:[[10,10], 3]}}, m._conditions.loc);\n        })\n        it('delegates to box when exists', function(){\n          var m = mquery().where('loc').within({ box: [[10,10], [11,14]] });\n          assert.deepEqual({ $geoWithin: {$box:[[10,10], [11,14]]}}, m._conditions.loc);\n        })\n        it('delegates to polygon when exists', function(){\n          var m = mquery().where('loc').within({ polygon: [[10,10], [11,14],[10,9]] });\n          assert.deepEqual({ $geoWithin: {$polygon:[[10,10], [11,14],[10,9]]}}, m._conditions.loc);\n        })\n        it('delegates to geometry when exists', function(){\n          var m = mquery().where('loc').within({ type: 'Polygon', coordinates: [[10,10], [11,14],[10,9]] });\n          assert.deepEqual({ $geoWithin: {$geometry: {type:'Polygon', coordinates: [[10,10], [11,14],[10,9]]}}}, m._conditions.loc);\n        })\n      })\n\n      describe('of length 2', function(){\n        it('delegates to box()', function(){\n          var m = mquery().where('loc').within([1,2],[2,5]);\n          assert.deepEqual(m._conditions.loc, { $geoWithin: { $box: [[1,2],[2,5]]}});\n        })\n      })\n\n      describe('of length > 2', function(){\n        it('delegates to polygon()', function(){\n          var m = mquery().where('loc').within([1,2],[2,5],[2,4],[1,3]);\n          assert.deepEqual(m._conditions.loc, { $geoWithin: { $polygon: [[1,2],[2,5],[2,4],[1,3]]}});\n        })\n      })\n    })\n  })\n\n  describe('geoWithin', function(){\n    before(function(){\n      mquery.use$geoWithin = false;\n    })\n    after(function(){\n      mquery.use$geoWithin = true;\n    })\n    describe('when called with arguments', function(){\n      describe('of length 1', function(){\n        it('delegates to circle when center exists', function(){\n          var m = mquery().where('loc').within({ center: [10,10], radius: 3 });\n          assert.deepEqual({ $within: {$center:[[10,10], 3]}}, m._conditions.loc);\n        })\n        it('delegates to box when exists', function(){\n          var m = mquery().where('loc').within({ box: [[10,10], [11,14]] });\n          assert.deepEqual({ $within: {$box:[[10,10], [11,14]]}}, m._conditions.loc);\n        })\n        it('delegates to polygon when exists', function(){\n          var m = mquery().where('loc').within({ polygon: [[10,10], [11,14],[10,9]] });\n          assert.deepEqual({ $within: {$polygon:[[10,10], [11,14],[10,9]]}}, m._conditions.loc);\n        })\n        it('delegates to geometry when exists', function(){\n          var m = mquery().where('loc').within({ type: 'Polygon', coordinates: [[10,10], [11,14],[10,9]] });\n          assert.deepEqual({ $within: {$geometry: {type:'Polygon', coordinates: [[10,10], [11,14],[10,9]]}}}, m._conditions.loc);\n        })\n      })\n\n      describe('of length 2', function(){\n        it('delegates to box()', function(){\n          var m = mquery().where('loc').within([1,2],[2,5]);\n          assert.deepEqual(m._conditions.loc, { $within: { $box: [[1,2],[2,5]]}});\n        })\n      })\n\n      describe('of length > 2', function(){\n        it('delegates to polygon()', function(){\n          var m = mquery().where('loc').within([1,2],[2,5],[2,4],[1,3]);\n          assert.deepEqual(m._conditions.loc, { $within: { $polygon: [[1,2],[2,5],[2,4],[1,3]]}});\n        })\n      })\n    })\n  })\n\n  describe('box', function(){\n    describe('with 1 argument', function(){\n      it('throws', function(){\n        assert.throws(function () {\n          mquery().box('sometihng');\n        }, /Invalid argument/);\n      })\n    })\n    describe('with > 3 arguments', function(){\n      it('throws', function(){\n        assert.throws(function () {\n          mquery().box(1,2,3,4);\n        }, /Invalid argument/);\n      })\n    })\n\n    describe('with 2 arguments', function(){\n      it('throws if not used after where()', function(){\n        assert.throws(function () {\n          mquery().box([],[]);\n        }, /must be used after where/);\n      })\n      it('works', function(){\n        var m = mquery().where('loc').box([1,2],[3,4]);\n        assert.deepEqual(m._conditions.loc, { $geoWithin: { $box: [[1,2],[3,4]] }});\n      })\n    })\n\n    describe('with 3 arguments', function(){\n      it('works', function(){\n        var m = mquery().box('loc', [1,2],[3,4]);\n        assert.deepEqual(m._conditions.loc, { $geoWithin: { $box: [[1,2],[3,4]] }});\n      })\n    })\n  })\n\n  describe('polygon', function(){\n    describe('when first argument is not a string', function(){\n      it('throws if not used after where()', function(){\n        assert.throws(function () {\n          mquery().polygon({});\n        }, /must be used after where/);\n\n        assert.doesNotThrow(function () {\n          mquery().where('loc').polygon([1,2], [2,3], [3,6]);\n        });\n      })\n\n      it('assigns arguments to within polygon condition', function(){\n        var m = mquery().where('loc').polygon([1,2], [2,3], [3,6]);\n        assert.deepEqual(m._conditions, { loc: {$geoWithin: {$polygon: [[1,2],[2,3],[3,6]]}} });\n      })\n    })\n\n    describe('when first arg is a string', function(){\n      it('assigns remaining arguments to within polygon condition', function(){\n        var m = mquery().polygon('loc', [1,2], [2,3], [3,6]);\n        assert.deepEqual(m._conditions, { loc: {$geoWithin: {$polygon: [[1,2],[2,3],[3,6]]}} });\n      })\n    })\n  })\n\n  describe('circle', function(){\n    describe('with one arg', function(){\n      it('must follow where()', function(){\n        assert.throws(function () {\n          mquery().circle('x');\n        }, /must be used after where/);\n        assert.doesNotThrow(function () {\n          mquery().where('loc').circle({center:[0,0], radius: 3 });\n        });\n      })\n      it('works', function(){\n        var m = mquery().where('loc').circle({center:[0,0], radius: 3 });\n        assert.deepEqual(m._conditions, { loc: { $geoWithin: {$center: [[0,0],3] }}});\n      })\n    })\n    describe('with 3 args', function(){\n      it('throws', function(){\n        assert.throws(function () {\n          mquery().where('loc').circle(1,2,3);\n        }, /Invalid argument/);\n      })\n    })\n    describe('requires radius and center', function(){\n      assert.throws(function () {\n        mquery().circle('loc', { center: 1 });\n      }, /center and radius are required/);\n      assert.throws(function () {\n        mquery().circle('loc', { radius: 1 });\n      }, /center and radius are required/);\n      assert.doesNotThrow(function () {\n        mquery().circle('loc', { center: [1,2], radius: 1 });\n      });\n    })\n  })\n\n  describe('geometry', function(){\n    // within + intersects\n    var point = { type: 'Point', coordinates: [[0,0],[1,1]] };\n\n    it('must be called after within or intersects', function(done){\n      assert.throws(function () {\n        mquery().where('a').geometry(point);\n      }, /must come after/);\n\n      assert.doesNotThrow(function () {\n        mquery().where('a').within().geometry(point);\n      });\n\n      assert.doesNotThrow(function () {\n        mquery().where('a').intersects().geometry(point);\n      });\n\n      done();\n    })\n\n    describe('when called with one argument', function(){\n      describe('after within()', function(){\n        it('and arg quacks like geoJSON', function(done){\n          var m = mquery().where('a').within().geometry(point);\n          assert.deepEqual({ a: { $geoWithin: { $geometry: point }}}, m._conditions);\n          done();\n        })\n      })\n\n      describe('after intersects()', function(){\n        it('and arg quacks like geoJSON', function(done){\n          var m = mquery().where('a').intersects().geometry(point);\n          assert.deepEqual({ a: { $geoIntersects: { $geometry: point }}}, m._conditions);\n          done();\n        })\n      })\n\n      it('and arg does not quack like geoJSON', function(done){\n        assert.throws(function () {\n          mquery().where('b').within().geometry({type:1, coordinates:2});\n        }, /Invalid argument/);\n        done();\n      })\n    })\n\n    describe('when called with zero arguments', function(){\n      it('throws', function(done){\n        assert.throws(function () {\n          mquery().where('a').within().geometry();\n        }, /Invalid argument/);\n\n        done();\n      })\n    })\n\n    describe('when called with more than one arguments', function(){\n      it('throws', function(done){\n        assert.throws(function () {\n          mquery().where('a').within().geometry({type:'a',coordinates:[]}, 2);\n        }, /Invalid argument/);\n        done();\n      })\n    })\n  })\n\n  describe('intersects', function(){\n    it('must be used after where()', function(done){\n      var m = mquery();\n      assert.throws(function () {\n        m.intersects();\n      }, /must be used after where/)\n      done();\n    })\n\n    it('sets geo comparison to \"$intersects\"', function(done){\n      var n = mquery().where('a').intersects();\n      assert.equal('$geoIntersects', n._geoComparison);\n      done();\n    })\n\n    it('is chainable', function(){\n      var m = mquery();\n      assert.equal(m.where('a').intersects(), m);\n    })\n\n    it('calls geometry if argument quacks like geojson', function(done){\n      var m = mquery();\n      var o = { type: 'LineString', coordinates: [[0,1],[3,40]] };\n      var ran = false;\n\n      m.geometry = function (arg) {\n        ran = true;\n        assert.deepEqual(o, arg);\n      }\n\n      m.where('a').intersects(o);\n      assert.ok(ran);\n\n      done();\n    })\n\n    it('throws if argument is not geometry-like', function(done){\n      var m = mquery().where('a');\n\n      assert.throws(function () {\n        m.intersects(null);\n      }, /Invalid argument/);\n\n      assert.throws(function () {\n        m.intersects(undefined);\n      }, /Invalid argument/);\n\n      assert.throws(function () {\n        m.intersects(false);\n      }, /Invalid argument/);\n\n      assert.throws(function () {\n        m.intersects({});\n      }, /Invalid argument/);\n\n      assert.throws(function () {\n        m.intersects([]);\n      }, /Invalid argument/);\n\n      assert.throws(function () {\n        m.intersects(function(){});\n      }, /Invalid argument/);\n\n      assert.throws(function () {\n        m.intersects(NaN);\n      }, /Invalid argument/);\n\n      done();\n    })\n  })\n\n  describe('near', function(){\n    // near nearSphere\n    describe('with 0 args', function(){\n      it('is compatible with geometry()', function(done){\n        var q = mquery().where('x').near().geometry({ type: 'Point', coordinates: [180, 11] });\n        assert.deepEqual({ $near: {$geometry: {type:'Point', coordinates: [180,11]}}}, q._conditions.x);\n        done();\n      })\n    })\n\n    describe('with 1 arg', function(){\n      it('throws if not used after where()', function(){\n        assert.throws(function () {\n          mquery().near(1);\n        }, /must be used after where/)\n      })\n      it('does not throw if used after where()', function(){\n        assert.doesNotThrow(function () {\n          mquery().where('loc').near({center:[1,1]});\n        })\n      })\n    })\n    describe('with > 2 args', function(){\n      it('throws', function(){\n        assert.throws(function () {\n          mquery().near(1,2,3);\n        }, /Invalid argument/)\n      })\n    })\n\n    it('creates $geometry args for GeoJSON', function(){\n      var m = mquery().where('loc').near({ center: { type: 'Point', coordinates: [10,10] }});\n      assert.deepEqual({ $near: {$geometry: {type:'Point', coordinates: [10,10]}}}, m._conditions.loc);\n    })\n\n    it('expects `center`', function(){\n      assert.throws(function () {\n        mquery().near('loc', { maxDistance: 3 });\n      }, /center is required/)\n      assert.doesNotThrow(function () {\n        mquery().near('loc', { center: [3,4] });\n      })\n    })\n\n    it('accepts spherical conditions', function(){\n      var m = mquery().where('loc').near({ center: [1,2], spherical: true });\n      assert.deepEqual(m._conditions, { loc: { $nearSphere: [1,2]}});\n    })\n\n    it('is non-spherical by default', function(){\n      var m = mquery().where('loc').near({ center: [1,2] });\n      assert.deepEqual(m._conditions, { loc: { $near: [1,2]}});\n    })\n\n    it('supports maxDistance', function(){\n      var m = mquery().where('loc').near({ center: [1,2], maxDistance:4 });\n      assert.deepEqual(m._conditions, { loc: { $near: [1,2], $maxDistance: 4}});\n    })\n\n    it('is chainable', function(){\n      var m = mquery().where('loc').near({ center: [1,2], maxDistance:4 }).find({ x: 1 });\n      assert.deepEqual(m._conditions, { loc: { $near: [1,2], $maxDistance: 4}, x: 1});\n    })\n\n    describe('supports passing GeoJSON, gh-13', function(){\n      it('with center', function(){\n        var m = mquery().where('loc').near({\n            center: { type: 'Point', coordinates: [1,1] }\n          , maxDistance: 2\n        });\n\n        var expect = {\n            loc: {\n                $near: {\n                    $geometry: {\n                        type: 'Point'\n                      , coordinates : [1,1]\n                    }\n                  , $maxDistance : 2\n                }\n            }\n        }\n\n        assert.deepEqual(m._conditions, expect);\n      })\n    })\n  })\n\n  // fields\n\n  describe('select', function(){\n    describe('with 0 args', function(){\n      it('is chainable', function(){\n        var m = mquery()\n        assert.equal(m, m.select());\n      })\n    })\n\n    it('accepts an object', function(){\n      var o = { x: 1, y: 1 }\n      var m = mquery().select(o);\n      assert.deepEqual(m._fields, o);\n    })\n\n    it('accepts a string', function(){\n      var o = 'x -y';\n      var m = mquery().select(o);\n      assert.deepEqual(m._fields, { x: 1, y: 0 });\n    })\n\n    it('does not accept an array', function(done){\n      assert.throws(function () {\n        var o = ['x', '-y'];\n        var m = mquery().select(o);\n      }, /Invalid select/);\n      done();\n    })\n\n    it('merges previous arguments', function(){\n      var o = { x: 1, y: 0, a: 1 }\n      var m = mquery().select(o);\n      m.select('z -u w').select({ x: 0 })\n      assert.deepEqual(m._fields, {\n          x: 0\n        , y: 0\n        , z: 1\n        , u: 0\n        , w: 1\n        , a: 1\n      });\n    })\n\n    it('rejects non-string, object, arrays', function(){\n      assert.throws(function () {\n        mquery().select(function(){});\n      }, /Invalid select\\(\\) argument/);\n    })\n\n    it('accepts aguments objects', function(){\n      var m = mquery();\n      function t () {\n        m.select(arguments);\n        assert.deepEqual(m._fields, { x: 1, y: 0 });\n      }\n      t('x', '-y');\n    })\n\n    noDistinct('select');\n    no('count', 'select');\n  })\n\n  describe('selected', function() {\n    it('returns true when fields have been selected', function(done) {\n      var m = mquery().select({ name: 1 });\n      assert.ok(m.selected());\n\n      var m = mquery().select('name');\n      assert.ok(m.selected());\n\n      done();\n    });\n\n    it('returns false when no fields have been selected', function(done) {\n      var m = mquery();\n      assert.strictEqual(false, m.selected());\n      done();\n    });\n  });\n\n  describe('selectedInclusively', function() {\n    describe('returns false', function(){\n      it('when no fields have been selected', function(done) {\n        assert.strictEqual(false, mquery().selectedInclusively());\n        assert.equal(false, mquery().select({}).selectedInclusively());\n        done();\n      });\n      it('when any fields have been excluded', function(done) {\n        assert.strictEqual(false, mquery().select('-name').selectedInclusively());\n        assert.strictEqual(false, mquery().select({ name: 0 }).selectedInclusively());\n        assert.strictEqual(false, mquery().select('name bio -_id').selectedInclusively());\n        assert.strictEqual(false, mquery().select({ name: 1, _id: 0 }).selectedInclusively());\n        done();\n      });\n    });\n\n    describe('returns true', function() {\n      it('when fields have been included', function(done) {\n        assert.equal(true, mquery().select('name').selectedInclusively());\n        assert.equal(true, mquery().select({ name:1 }).selectedInclusively());\n        done();\n      });\n    });\n  });\n\n  describe('selectedExclusively', function() {\n    describe('returns false', function(){\n      it('when no fields have been selected', function(done) {\n        assert.equal(false, mquery().selectedExclusively());\n        assert.equal(false, mquery().select({}).selectedExclusively());\n        done();\n      });\n      it('when fields have only been included', function(done) {\n        assert.equal(false, mquery().select('name').selectedExclusively());\n        assert.equal(false, mquery().select({ name: 1 }).selectedExclusively());\n        done();\n      });\n    });\n\n    describe('returns true', function() {\n      it('when any field has been excluded', function(done) {\n        assert.equal(true, mquery().select('-name').selectedExclusively());\n        assert.equal(true, mquery().select({ name:0 }).selectedExclusively());\n        assert.equal(true, mquery().select('-_id').selectedExclusively());\n        assert.strictEqual(true, mquery().select('name bio -_id').selectedExclusively());\n        assert.strictEqual(true, mquery().select({ name: 1, _id: 0 }).selectedExclusively());\n        done();\n      });\n    });\n  });\n\n  describe('slice', function(){\n    describe('with 0 args', function(){\n      it('is chainable', function(){\n        var m = mquery()\n        assert.equal(m, m.slice());\n      })\n      it('is a noop', function(){\n        var m = mquery().slice();\n        assert.deepEqual(m._fields, undefined);\n      })\n    })\n\n    describe('with 1 arg', function(){\n      it('throws if not called after where()', function(){\n        assert.throws(function () {\n          mquery().slice(1);\n        }, /must be used after where/);\n        assert.doesNotThrow(function () {\n          mquery().where('a').slice(1);\n        });\n      })\n      it('that is a number', function(){\n        var query = mquery();\n        query.where('collection').slice(5);\n        assert.deepEqual(query._fields, {collection: {$slice: 5}});\n      })\n      it('that is an array', function(){\n        var query = mquery();\n        query.where('collection').slice([5,10]);\n        assert.deepEqual(query._fields, {collection: {$slice: [5,10]}});\n      })\n      it('that is an object', function() {\n        var query = mquery();\n        query.slice({ collection: [5, 10] });\n        assert.deepEqual(query._fields, {collection: {$slice: [5,10]}});\n      })\n    })\n\n    describe('with 2 args', function(){\n      describe('and first is a number', function(){\n        it('throws if not called after where', function(){\n          assert.throws(function () {\n            mquery().slice(2,3);\n          }, /must be used after where/);\n        })\n        it('does not throw if used after where', function(){\n          var query = mquery();\n          query.where('collection').slice(2,3);\n          assert.deepEqual(query._fields, {collection: {$slice: [2,3]}});\n        })\n      })\n      it('and first is not a number', function(){\n        var query = mquery().slice('collection', [-5, 2]);\n        assert.deepEqual(query._fields, {collection: {$slice: [-5,2]}});\n      })\n    })\n\n    describe('with 3 args', function(){\n      it('works', function(){\n        var query = mquery();\n        query.slice('collection', 14, 10);\n        assert.deepEqual(query._fields, {collection: {$slice: [14, 10]}});\n      })\n    })\n\n    noDistinct('slice');\n    no('count', 'slice');\n  })\n\n  // options\n\n  describe('sort', function(){\n    describe('with 0 args', function(){\n      it('chains', function(){\n        var m = mquery();\n        assert.equal(m, m.sort());\n      })\n      it('has no affect', function(){\n        var m = mquery();\n        assert.equal(m.options.sort, undefined);\n      })\n    })\n\n    it('works', function(){\n      var query = mquery();\n      query.sort('a -c b');\n      assert.deepEqual(query.options.sort, { a : 1, b: 1, c : -1});\n\n      query = mquery();\n      query.sort({'a': 1, 'c': -1, 'b': 'asc', e: 'descending', f: 'ascending'});\n      assert.deepEqual(query.options.sort, {'a': 1, 'c': -1, 'b': 1, 'e': -1, 'f': 1});\n\n      query = mquery();\n      var e= undefined;\n      try {\n        query.sort(['a', 1]);\n      } catch (err) {\n        e=  err;\n      }\n      assert.ok(e, 'uh oh. no error was thrown');\n      assert.equal(e.message, 'Invalid sort() argument. Must be a string or object.');\n\n      e= undefined;\n      try {\n        query.sort('a', 1, 'c', -1, 'b', 1);\n      } catch (err) {\n        e= err;\n      }\n      assert.ok(e, 'uh oh. no error was thrown');\n      assert.equal(e.message, 'Invalid sort() argument. Must be a string or object.');\n    })\n\n    it('handles $meta sort options', function(){\n      var query = mquery();\n      query.sort({ score: { $meta : \"textScore\" } });\n      assert.deepEqual(query.options.sort, { score : { $meta : \"textScore\" } });\n    })\n\n    no('count', 'sort');\n  })\n\n  function simpleOption (type, options) {\n    describe(type, function(){\n      it('sets the ' + type + ' option', function(){\n        var m = mquery()[type](2);\n        var optionName = options.name || type;\n        assert.equal(2, m.options[optionName]);\n      })\n      it('is chainable', function(){\n        var m = mquery();\n        assert.equal(m[type](3), m);\n      })\n\n      if (!options.distinct) noDistinct(type);\n      if (!options.count) no('count', type);\n    })\n  }\n\n  var negated = {\n      limit: {distinct: false, count: true}\n    , skip: {distinct: false, count: true}\n    , maxScan: {distinct: false, count: false}\n    , batchSize: {distinct: false, count: false}\n    , maxTime: {distinct: true, count: true, name: 'maxTimeMS' }\n    , comment: {distinct: false, count: false}\n  };\n  Object.keys(negated).forEach(function (key) {\n    simpleOption(key, negated[key]);\n  })\n\n  describe('snapshot', function(){\n    it('works', function(){\n      var query = mquery();\n      query.snapshot();\n      assert.equal(true, query.options.snapshot);\n\n      var query = mquery()\n      query.snapshot(true);\n      assert.equal(true, query.options.snapshot);\n\n      var query = mquery()\n      query.snapshot(false);\n      assert.equal(false, query.options.snapshot);\n    })\n    noDistinct('snapshot');\n    no('count', 'snapshot');\n  })\n\n  describe('hint', function(){\n    it('accepts an object', function(){\n      var query2 = mquery();\n      query2.hint({'a': 1, 'b': -1});\n      assert.deepEqual(query2.options.hint, {'a': 1, 'b': -1});\n    })\n\n    it('rejects everything else', function(){\n      assert.throws(function(){\n        mquery().hint('c');\n      }, /Invalid hint./);\n      assert.throws(function(){\n        mquery().hint(['c']);\n      }, /Invalid hint./);\n      assert.throws(function(){\n        mquery().hint(1);\n      }, /Invalid hint./);\n    })\n\n    describe('does not have side affects', function(){\n      it('on invalid arg', function(){\n        var m = mquery();\n        try {\n          m.hint(1);\n        } catch (err) {\n          // ignore\n        }\n        assert.equal(undefined, m.options.hint);\n      })\n      it('on missing arg', function(){\n        var m = mquery().hint();\n        assert.equal(undefined, m.options.hint);\n      })\n    })\n\n    noDistinct('hint');\n  })\n\n  describe('slaveOk', function(){\n    it('works', function(){\n      var query = mquery();\n      query.slaveOk();\n      assert.equal(true, query.options.slaveOk);\n\n      var query = mquery()\n      query.slaveOk(true);\n      assert.equal(true, query.options.slaveOk);\n\n      var query = mquery()\n      query.slaveOk(false);\n      assert.equal(false, query.options.slaveOk);\n    })\n  })\n\n  describe('read', function(){\n    it('sets associated readPreference option', function(){\n      var m = mquery();\n      m.read('p');\n      assert.equal('primary', m.options.readPreference);\n    })\n    it('is chainable', function(){\n      var m = mquery();\n      assert.equal(m, m.read('sp'));\n    })\n  })\n\n  describe('tailable', function(){\n    it('works', function(){\n      var query = mquery();\n      query.tailable();\n      assert.equal(true, query.options.tailable);\n\n      var query = mquery()\n      query.tailable(true);\n      assert.equal(true, query.options.tailable);\n\n      var query = mquery()\n      query.tailable(false);\n      assert.equal(false, query.options.tailable);\n    })\n    it('is chainable', function(){\n      var m = mquery();\n      assert.equal(m, m.tailable());\n    })\n    noDistinct('tailable');\n    no('count', 'tailable');\n  })\n\n  // query utilities\n\n  describe('merge', function(){\n    describe('with falsy arg', function(){\n      it('returns itself', function(){\n        var m = mquery();\n        assert.equal(m, m.merge());\n        assert.equal(m, m.merge(null));\n        assert.equal(m, m.merge(0));\n      })\n    })\n    describe('with an argument', function(){\n      describe('that is not a query or plain object', function(){\n        it('throws', function(){\n          assert.throws(function () {\n            mquery().merge([]);\n          }, /Invalid argument/);\n          assert.throws(function () {\n            mquery().merge('merge');\n          }, /Invalid argument/);\n          assert.doesNotThrow(function () {\n            mquery().merge({});\n          }, /Invalid argument/);\n        })\n      })\n\n      describe('that is a query', function(){\n        it('merges conditions, field selection, and options', function(){\n          var m = mquery({ x: 'hi' }, { select: 'x y', another: true })\n          var n = mquery().merge(m);\n          assert.deepEqual(n._conditions, m._conditions);\n          assert.deepEqual(n._fields, m._fields);\n          assert.deepEqual(n.options, m.options);\n        })\n        it('clones update arguments', function(done){\n          var original = { $set: { iTerm: true }}\n          var m = mquery().update(original);\n          var n = mquery().merge(m);\n          m.update({ $set: { x: 2 }})\n          assert.notDeepEqual(m._update, n._update);\n          done();\n        })\n        it('is chainable', function(){\n          var m = mquery({ x: 'hi' });\n          var n = mquery();\n          assert.equal(n, n.merge(m));\n        })\n      })\n\n      describe('that is an object', function(){\n        it('merges', function(){\n          var m = { x: 'hi' };\n          var n = mquery().merge(m);\n          assert.deepEqual(n._conditions, { x: 'hi' });\n        })\n        it('clones update arguments', function(done){\n          var original = { $set: { iTerm: true }}\n          var m = mquery().update(original);\n          var n = mquery().merge(original);\n          m.update({ $set: { x: 2 }})\n          assert.notDeepEqual(m._update, n._update);\n          done();\n        })\n        it('is chainable', function(){\n          var m = { x: 'hi' };\n          var n = mquery();\n          assert.equal(n, n.merge(m));\n        })\n      })\n    })\n  })\n\n  // queries\n\n  describe('find', function(){\n    describe('with no callback', function(){\n      it('does not execute', function(){\n        var m = mquery();\n        assert.doesNotThrow(function () {\n          m.find()\n        })\n        assert.doesNotThrow(function () {\n          m.find({ x: 1 })\n        })\n      })\n    })\n\n    it('is chainable', function(){\n      var m = mquery().find({ x: 1 }).find().find({ y: 2 });\n      assert.deepEqual(m._conditions, {x:1,y:2});\n    })\n\n    it('merges other queries', function(){\n      var m = mquery({ name: 'mquery' });\n      m.tailable();\n      m.select('_id');\n      var a = mquery().find(m);\n      assert.deepEqual(a._conditions, m._conditions);\n      assert.deepEqual(a.options, m.options);\n      assert.deepEqual(a._fields, m._fields);\n    })\n\n    describe('executes', function(){\n      before(function (done) {\n        col.insert({ name: 'mquery' }, { safe: true }, done);\n      });\n\n      after(function(done){\n        col.remove({ name: 'mquery' }, done);\n      })\n\n      it('when criteria is passed with a callback', function(done){\n        mquery(col).find({ name: 'mquery' }, function (err, docs) {\n          assert.ifError(err);\n          assert.equal(1, docs.length);\n          done();\n        })\n      })\n      it('when Query is passed with a callback', function(done){\n        var m = mquery({ name: 'mquery' });\n        mquery(col).find(m, function (err, docs) {\n          assert.ifError(err);\n          assert.equal(1, docs.length);\n          done();\n        })\n      })\n      it('when just a callback is passed', function(done){\n        mquery({ name: 'mquery' }).collection(col).find(function (err, docs) {\n          assert.ifError(err);\n          assert.equal(1, docs.length);\n          done();\n        });\n      })\n    })\n  })\n\n  describe('findOne', function(){\n    describe('with no callback', function(){\n      it('does not execute', function(){\n        var m = mquery();\n        assert.doesNotThrow(function () {\n          m.findOne()\n        })\n        assert.doesNotThrow(function () {\n          m.findOne({ x: 1 })\n        })\n      })\n    })\n\n    it('is chainable', function(){\n      var m = mquery();\n      var n = m.findOne({ x: 1 }).findOne().findOne({ y: 2 });\n      assert.equal(m, n);\n      assert.deepEqual(m._conditions, {x:1,y:2});\n      assert.equal('findOne', m.op);\n    })\n\n    it('merges other queries', function(){\n      var m = mquery({ name: 'mquery' });\n      m.read('nearest');\n      m.select('_id');\n      var a = mquery().findOne(m);\n      assert.deepEqual(a._conditions, m._conditions);\n      assert.deepEqual(a.options, m.options);\n      assert.deepEqual(a._fields, m._fields);\n    })\n\n    describe('executes', function(){\n      before(function (done) {\n        col.insert({ name: 'mquery findone' }, { safe: true }, done);\n      });\n\n      after(function(done){\n        col.remove({ name: 'mquery findone' }, done);\n      })\n\n      it('when criteria is passed with a callback', function(done){\n        mquery(col).findOne({ name: 'mquery findone' }, function (err, doc) {\n          assert.ifError(err);\n          assert.ok(doc);\n          assert.equal('mquery findone', doc.name);\n          done();\n        })\n      })\n      it('when Query is passed with a callback', function(done){\n        var m = mquery(col).where({ name: 'mquery findone' });\n        mquery(col).findOne(m, function (err, doc) {\n          assert.ifError(err);\n          assert.ok(doc);\n          assert.equal('mquery findone', doc.name);\n          done();\n        })\n      })\n      it('when just a callback is passed', function(done){\n        mquery({ name: 'mquery findone' }).collection(col).findOne(function (err, doc) {\n          assert.ifError(err);\n          assert.ok(doc);\n          assert.equal('mquery findone', doc.name);\n          done();\n        });\n      })\n    })\n  })\n\n  describe('count', function(){\n    describe('with no callback', function(){\n      it('does not execute', function(){\n        var m = mquery();\n        assert.doesNotThrow(function () {\n          m.count()\n        })\n        assert.doesNotThrow(function () {\n          m.count({ x: 1 })\n        })\n      })\n    })\n\n    it('is chainable', function(){\n      var m = mquery();\n      var n = m.count({ x: 1 }).count().count({ y: 2 });\n      assert.equal(m, n);\n      assert.deepEqual(m._conditions, {x:1,y:2});\n      assert.equal('count', m.op);\n    })\n\n    it('merges other queries', function(){\n      var m = mquery({ name: 'mquery' });\n      m.read('nearest');\n      m.select('_id');\n      var a = mquery().count(m);\n      assert.deepEqual(a._conditions, m._conditions);\n      assert.deepEqual(a.options, m.options);\n      assert.deepEqual(a._fields, m._fields);\n    })\n\n    describe('executes', function(){\n      before(function (done) {\n        col.insert({ name: 'mquery count' }, { safe: true }, done);\n      });\n\n      after(function(done){\n        col.remove({ name: 'mquery count' }, done);\n      })\n\n      it('when criteria is passed with a callback', function(done){\n        mquery(col).count({ name: 'mquery count' }, function (err, count) {\n          assert.ifError(err);\n          assert.ok(count);\n          assert.ok(1 === count);\n          done();\n        })\n      })\n      it('when Query is passed with a callback', function(done){\n        var m = mquery({ name: 'mquery count' });\n        mquery(col).count(m, function (err, count) {\n          assert.ifError(err);\n          assert.ok(count);\n          assert.ok(1 === count);\n          done();\n        })\n      })\n      it('when just a callback is passed', function(done){\n        mquery({ name: 'mquery count' }).collection(col).count(function (err, count) {\n          assert.ifError(err);\n          assert.ok(1 === count);\n          done();\n        });\n      })\n    })\n\n    describe('validates its option', function(){\n      it('sort', function(done){\n        assert.throws(function(){\n          var m = mquery().sort('x').count();\n        }, /sort cannot be used with count/);\n        done();\n      })\n\n      it('select', function(done){\n        assert.throws(function(){\n          var m = mquery().select('x').count();\n        }, /field selection and slice cannot be used with count/);\n        done();\n      })\n\n      it('slice', function(done){\n        assert.throws(function(){\n          var m = mquery().where('x').slice(-3).count();\n        }, /field selection and slice cannot be used with count/);\n        done();\n      })\n\n      it('limit', function(done){\n        assert.doesNotThrow(function(){\n          var m = mquery().limit(3).count();\n        })\n        done();\n      })\n\n      it('skip', function(done){\n        assert.doesNotThrow(function(){\n          var m = mquery().skip(3).count();\n        })\n        done();\n      })\n\n      it('batchSize', function(done){\n        assert.throws(function(){\n          var m = mquery({}, { batchSize: 3 }).count();\n        }, /batchSize cannot be used with count/);\n        done();\n      })\n\n      it('comment', function(done){\n        assert.throws(function(){\n          var m = mquery().comment('mquery').count();\n        }, /comment cannot be used with count/);\n        done();\n      })\n\n      it('maxScan', function(done){\n        assert.throws(function(){\n          var m = mquery().maxScan(300).count();\n        }, /maxScan cannot be used with count/);\n        done();\n      })\n\n      it('snapshot', function(done){\n        assert.throws(function(){\n          var m = mquery().snapshot().count();\n        }, /snapshot cannot be used with count/);\n        done();\n      })\n\n      it('tailable', function(done){\n        assert.throws(function(){\n          var m = mquery().tailable().count();\n        }, /tailable cannot be used with count/);\n        done();\n      })\n    })\n  })\n\n  describe('distinct', function(){\n    describe('with no callback', function(){\n      it('does not execute', function(){\n        var m = mquery();\n        assert.doesNotThrow(function () {\n          m.distinct()\n        })\n        assert.doesNotThrow(function () {\n          m.distinct('name')\n        })\n        assert.doesNotThrow(function () {\n          m.distinct({ name: 'mquery distinct' })\n        })\n        assert.doesNotThrow(function () {\n          m.distinct({ name: 'mquery distinct' }, 'name')\n        })\n      })\n    })\n\n    it('is chainable', function(){\n      var m = mquery({x:1}).distinct('name');\n      var n = m.distinct({y:2});\n      assert.equal(m, n);\n      assert.deepEqual(n._conditions, {x:1, y:2});\n      assert.equal('name', n._distinct);\n      assert.equal('distinct', n.op);\n    });\n\n    it('overwrites field', function(){\n      var m = mquery({ name: 'mquery' }).distinct('name');\n      m.distinct('rename');\n      assert.equal(m._distinct, 'rename');\n      m.distinct({x:1}, 'renamed');\n      assert.equal(m._distinct, 'renamed');\n    })\n\n    it('merges other queries', function(){\n      var m = mquery().distinct({ name: 'mquery' }, 'age')\n      m.read('nearest');\n      var a = mquery().distinct(m);\n      assert.deepEqual(a._conditions, m._conditions);\n      assert.deepEqual(a.options, m.options);\n      assert.deepEqual(a._fields, m._fields);\n      assert.deepEqual(a._distinct, m._distinct);\n    })\n\n    describe('executes', function(){\n      before(function (done) {\n        col.insert({ name: 'mquery distinct', age: 1 }, { safe: true }, done);\n      });\n\n      after(function(done){\n        col.remove({ name: 'mquery distinct' }, done);\n      })\n\n      it('when distinct arg is passed with a callback', function(done){\n        mquery(col).distinct('distinct', function (err, doc) {\n          assert.ifError(err);\n          assert.ok(doc);\n          done();\n        })\n      })\n      describe('when criteria is passed with a callback', function(){\n        it('if distinct arg was declared', function(done){\n          mquery(col).distinct('age').distinct({ name: 'mquery distinct' }, function (err, doc) {\n            assert.ifError(err);\n            assert.ok(doc);\n            done();\n          })\n        })\n        it('but not if distinct arg was not declared', function(){\n          assert.throws(function(){\n            mquery(col).distinct({ name: 'mquery distinct' }, function(){})\n          }, /No value for `distinct`/)\n        })\n      })\n      describe('when Query is passed with a callback', function(){\n        var m = mquery({ name: 'mquery distinct' });\n        it('if distinct arg was declared', function(done){\n          mquery(col).distinct('age').distinct(m, function (err, doc) {\n            assert.ifError(err);\n            assert.ok(doc);\n            done();\n          })\n        })\n        it('but not if distinct arg was not declared', function(){\n          assert.throws(function(){\n            mquery(col).distinct(m, function(){})\n          }, /No value for `distinct`/)\n        })\n      })\n      describe('when just a callback is passed', function(done){\n        it('if distinct arg was declared', function(done){\n          var m = mquery({ name: 'mquery distinct' });\n          m.collection(col);\n          m.distinct('age');\n          m.distinct(function (err, doc) {\n            assert.ifError(err);\n            assert.ok(doc);\n            done();\n          });\n        })\n        it('but not if no distinct arg was declared', function(){\n          var m = mquery();\n          m.collection(col);\n          assert.throws(function () {\n            m.distinct(function(){});\n          }, /No value for `distinct`/);\n        })\n      })\n    })\n\n    describe('validates its option', function(){\n      it('sort', function(done){\n        assert.throws(function(){\n          var m = mquery().sort('x').distinct();\n        }, /sort cannot be used with distinct/);\n        done();\n      })\n\n      it('select', function(done){\n        assert.throws(function(){\n          var m = mquery().select('x').distinct();\n        }, /field selection and slice cannot be used with distinct/);\n        done();\n      })\n\n      it('slice', function(done){\n        assert.throws(function(){\n          var m = mquery().where('x').slice(-3).distinct();\n        }, /field selection and slice cannot be used with distinct/);\n        done();\n      })\n\n      it('limit', function(done){\n        assert.throws(function(){\n          var m = mquery().limit(3).distinct();\n        }, /limit cannot be used with distinct/);\n        done();\n      })\n\n      it('skip', function(done){\n        assert.throws(function(){\n          var m = mquery().skip(3).distinct();\n        }, /skip cannot be used with distinct/);\n        done();\n      })\n\n      it('batchSize', function(done){\n        assert.throws(function(){\n          var m = mquery({}, { batchSize: 3 }).distinct();\n        }, /batchSize cannot be used with distinct/);\n        done();\n      })\n\n      it('comment', function(done){\n        assert.throws(function(){\n          var m = mquery().comment('mquery').distinct();\n        }, /comment cannot be used with distinct/);\n        done();\n      })\n\n      it('maxScan', function(done){\n        assert.throws(function(){\n          var m = mquery().maxScan(300).distinct();\n        }, /maxScan cannot be used with distinct/);\n        done();\n      })\n\n      it('snapshot', function(done){\n        assert.throws(function(){\n          var m = mquery().snapshot().distinct();\n        }, /snapshot cannot be used with distinct/);\n        done();\n      })\n\n      it('hint', function(done){\n        assert.throws(function(){\n          var m = mquery().hint({ x: 1 }).distinct();\n        }, /hint cannot be used with distinct/);\n        done();\n      })\n\n      it('tailable', function(done){\n        assert.throws(function(){\n          var m = mquery().tailable().distinct();\n        }, /tailable cannot be used with distinct/);\n        done();\n      })\n    })\n  })\n\n  describe('update', function(){\n    describe('with no callback', function(){\n      it('does not execute', function(){\n        var m = mquery();\n        assert.doesNotThrow(function () {\n          m.update({ name: 'old' }, { name: 'updated' }, { multi: true })\n        })\n        assert.doesNotThrow(function () {\n          m.update({ name: 'old' }, { name: 'updated' })\n        })\n        assert.doesNotThrow(function () {\n          m.update({ name: 'updated' })\n        })\n        assert.doesNotThrow(function () {\n          m.update()\n        })\n      })\n    })\n\n    it('is chainable', function(){\n      var m = mquery({x:1}).update({ y: 2 });\n      var n = m.where({y:2});\n      assert.equal(m, n);\n      assert.deepEqual(n._conditions, {x:1, y:2});\n      assert.deepEqual({ y: 2 }, n._update);\n      assert.equal('update', n.op);\n    });\n\n    it('merges update doc arg', function(){\n      var a = [1,2];\n      var m = mquery().where({ name: 'mquery' }).update({ x: 'stuff', a: a });\n      m.update({ z: 'stuff' });\n      assert.deepEqual(m._update, { z: 'stuff', x: 'stuff', a: a });\n      assert.deepEqual(m._conditions, { name: 'mquery' });\n      assert.ok(!m.options.overwrite);\n      m.update({}, { z: 'renamed' }, { overwrite: true });\n      assert.ok(m.options.overwrite === true);\n      assert.deepEqual(m._conditions, { name: 'mquery' });\n      assert.deepEqual(m._update, { z: 'renamed', x: 'stuff', a: a });\n      a.push(3);\n      assert.notDeepEqual(m._update, { z: 'renamed', x: 'stuff', a: a });\n    })\n\n    it('merges other options', function(){\n      var m = mquery();\n      m.setOptions({ overwrite: true });\n      m.update({ age: 77 }, { name: 'pagemill' }, { multi: true })\n      assert.deepEqual({ age: 77 }, m._conditions);\n      assert.deepEqual({ name: 'pagemill' }, m._update);\n      assert.deepEqual({ overwrite: true, multi: true }, m.options);\n    })\n\n    describe('executes', function(){\n      var id;\n      before(function (done) {\n        col.insert({ name: 'mquery update', age: 1 }, { safe: true }, function (err, docs) {\n            var elem = docs[0];\n            id = elem._id;\n            done();\n        });\n      });\n\n      after(function(done){\n        col.remove({ _id: id }, done);\n      })\n\n      describe('when conds + doc + opts + callback passed', function(){\n        it('works', function(done){\n          var m = mquery(col).where({ _id: id })\n          m.update({}, { name: 'Sparky' }, { safe: true }, function (err, num) {\n            assert.ifError(err);\n            assert.ok(1 === num);\n            m.findOne(function (err, doc) {\n              assert.ifError(err);\n              assert.equal(doc.name, 'Sparky');\n              done();\n            })\n          })\n        })\n      })\n\n      describe('when conds + doc + callback passed', function(){\n        it('works', function (done) {\n          var m = mquery(col).update({ _id: id }, { name: 'fairgrounds' }, function (err, num, doc) {\n            assert.ifError(err);\n            assert.ok(1, num);\n            m.findOne(function (err, doc) {\n              assert.ifError(err);\n              assert.equal(doc.name, 'fairgrounds');\n              done();\n            })\n          })\n        })\n      })\n\n      describe('when doc + callback passed', function(){\n        it('works', function (done) {\n          var m = mquery(col).where({ _id: id }).update({ name: 'changed' }, function (err, num, doc) {\n            assert.ifError(err);\n            assert.ok(1, num);\n            m.findOne(function (err, doc) {\n              assert.ifError(err);\n              assert.equal(doc.name, 'changed');\n              done();\n            })\n          })\n        })\n      })\n\n      describe('when just callback passed', function(){\n        it('works', function (done) {\n          var m = mquery(col).where({ _id: id });\n          m.setOptions({ safe: true });\n          m.update({ name: 'Frankenweenie' });\n          m.update(function (err, num) {\n            assert.ifError(err);\n            assert.ok(1 === num);\n            m.findOne(function (err, doc) {\n              assert.ifError(err);\n              assert.equal(doc.name, 'Frankenweenie');\n              done();\n            })\n          })\n        })\n      })\n\n      describe('without a callback', function(){\n        it('when forced by exec()', function(done){\n          var m = mquery(col).where({ _id: id });\n          m.setOptions({ safe: true, multi: true });\n          m.update({ name: 'forced' });\n\n          var update = m._collection.update;\n          m._collection.update = function (conds, doc, opts, cb) {\n            m._collection.update = update;\n\n            assert.ok(!opts.safe);\n            assert.ok(true === opts.multi);\n            assert.equal('forced', doc.$set.name);\n            done();\n          }\n\n          m.exec()\n        })\n      })\n\n      describe('except when update doc is empty and missing overwrite flag', function(){\n        it('works', function (done) {\n          var m = mquery(col).where({ _id: id });\n          m.setOptions({ safe: true });\n          m.update({ }, function (err, num) {\n            assert.ifError(err);\n            assert.ok(0 === num);\n            setTimeout(function(){\n              m.findOne(function (err, doc) {\n                assert.ifError(err);\n                assert.equal(3, mquery.utils.keys(doc).length);\n                assert.equal(id, doc._id.toString());\n                assert.equal('Frankenweenie', doc.name);\n                done();\n              })\n            }, 300);\n          })\n        })\n      });\n\n      describe('when update doc is set with overwrite flag', function(){\n        it('works', function (done) {\n          var m = mquery(col).where({ _id: id });\n          m.setOptions({ safe: true, overwrite: true });\n          m.update({ all: 'yep', two: 2 }, function (err, num) {\n            assert.ifError(err);\n            assert.ok(1 === num);\n            m.findOne(function (err, doc) {\n              assert.ifError(err);\n              assert.equal(3, mquery.utils.keys(doc).length);\n              assert.equal('yep', doc.all);\n              assert.equal(2, doc.two);\n              assert.equal(id, doc._id.toString());\n              done();\n            })\n          })\n        })\n      })\n\n      describe('when update doc is empty with overwrite flag', function(){\n        it('works', function (done) {\n          var m = mquery(col).where({ _id: id });\n          m.setOptions({ safe: true, overwrite: true });\n          m.update({ }, function (err, num) {\n            assert.ifError(err);\n            assert.ok(1 === num);\n            m.findOne(function (err, doc) {\n              assert.ifError(err);\n              assert.equal(1, mquery.utils.keys(doc).length);\n              assert.equal(id, doc._id.toString());\n              done();\n            })\n          })\n        })\n      })\n\n      describe('when boolean (true) - exec()', function(){\n        it('works', function(done){\n          var m = mquery(col).where({ _id: id });\n          m.update({ name: 'bool' }).update(true);\n          setTimeout(function () {\n            m.findOne(function (err, doc) {\n              assert.ifError(err);\n              assert.ok(doc);\n              assert.equal('bool', doc.name);\n              done();\n            })\n          }, 300)\n        })\n      })\n    })\n  })\n\n  describe('remove', function(){\n    describe('with 0 args', function(){\n      var name = 'remove: no args test'\n      before(function(done){\n        col.insert({ name: name }, { safe: true }, done)\n      })\n      after(function(done){\n        col.remove({ name: name }, { safe: true }, done)\n      })\n\n      it('does not execute', function(done){\n        var remove = col.remove;\n        col.remove = function () {\n          col.remove = remove;\n          done(new Error('remove executed!'));\n        }\n\n        var m = mquery(col).where({ name: name }).remove()\n        setTimeout(function () {\n          col.remove = remove;\n          done();\n        }, 10);\n      })\n\n      it('chains', function(){\n        var m = mquery();\n        assert.equal(m, m.remove());\n      })\n    })\n\n    describe('with 1 argument', function(){\n      var name = 'remove: 1 arg test'\n      before(function(done){\n        col.insert({ name: name }, { safe: true }, done)\n      })\n      after(function(done){\n        col.remove({ name: name }, { safe: true }, done)\n      })\n\n      describe('that is a', function(){\n        it('plain object', function(){\n          var m = mquery(col).remove({ name: 'Whiskers' });\n          m.remove({ color: '#fff' })\n          assert.deepEqual({ name: 'Whiskers', color: '#fff' }, m._conditions);\n        })\n\n        it('query', function(){\n          var q = mquery({ color: '#fff' });\n          var m = mquery(col).remove({ name: 'Whiskers' });\n          m.remove(q)\n          assert.deepEqual({ name: 'Whiskers', color: '#fff' }, m._conditions);\n        })\n\n        it('function', function(done){\n          mquery(col, { safe: true }).where({name: name}).remove(function (err) {\n            assert.ifError(err);\n            mquery(col).findOne({ name: name }, function (err, doc) {\n              assert.ifError(err);\n              assert.equal(null, doc);\n              done();\n            })\n          });\n        })\n\n        it('boolean (true) - execute', function(done){\n          col.insert({ name: name }, { safe: true }, function (err) {\n            assert.ifError(err);\n            mquery(col).findOne({ name: name }, function (err, doc) {\n              assert.ifError(err);\n              assert.ok(doc);\n              mquery(col).remove(true);\n              setTimeout(function () {\n                mquery(col).find(function (err, docs) {\n                  assert.ifError(err);\n                  assert.ok(docs);\n                  assert.equal(0, docs.length);\n                  done();\n                })\n              }, 300)\n            })\n          })\n        })\n      })\n    })\n\n    describe('with 2 arguments', function(){\n      var name = 'remove: 2 arg test'\n      beforeEach(function(done){\n        col.remove({}, { safe: true }, function (err) {\n          assert.ifError(err);\n          col.insert([{ name: 'shelly' }, { name: name }], { safe: true }, function (err) {\n            assert.ifError(err);\n            mquery(col).find(function (err, docs) {\n              assert.ifError(err);\n              assert.equal(2, docs.length);\n              done();\n            })\n          })\n        })\n      })\n\n      describe('plain object + callback', function(){\n        it('works', function(done){\n          mquery(col).remove({ name: name }, function (err) {\n            assert.ifError(err);\n            mquery(col).find(function (err, docs) {\n              assert.ifError(err);\n              assert.ok(docs);\n              assert.equal(1, docs.length);\n              assert.equal('shelly', docs[0].name);\n              done();\n            })\n          });\n        })\n      })\n\n      describe('mquery + callback', function(){\n        it('works', function(done){\n          var m = mquery({ name: name });\n          mquery(col).remove(m, function (err) {\n            assert.ifError(err);\n            mquery(col).find(function (err, docs) {\n              assert.ifError(err);\n              assert.ok(docs);\n              assert.equal(1, docs.length);\n              assert.equal('shelly', docs[0].name);\n              done();\n            })\n          });\n        })\n      })\n    })\n  })\n\n  function validateFindAndModifyOptions (method) {\n    describe('validates its option', function(){\n      it('sort', function(done){\n        assert.doesNotThrow(function(){\n          var m = mquery().sort('x')[method]();\n        })\n        done();\n      })\n\n      it('select', function(done){\n        assert.doesNotThrow(function(){\n          var m = mquery().select('x')[method]();\n        })\n        done();\n      })\n\n      it('limit', function(done){\n        assert.throws(function(){\n          var m = mquery().limit(3)[method]();\n        }, new RegExp('limit cannot be used with ' + method));\n        done();\n      })\n\n      it('skip', function(done){\n        assert.throws(function(){\n          var m = mquery().skip(3)[method]();\n        }, new RegExp('skip cannot be used with ' + method));\n        done();\n      })\n\n      it('batchSize', function(done){\n        assert.throws(function(){\n          var m = mquery({}, { batchSize: 3 })[method]();\n        }, new RegExp('batchSize cannot be used with ' + method));\n        done();\n      })\n\n      it('maxScan', function(done){\n        assert.throws(function(){\n          var m = mquery().maxScan(300)[method]();\n        }, new RegExp('maxScan cannot be used with ' + method));\n        done();\n      })\n\n      it('snapshot', function(done){\n        assert.throws(function(){\n          var m = mquery().snapshot()[method]();\n        }, new RegExp('snapshot cannot be used with ' + method));\n        done();\n      })\n\n      it('hint', function(done){\n        assert.throws(function(){\n          var m = mquery().hint({ x: 1 })[method]();\n        }, new RegExp('hint cannot be used with ' + method));\n        done();\n      })\n\n      it('tailable', function(done){\n        assert.throws(function(){\n          var m = mquery().tailable()[method]();\n        }, new RegExp('tailable cannot be used with ' + method));\n        done();\n      })\n\n      it('comment', function(done){\n        assert.throws(function(){\n          var m = mquery().comment('mquery')[method]();\n        }, new RegExp('comment cannot be used with ' + method));\n        done();\n      })\n    })\n  }\n\n  describe('findOneAndUpdate', function(){\n    var name = 'findOneAndUpdate + fn'\n\n    validateFindAndModifyOptions('findOneAndUpdate');\n\n    describe('with 0 args', function(){\n      it('makes no changes', function(){\n        var m = mquery();\n        var n = m.findOneAndUpdate();\n        assert.deepEqual(m, n);\n      })\n    })\n    describe('with 1 arg', function(){\n      describe('that is an object', function(){\n        it('updates the doc', function(){\n          var m = mquery();\n          var n = m.findOneAndUpdate({ $set: { name: '1 arg' }});\n          assert.deepEqual(n._update, { $set: { name: '1 arg' }});\n        })\n      })\n      describe('that is a query', function(){\n        it('updates the doc', function(){\n          var m = mquery({ name: name }).update({ x: 1 });\n          var n = mquery().findOneAndUpdate(m);\n          assert.deepEqual(n._update, { x: 1 });\n        })\n      })\n      it('that is a function', function(done){\n        col.insert({ name: name }, { safe: true }, function (err) {\n          assert.ifError(err);\n          var m = mquery({ name: name }).collection(col);\n          name = '1 arg';\n          var n = m.update({ $set: { name: name }});\n          n.findOneAndUpdate(function (err, doc) {\n            assert.ifError(err);\n            assert.ok(doc);\n            assert.equal(name, doc.name);\n            done();\n          });\n        })\n      })\n    })\n    describe('with 2 args', function(){\n      it('conditions + update', function(){\n        var m = mquery(col);\n        m.findOneAndUpdate({ name: name }, { age: 100 });\n        assert.deepEqual({ name: name }, m._conditions);\n        assert.deepEqual({ age: 100 }, m._update);\n      })\n      it('query + update', function(){\n        var n = mquery({ name: name });\n        var m = mquery(col);\n        m.findOneAndUpdate(n, { age: 100 });\n        assert.deepEqual({ name: name }, m._conditions);\n        assert.deepEqual({ age: 100 }, m._update);\n      })\n      it('update + callback', function(done){\n        var m = mquery(col).where({ name: name });\n        m.findOneAndUpdate({ $inc: { age: 10 }}, function (err, doc) {\n          assert.ifError(err);\n          assert.equal(10, doc.age);\n          done();\n        });\n      })\n    })\n    describe('with 3 args', function(){\n      it('conditions + update + options', function(){\n        var m = mquery();\n        var n = m.findOneAndUpdate({ name: name }, { works: true }, { new: false });\n        assert.deepEqual({ name: name}, n._conditions);\n        assert.deepEqual({ works: true }, n._update);\n        assert.deepEqual({ new: false }, n.options);\n      })\n      it('conditions + update + callback', function(done){\n        var m = mquery(col);\n        m.findOneAndUpdate({ name: name }, { works: true }, function (err, doc) {\n          assert.ifError(err);\n          assert.ok(doc);\n          assert.equal(name, doc.name);\n          assert.ok(true === doc.works);\n          done();\n        });\n      })\n    })\n    describe('with 4 args', function(){\n      it('conditions + update + options + callback', function(done){\n        var m = mquery(col);\n        m.findOneAndUpdate({ name: name }, { works: false }, { new: false },  function (err, doc) {\n          assert.ifError(err);\n          assert.ok(doc);\n          assert.equal(name, doc.name);\n          assert.ok(true === doc.works);\n          done();\n        });\n      })\n    })\n  })\n\n  describe('findOneAndRemove', function(){\n    var name = 'findOneAndRemove'\n\n    validateFindAndModifyOptions('findOneAndRemove');\n\n    describe('with 0 args', function(){\n      it('makes no changes', function(){\n        var m = mquery();\n        var n = m.findOneAndRemove();\n        assert.deepEqual(m, n);\n      })\n    })\n    describe('with 1 arg', function(){\n      describe('that is an object', function(){\n        it('updates the doc', function(){\n          var m = mquery();\n          var n = m.findOneAndRemove({ name: '1 arg' });\n          assert.deepEqual(n._conditions, { name: '1 arg' });\n        })\n      })\n      describe('that is a query', function(){\n        it('updates the doc', function(){\n          var m = mquery({ name: name });\n          var n = m.findOneAndRemove(m);\n          assert.deepEqual(n._conditions, { name: name });\n        })\n      })\n      it('that is a function', function(done){\n        col.insert({ name: name }, { safe: true }, function (err) {\n          assert.ifError(err);\n          var m = mquery({ name: name }).collection(col);\n          m.findOneAndRemove(function (err, doc) {\n            assert.ifError(err);\n            assert.ok(doc);\n            assert.equal(name, doc.name);\n            done();\n          });\n        })\n      })\n    })\n    describe('with 2 args', function(){\n      it('conditions + options', function(){\n        var m = mquery(col);\n        m.findOneAndRemove({ name: name }, { new: false });\n        assert.deepEqual({ name: name }, m._conditions);\n        assert.deepEqual({ new: false }, m.options);\n      })\n      it('query + options', function(){\n        var n = mquery({ name: name });\n        var m = mquery(col);\n        m.findOneAndRemove(n, { sort: { x: 1 }});\n        assert.deepEqual({ name: name }, m._conditions);\n        assert.deepEqual({ sort: { 'x': 1 }}, m.options);\n      })\n      it('conditions + callback', function(done){\n        col.insert({ name: name }, { safe: true }, function (err) {\n          assert.ifError(err);\n          var m = mquery(col);\n          m.findOneAndRemove({ name: name }, function (err, doc) {\n            assert.ifError(err);\n            assert.equal(name, doc.name);\n            done();\n          });\n        });\n      })\n      it('query + callback', function(done){\n        col.insert({ name: name }, { safe: true }, function (err) {\n          assert.ifError(err);\n          var n = mquery({ name: name })\n          var m = mquery(col);\n          m.findOneAndRemove(n, function (err, doc) {\n            assert.ifError(err);\n            assert.equal(name, doc.name);\n            done();\n          });\n        });\n      })\n    })\n    describe('with 3 args', function(){\n      it('conditions + options + callback', function(done){\n        name = 'findOneAndRemove + conds + options + cb';\n        col.insert([{ name: name }, { name: 'a' }], { safe: true }, function (err) {\n          assert.ifError(err);\n          var m = mquery(col);\n          m.findOneAndRemove({ name: name }, { sort: { name: 1 }}, function (err, doc) {\n            assert.ifError(err);\n            assert.ok(doc);\n            assert.equal(name, doc.name);\n            done();\n          });\n        })\n      })\n    })\n  })\n\n  describe('exec', function(){\n    beforeEach(function(done){\n      col.insert([{ name: 'exec', age: 1 }, { name: 'exec', age: 2 }], done);\n    })\n\n    afterEach(function(done){\n      mquery(col).remove(done);\n    })\n\n    it('requires an op', function(){\n      assert.throws(function () {\n        mquery().exec()\n      }, /Missing query type/);\n    })\n\n    describe('find', function() {\n      it('works', function(done){\n        var m = mquery(col).find({ name: 'exec' });\n        m.exec(function (err, docs) {\n          assert.ifError(err);\n          assert.equal(2, docs.length);\n          done();\n        })\n      })\n\n      it('works with readPreferences', function (done) {\n        var m = mquery(col).find({ name: 'exec' });\n        try {\n          var rp = new require('mongodb').ReadPreference('primary');\n          m.read(rp);\n        } catch (e) {\n          if (e.code === 'MODULE_NOT_FOUND')\n            e = null;\n          done(e);\n          return;\n        }\n        m.exec(function (err, docs) {\n          assert.ifError(err);\n          assert.equal(2, docs.length);\n          done();\n        })\n      })\n    });\n\n    it('findOne', function(done){\n      var m = mquery(col).findOne({ age: 2 });\n      m.exec(function (err, doc) {\n        assert.ifError(err);\n        assert.equal(2, doc.age);\n        done();\n      })\n    })\n\n    it('count', function(done){\n      var m = mquery(col).count({ name: 'exec' });\n      m.exec(function (err, count) {\n        assert.ifError(err);\n        assert.equal(2, count);\n        done();\n      })\n    })\n\n    it('distinct', function(done){\n      var m = mquery({ name: 'exec' });\n      m.collection(col);\n      m.distinct('age');\n      m.exec(function (err, array) {\n        assert.ifError(err);\n        assert.ok(Array.isArray(array));\n        assert.equal(2, array.length);\n        assert(~array.indexOf(1));\n        assert(~array.indexOf(2));\n        done();\n      });\n    })\n\n    describe('update', function(){\n      var num;\n\n      it('with a callback', function(done){\n        var m = mquery(col);\n        m.where({ name: 'exec' })\n\n        m.count(function (err, _num) {\n          assert.ifError(err);\n          num = _num;\n          m.setOptions({ multi: true })\n          m.update({ name: 'exec + update' });\n          m.exec(function (err, res) {\n            assert.ifError(err);\n            assert.equal(num, res);\n            mquery(col).find({ name: 'exec + update' }, function (err, docs) {\n              assert.ifError(err);\n              assert.equal(num, docs.length);\n              done();\n            })\n          })\n        })\n      })\n\n      it('without a callback', function(done){\n        var m = mquery(col)\n        m.where({ name: 'exec + update' }).setOptions({ multi: true })\n        m.update({ name: 'exec' });\n\n        // unsafe write\n        m.exec();\n\n        setTimeout(function () {\n          mquery(col).find({ name: 'exec' }, function (err, docs) {\n            assert.ifError(err);\n            assert.equal(2, docs.length);\n            done();\n          })\n        }, 200)\n      })\n      it('preserves key ordering', function(done) {\n        var m = mquery(col);\n\n        var m2 = m.update({ _id : 'something' }, { '1' : 1, '2' : 2, '3' : 3});\n        var doc = m2._updateForExec().$set;\n        var count = 0;\n        for (var i in doc) {\n          if (count == 0) {\n            assert.equal('1', i);\n          } else if (count == 1) {\n            assert.equal('2', i);\n          } else if (count ==2) {\n            assert.equal('3', i);\n          }\n          count++;\n        }\n        done();\n      });\n    })\n\n    describe('remove', function(){\n      it('with a callback', function(done){\n        var m = mquery(col).where({ age: 2 }).remove();\n        m.exec(function (err, num) {\n          assert.ifError(err);\n          assert.equal(1, num);\n          done();\n        })\n      })\n\n      it('without a callback', function(done){\n        var m = mquery(col).where({ age: 1 }).remove();\n        m.exec();\n\n        setTimeout(function () {\n          mquery(col).where('name', 'exec').count(function(err, num) {\n            assert.equal(1, num);\n            done();\n          })\n        }, 200)\n      })\n    })\n\n    describe('findOneAndUpdate', function(){\n      it('with a callback', function(done){\n        var m = mquery(col);\n        m.findOneAndUpdate({ name: 'exec', age: 1 }, { $set: { name: 'findOneAndUpdate' }});\n        m.exec(function (err, doc) {\n          assert.ifError(err);\n          assert.equal('findOneAndUpdate', doc.name);\n          done();\n        });\n      })\n    })\n\n    describe('findOneAndRemove', function(){\n      it('with a callback', function(done){\n        var m = mquery(col);\n        m.findOneAndRemove({ name: 'exec', age: 2 });\n        m.exec(function (err, doc) {\n          assert.ifError(err);\n          assert.equal('exec', doc.name);\n          assert.equal(2, doc.age);\n          mquery(col).count({ name: 'exec' }, function (err, num) {\n            assert.ifError(err);\n            assert.equal(1, num);\n            done();\n          });\n        });\n      })\n    })\n  })\n\n  describe('setTraceFunction', function() {\n    beforeEach(function(done){\n      col.insert([{ name: 'trace', age: 93 }], done);\n    })\n\n    it('calls trace function when executing query', function(done) {\n      var m = mquery(col);\n\n      var resultTraceCalled;\n\n      m.setTraceFunction(function (method, queryInfo) {\n        try {\n          assert.equal('findOne', method);\n          assert.equal('trace', queryInfo.conditions.name);\n        } catch (e) {\n          done(e);\n        }\n\n        return function(err, result, millis) {\n          try {\n            assert.equal(93, result.age);\n          } catch (e) {\n            done(e);\n          }\n          resultTraceCalled = true;\n        };\n      });\n\n      m.findOne({name: 'trace'}, function (err, doc) {\n        assert.ifError(err);\n        assert.equal(resultTraceCalled, true);\n        assert.equal(93, doc.age);\n        done();\n      });\n    });\n\n    it('inherits trace function when calling toConstructor', function(done) {\n      function traceFunction () { return function() {} };\n\n      var tracedQuery = mquery().setTraceFunction(traceFunction).toConstructor();\n\n      var query = tracedQuery();\n      assert.equal(traceFunction, query._traceFunction);\n\n      done();\n    });\n  });\n\n  describe('thunk', function() {\n    it('returns a function', function(done) {\n      assert.equal('function', typeof mquery().thunk());\n      done();\n    });\n\n    it('passes the fn arg to `exec`', function(done) {\n      function cb() {}\n      var m = mquery();\n\n      m.exec = function testing(fn) {\n        assert.equal(this, m);\n        assert.equal(cb, fn);\n        done();\n      }\n\n      m.thunk()(cb);\n    });\n  });\n\n  describe('then', function() {\n    before(function(done){\n      col.insert([{ name: 'then', age: 1 }, { name: 'then', age: 2 }], done);\n    })\n\n    after(function(done){\n      mquery(col).remove({ name: 'then' }).exec(done);\n    })\n\n    it('returns a promise A+ compat object', function(done) {\n      var m = mquery(col).find();\n      assert.equal('function', typeof m.then);\n      done();\n    });\n\n    it('creates a promise that is resolved on success', function(done) {\n      var promise = mquery(col).count({ name: 'then' }).then();\n      promise.then(function(count){\n        assert.equal(2, count);\n        done();\n      }, done);\n    });\n\n    it('supports other Promise libs', function(done) {\n      var bluebird = mquery.Promise;\n\n      // hack for testing\n      mquery.Promise = function P() {\n        mquery.Promise = bluebird;\n        this.then = function(x, y) {\n          return x + y;\n        }\n      }\n\n      var val = mquery(col).count({ name: 'exec' }).then(1, 2);\n      assert.equal(val, 3);\n      done();\n    });\n  });\n\n  describe('stream', function() {\n    before(function(done){\n      col.insert([{ name: 'stream', age: 1 }, { name: 'stream', age: 2 }], done);\n    })\n\n    after(function(done){\n      mquery(col).remove({ name: 'stream' }).exec(done);\n    })\n\n    describe('throws', function() {\n      describe('if used with non-find operations', function() {\n        var ops = ['update', 'findOneAndUpdate', 'remove', 'count', 'distinct'];\n\n        ops.forEach(function(op) {\n          assert.throws(function(){\n            mquery(col)[op]().stream();\n          });\n        });\n      });\n    });\n\n    it('returns a stream', function(done) {\n      var stream = mquery(col).find({ name: 'stream' }).stream();\n      var count = 0;\n      var err;\n\n      stream.on('data', function(doc){\n        assert.equal('stream', doc.name);\n        ++count;\n      });\n\n      stream.on('error', function(er) {\n        err = er;\n      });\n\n      stream.on('close', function(){\n        if (err) return done(err);\n        assert.equal(2, count);\n        done();\n      });\n    });\n\n    it('supports find options', function(done) {\n      var stream = mquery(col)\n                  .find({ name: 'stream' })\n                  .limit(1)\n                  .select('-_id')\n                  .stream({ transform: xform });\n\n      function xform(doc) {\n        doc.name = doc.name + '-xformed';\n        return doc;\n      }\n\n      var count = 0;\n      var err;\n\n      stream.on('data', function(doc){\n        assert(!doc._id);\n        assert.equal('stream-xformed', doc.name);\n        ++count;\n      });\n\n      stream.on('error', function(er) {\n        err = er;\n      });\n\n      stream.on('close', function(){\n        if (err) return done(err);\n        assert.equal(1, count);\n        done();\n      });\n    });\n\n  });\n\n  function noDistinct (type) {\n    it('cannot be used with distinct()', function(done){\n      assert.throws(function () {\n        mquery().distinct('name')[type](4);\n      }, new RegExp(type + ' cannot be used with distinct'));\n      done();\n    })\n  }\n\n  function no (method, type) {\n    it('cannot be used with ' + method + '()', function(done){\n      assert.throws(function () {\n        mquery()[method]()[type](4);\n      }, new RegExp(type + ' cannot be used with ' + method));\n      done();\n    })\n  }\n\n  // query internal\n\n  describe('_updateForExec', function(){\n    it('returns a clone of the update object with same key order #19', function(done){\n      var update = {};\n      update.$push = { n: { $each: [{x:10}], $slice: -1, $sort: {x:1}}};\n\n      var q = mquery().update({ x: 1 }, update);\n\n      // capture original key order\n      var order = [];\n      for (var key in q._update.$push.n) {\n        order.push(key);\n      }\n\n      // compare output\n      var doc = q._updateForExec();\n      var i = 0;\n      for (var key in doc.$push.n) {\n        assert.equal(key, order[i]);\n        i++;\n      }\n\n      done();\n    })\n  })\n})\n"]}