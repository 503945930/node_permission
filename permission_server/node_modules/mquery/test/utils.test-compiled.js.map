{"version":3,"sources":["utils.test.js"],"names":[],"mappings":";;AACA,IAAI,KAAK,GAAG,OAAO,CAAC,cAAc,CAAC,CAAC;AACpC,IAAI,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;;AAE/B,IAAI,KAAK,CAAC;AACV,IAAI;AACF,OAAK,GAAG,IAAI,OAAO,CAAC,SAAS,CAAC,CAAC;CAChC,CAAC,OAAO,CAAC,EAAE,EAAE;;AAEd,QAAQ,CAAC,WAAW,EAAE,YAAW;AAC/B,UAAQ,CAAC,OAAO,EAAE,YAAW;AAC3B,MAAE,CAAC,oCAAoC,EAAE,UAAS,IAAI,EAAE;AACtD,eAAS,QAAQ,CAAE,EAAE,EAAE;AACrB,YAAI,CAAC,EAAE,GAAG,EAAE,CAAC;OACd;;AAED,UAAI,EAAE,GAAG,IAAI,QAAQ,CAAC,MAAM,CAAC,CAAC;AAC9B,UAAI,EAAE,GAAG,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;AACzB,YAAM,CAAC,EAAE,CAAC,EAAE,YAAY,QAAQ,CAAC,CAAC;;AAElC,UAAI,EAAE,CAAC;KACR,CAAC,CAAC;;AAEH,MAAE,CAAC,oCAAoC,EAAE,UAAS,IAAI,EAAE;AACtD,eAAS,QAAQ,CAAE,EAAE,EAAE;AACrB,YAAI,CAAC,EAAE,GAAG,EAAE,CAAC;OACd;;AAED,UAAI,EAAE,GAAG,IAAI,QAAQ,CAAC,MAAM,CAAC,CAAC;AAC9B,UAAI,EAAE,GAAG,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;;AAEzB,YAAM,CAAC,EAAE,CAAC,EAAE,YAAY,QAAQ,CAAC,CAAC;AAClC,UAAI,EAAE,CAAC;KACR,CAAC,CAAC;;AAEH,MAAE,CAAC,6CAA6C,EAAE,UAAS,IAAI,EAAE;AAC/D,eAAS,SAAS,CAAE,EAAE,EAAE;AACtB,YAAI,CAAC,EAAE,GAAG,EAAE,CAAC;OACd;;AAED,UAAI,EAAE,GAAG,IAAI,SAAS,CAAC,MAAM,CAAC,CAAC;AAC/B,UAAI,EAAE,GAAG,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;AACzB,YAAM,CAAC,EAAE,CAAC,EAAE,EAAE,YAAY,SAAS,CAAA,AAAC,CAAC,CAAC;;AAEtC,UAAI,EAAE,CAAC;KACR,CAAC,CAAC;;AAEH,MAAE,CAAC,gEAAgE,EAAE,UAAS,IAAI,EAAE;AAClF,eAAS,QAAQ,CAAE,EAAE,EAAE;AACrB,YAAI,CAAC,EAAE,GAAG,EAAE,CAAC;AACb,YAAI,CAAC,MAAM,GAAG,KAAK,CAAC;OACrB;;AAED,cAAQ,CAAC,SAAS,CAAC,KAAK,GAAG,YAAY;AACrC,YAAI,GAAG,GAAG,IAAI,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AAChC,WAAG,CAAC,MAAM,GAAG,IAAI,CAAC;AAClB,eAAO,GAAG,CAAC;OACZ,CAAA;;AAED,UAAI,EAAE,GAAG,IAAI,CAAC;AACd,UAAI,EAAE,GAAG,IAAI,QAAQ,CAAC,EAAE,CAAC,CAAC;AAC1B,YAAM,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC;AACxB,YAAM,CAAC,KAAK,CAAC,KAAK,EAAE,EAAE,CAAC,MAAM,CAAC,CAAC;;AAE/B,UAAI,EAAE,GAAG,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;AACzB,YAAM,CAAC,EAAE,CAAC,EAAE,YAAY,QAAQ,CAAC,CAAC;AAClC,YAAM,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC;AACxB,YAAM,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;AACrB,UAAI,EAAE,CAAC;KACR,CAAC,CAAC;;AAEH,MAAE,CAAC,gCAAgC,EAAE,UAAU,IAAI,EAAE;AACnD,UAAI,CAAC,KAAK,EAAE,OAAO,IAAI,EAAE,CAAC;;AAE1B,UAAI,IAAI,GAAG,CACT,EAAC,EAAE,EAAE,MAAM,EAAC,CACb,CAAC;AACF,UAAI,KAAK,GAAG,CACV,IAAI,KAAK,CAAC,cAAc,CAAC,SAAS,CAAC,EACnC,IAAI,KAAK,CAAC,cAAc,CAAC,KAAK,CAAC,cAAc,CAAC,iBAAiB,CAAC,EAChE,IAAI,KAAK,CAAC,cAAc,CAAC,SAAS,EAAE,IAAI,CAAC,EACzC,KAAK,CAAC,cAAc,CAAC,SAAS,EAAE,IAAI,CAAC,CACtC,CAAC;;AAEF,UAAI,WAAW,GAAG,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;;AAErC,WAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC3C,cAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1C,cAAM,CAAC,EAAE,CAAC,WAAW,CAAC,CAAC,CAAC,YAAY,KAAK,CAAC,cAAc,CAAC,CAAC;AAC1D,cAAM,CAAC,EAAE,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC;AACpC,YAAI,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE;AACjB,gBAAM,CAAC,EAAE,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;AAC/B,gBAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;AACpD,gBAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;SAC3D,MAAM;AACL,gBAAM,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;SACzC;OACF;;AAED,UAAI,EAAE,CAAC;KACR,CAAC,CAAC;;AAEH,MAAE,CAAC,uBAAuB,EAAE,UAAS,IAAI,EAAC;AACxC,UAAI,CAAC,KAAK,EAAE,OAAO,IAAI,EAAE,CAAC;;AAE1B,UAAI,GAAG,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC;AAC3B,UAAI,MAAM,GAAE,IAAI,KAAK,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;AACrC,UAAI,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;AAChC,YAAM,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,EAAE,KAAK,CAAC,QAAQ,CAAC,CAAC;AAC9C,YAAM,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;AACjD,YAAM,CAAC,EAAE,CAAC,MAAM,KAAK,KAAK,CAAC,CAAC;AAC5B,UAAI,EAAE,CAAC;KACR,CAAC,CAAA;;AAEF,MAAE,CAAC,qCAAqC,EAAE,UAAS,IAAI,EAAE;AACvD,UAAI,IAAI,GAAE,KAAK,CAAC;;AAEhB,UAAI,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AAC5B,OAAC,CAAC,IAAI,GAAG,IAAI,CAAC;;AAEd,UAAI,KAAK,CAAC;AACV,YAAM,CAAC,YAAY,CAAC,YAAW;AAC7B,aAAK,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;OACxB,CAAC,CAAC;;AAEH,YAAM,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC;AAC/B,YAAM,CAAC,EAAE,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC;AACtB,UAAI,EAAE,CAAC;KACR,CAAC,CAAC;;AAEH,MAAE,CAAC,iBAAiB,EAAE,UAAS,IAAI,EAAC;AAClC,UAAI,IAAI,GAAG,IAAI,MAAM,CAAC,EAAE,CAAC,CAAC;AAC1B,UAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACb,UAAI,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;;AAE9B,WAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACpC,cAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;OACjC;;AAED,UAAI,EAAE,CAAC;KACR,CAAC,CAAC;GACJ,CAAC,CAAC;CACJ,CAAC,CAAC","file":"utils.test-compiled.js","sourcesContent":["\nvar utils = require('../lib/utils');\nvar assert = require('assert');\n\nvar mongo;\ntry {\n  mongo = new require('mongodb');\n} catch (e) {}\n\ndescribe('lib/utils', function() {\n  describe('clone', function() {\n    it('clones constructors named ObjectId', function(done) {\n      function ObjectId (id) {\n        this.id = id;\n      }\n\n      var o1 = new ObjectId('1234');\n      var o2 = utils.clone(o1);\n      assert.ok(o2 instanceof ObjectId);\n\n      done();\n    });\n\n    it('clones constructors named ObjectID', function(done) {\n      function ObjectID (id) {\n        this.id = id;\n      }\n\n      var o1 = new ObjectID('1234');\n      var o2 = utils.clone(o1);\n\n      assert.ok(o2 instanceof ObjectID);\n      done();\n    });\n\n    it('does not clone constructors named ObjectIdd', function(done) {\n      function ObjectIdd (id) {\n        this.id = id;\n      }\n\n      var o1 = new ObjectIdd('1234');\n      var o2 = utils.clone(o1);\n      assert.ok(!(o2 instanceof ObjectIdd));\n\n      done();\n    });\n\n    it('optionally clones ObjectId constructors using its clone method', function(done) {\n      function ObjectID (id) {\n        this.id = id;\n        this.cloned = false;\n      }\n\n      ObjectID.prototype.clone = function () {\n        var ret = new ObjectID(this.id);\n        ret.cloned = true;\n        return ret;\n      }\n\n      var id = 1234;\n      var o1 = new ObjectID(id);\n      assert.equal(id, o1.id);\n      assert.equal(false, o1.cloned);\n\n      var o2 = utils.clone(o1);\n      assert.ok(o2 instanceof ObjectID);\n      assert.equal(id, o2.id);\n      assert.ok(o2.cloned);\n      done();\n    });\n\n    it('clones mongodb.ReadPreferences', function (done) {\n      if (!mongo) return done();\n\n      var tags = [\n        {dc: 'tag1'}\n      ];\n      var prefs = [\n        new mongo.ReadPreference(\"primary\"),\n        new mongo.ReadPreference(mongo.ReadPreference.PRIMARY_PREFERRED),\n        new mongo.ReadPreference(\"primary\", tags),\n        mongo.ReadPreference(\"primary\", tags)\n      ];\n\n      var prefsCloned = utils.clone(prefs);\n\n      for (var i = 0; i < prefsCloned.length; i++) {\n        assert.notEqual(prefs[i], prefsCloned[i]);\n        assert.ok(prefsCloned[i] instanceof mongo.ReadPreference);\n        assert.ok(prefsCloned[i].isValid());\n        if (prefs[i].tags) {\n          assert.ok(prefsCloned[i].tags);\n          assert.notEqual(prefs[i].tags, prefsCloned[i].tags);\n          assert.notEqual(prefs[i].tags[0], prefsCloned[i].tags[0]);\n        } else {\n          assert.equal(prefsCloned[i].tags, null);\n        }\n      }\n\n      done();\n    });\n\n    it('clones mongodb.Binary', function(done){\n      if (!mongo) return done();\n\n      var buf = new Buffer('hi');\n      var binary= new mongo.Binary(buf, 2);\n      var clone = utils.clone(binary);\n      assert.equal(binary.sub_type, clone.sub_type);\n      assert.equal(String(binary.buffer), String(buf));\n      assert.ok(binary !== clone);\n      done();\n    })\n\n    it('handles objects with no constructor', function(done) {\n      var name ='335';\n\n      var o = Object.create(null);\n      o.name = name;\n\n      var clone;\n      assert.doesNotThrow(function() {\n        clone = utils.clone(o);\n      });\n\n      assert.equal(name, clone.name);\n      assert.ok(o != clone);\n      done();\n    });\n\n    it('handles buffers', function(done){\n      var buff = new Buffer(10);\n      buff.fill(1);\n      var clone = utils.clone(buff);\n\n      for (var i = 0; i < buff.length; i++) {\n        assert.equal(buff[i], clone[i]);\n      }\n\n      done();\n    });\n  });\n});\n"]}