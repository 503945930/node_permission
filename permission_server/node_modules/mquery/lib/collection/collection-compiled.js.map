{"version":3,"sources":["collection.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;;;;AAMb,IAAI,OAAO,GAAG,CACV,MAAM,EACN,SAAS,EACT,QAAQ,EACR,QAAQ,EACR,OAAO,EACP,UAAU,EACV,eAAe,EACf,WAAW,EACX,YAAY,CACf,CAAC;;;;;;AAMF,SAAS,UAAU,GAAI,EAAE;;AAEzB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,EAAE,CAAC,EAAE;AAClD,MAAI,MAAM,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;AACxB,YAAU,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,cAAc,CAAC,MAAM,CAAC,CAAC;CACvD;;AAED,MAAM,CAAC,OAAO,GAAG,OAAO,GAAG,UAAU,CAAC;AACtC,UAAU,CAAC,OAAO,GAAG,OAAO,CAAC;;;;;;AAM7B,SAAS,cAAc,CAAE,MAAM,EAAE;AAC/B,SAAO,YAAY;AACjB,UAAM,IAAI,KAAK,CAAC,aAAa,GAAG,MAAM,GAAG,kBAAkB,CAAC,CAAC;GAC9D,CAAA;CACF","file":"collection-compiled.js","sourcesContent":["'use strict';\n\n/**\n * methods a collection must implement\n */\n\nvar methods = [\n    'find'\n  , 'findOne'\n  , 'update'\n  , 'remove'\n  , 'count'\n  , 'distinct'\n  , 'findAndModify'\n  , 'aggregate'\n  , 'findStream'\n];\n\n/**\n * Collection base class from which implementations inherit\n */\n\nfunction Collection () {}\n\nfor (var i = 0, len = methods.length; i < len; ++i) {\n  var method = methods[i];\n  Collection.prototype[method] = notImplemented(method);\n}\n\nmodule.exports = exports = Collection;\nCollection.methods = methods;\n\n/**\n * creates a function which throws an implementation error\n */\n\nfunction notImplemented (method) {\n  return function () {\n    throw new Error('collection.' + method + ' not implemented');\n  }\n}\n\n"]}