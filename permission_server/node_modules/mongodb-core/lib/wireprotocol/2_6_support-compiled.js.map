{"version":3,"sources":["2_6_support.js"],"names":[],"mappings":"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","file":"2_6_support-compiled.js","sourcesContent":["\"use strict\";\n\nvar Insert = require('./commands').Insert\n  , Update = require('./commands').Update\n  , Remove = require('./commands').Remove\n  , Query = require('../connection/commands').Query\n  , copy = require('../connection/utils').copy\n  , KillCursor = require('../connection/commands').KillCursor\n  , GetMore = require('../connection/commands').GetMore\n  , Query = require('../connection/commands').Query\n  , ReadPreference = require('../topologies/read_preference')\n  , f = require('util').format\n  , CommandResult = require('../topologies/command_result')\n  , MongoError = require('../error')\n  , Long = require('bson').Long;\n\nvar LegacySupport = function() {}\n\n//\n// Execute a write operation\nvar executeWrite = function(topology, type, opsField, ns, ops, options, callback) {\n  if(ops.length == 0) throw new MongoError(\"insert must contain at least one document\");\n  if(typeof options == 'function') {\n    callback = options;\n    options = {};\n  }\n\n  // Split the ns up to get db and collection\n  var p = ns.split(\".\");\n  var d = p.shift();\n  // Options\n  var ordered = typeof options.ordered == 'boolean' ? options.ordered : true;\n  var writeConcern = options.writeConcern || {};\n  // return skeleton\n  var writeCommand = {};\n  writeCommand[type] = p.join('.');\n  writeCommand[opsField] = ops;\n  writeCommand.ordered = ordered;\n  writeCommand.writeConcern = writeConcern;    \n\n  // Options object\n  var opts = {};\n  if(type == 'insert') opts.checkKeys = true;\n  // Ensure we support serialization of functions\n  if(options.serializeFunctions) opts.serializeFunctions = options.serializeFunctions;\n  // Execute command\n  topology.command(f(\"%s.$cmd\", d), writeCommand, opts, callback);    \n}\n\n//\n// Needs to support legacy mass insert as well as ordered/unordered legacy\n// emulation\n//\nLegacySupport.prototype.insert = function(topology, ismaster, ns, bson, pool, callbacks, ops, options, callback) {\n  executeWrite(topology, 'insert', 'documents', ns, ops, options, callback);\n}\n\nLegacySupport.prototype.update = function(topology, ismaster, ns, bson, pool, callbacks, ops, options, callback) {    \n  executeWrite(topology, 'update', 'updates', ns, ops, options, callback);\n}  \n\nLegacySupport.prototype.remove = function(topology, ismaster, ns, bson, pool, callbacks, ops, options, callback) {\n  executeWrite(topology, 'delete', 'deletes', ns, ops, options, callback);\n}\n\nLegacySupport.prototype.killCursor = function(bson, cursorId, connection, callback) {\n  // Create a kill cursor command\n  var killCursor = new KillCursor(bson, [cursorId]);\n  // Execute the kill cursor command\n  if(connection && connection.isConnected()) connection.write(killCursor.toBin());\n  // Set cursor to 0\n  cursorId = Long.ZERO;\n  // Return to caller\n  if(callback) callback(null, null);\n}\n\nLegacySupport.prototype.getMore = function(bson, ns, cursorState, batchSize, raw, connection, callbacks, options, callback) {\n  // Create getMore command\n  var getMore = new GetMore(bson, ns, cursorState.cursorId, {numberToReturn: batchSize});\n\n  // Query callback\n  var queryCallback = function(err, r) {\n    if(err) return callback(err);\n\n    // If we have a timed out query or a cursor that was killed\n    if((r.responseFlags & (1 << 0)) != 0) {\n      return callback(new MongoError(\"cursor killed or timed out\"), null);\n    }\n\n    // Set all the values\n    cursorState.documents = r.documents;\n    cursorState.cursorId = r.cursorId;\n    // Return\n    callback(null);\n  }\n\n  // If we have a raw query decorate the function\n  if(raw) {\n    queryCallback.raw = raw;\n  }\n  \n  // Register a callback\n  callbacks.register(getMore.requestId, queryCallback);\n  // Write out the getMore command\n  connection.write(getMore.toBin());\n}\n\nLegacySupport.prototype.command = function(bson, ns, cmd, cursorState, topology, options) {\n  // Establish type of command\n  if(cmd.find) {\n    return setupClassicFind(bson, ns, cmd, cursorState, topology, options)\n  } else if(cursorState.cursorId != null) {\n  } else if(cmd) {\n    return setupCommand(bson, ns, cmd, cursorState, topology, options);\n  } else {\n    throw new MongoError(f(\"command %s does not return a cursor\", JSON.stringify(cmd)));\n  }\n}\n\n//\n// Execute a find command\nvar setupClassicFind = function(bson, ns, cmd, cursorState, topology, options) {\n  var readPreference = options.readPreference || new ReadPreference('primary');\n  if(typeof readPreference == 'string') readPreference = new ReadPreference(readPreference);\n  if(!(readPreference instanceof ReadPreference)) throw new MongoError('readPreference must be a ReadPreference instance');\n\n  // Ensure we have at least some options\n  options = options || {};\n  // Set the optional batchSize\n  cursorState.batchSize = cmd.batchSize || cursorState.batchSize;\n  var numberToReturn = 0;\n  \n  // Unpack the limit and batchSize values\n  if(cursorState.limit == 0) {\n    numberToReturn = cursorState.batchSize;\n  } else if(cursorState.limit < 0 || cursorState.limit < cursorState.batchSize || (cursorState.limit > 0 && cursorState.batchSize == 0)) {\n    numberToReturn = cursorState.limit;\n  } else {\n    numberToReturn = cursorState.batchSize;\n  }\n\n  var numberToSkip = cursorState.skip || 0;\n  // Build actual find command\n  var findCmd = {};\n  // Using special modifier\n  var usesSpecialModifier = false;\n\n  // We have a Mongos topology, check if we need to add a readPreference\n  if(topology.type == 'mongos' && readPreference) {\n    findCmd['$readPreference'] = readPreference.toJSON();\n    usesSpecialModifier = true;\n  }\n\n  // Add special modifiers to the query\n  if(cmd.sort) findCmd['orderby'] = cmd.sort, usesSpecialModifier = true;\n  if(cmd.hint) findCmd['$hint'] = cmd.hint, usesSpecialModifier = true;\n  if(cmd.snapshot) findCmd['$snapshot'] = cmd.snapshot, usesSpecialModifier = true;\n  if(cmd.returnKey) findCmd['$returnKey'] = cmd.returnKey, usesSpecialModifier = true;\n  if(cmd.maxScan) findCmd['$maxScan'] = cmd.maxScan, usesSpecialModifier = true;\n  if(cmd.min) findCmd['$min'] = cmd.min, usesSpecialModifier = true;\n  if(cmd.max) findCmd['$max'] = cmd.max, usesSpecialModifier = true;\n  if(cmd.showDiskLoc) findCmd['$showDiskLoc'] = cmd.showDiskLoc, usesSpecialModifier = true;\n  if(cmd.comment) findCmd['$comment'] = cmd.comment, usesSpecialModifier = true;\n  if(cmd.maxTimeMS) findCmd['$maxTimeMS'] = cmd.maxTimeMS, usesSpecialModifier = true;\n\n  // If we have explain, return a single document and close cursor\n  if(cmd.explain) {\n    numberToReturn = -1;\n    usesSpecialModifier = true;\n    findCmd['$explain'] = true;\n  }\n\n  // If we have a special modifier\n  if(usesSpecialModifier) {      \n    findCmd['$query'] = cmd.query;\n  } else {\n    findCmd = cmd.query;\n  }\n\n  // Build Query object\n  var query = new Query(bson, ns, findCmd, {\n      numberToSkip: numberToSkip, numberToReturn: numberToReturn\n    , checkKeys: false, returnFieldSelector: cmd.fields\n  });\n\n  // Set query flags\n  query.slaveOk = readPreference.slaveOk();\n\n  // Set up the option bits for wire protocol\n  if(typeof cmd.tailable == 'boolean') query.tailable = cmd.tailable;\n  if(typeof cmd.oplogReplay == 'boolean') query.oplogReplay = cmd.oplogReplay;\n  if(typeof cmd.noCursorTimeout == 'boolean') query.noCursorTimeout = cmd.noCursorTimeout;\n  if(typeof cmd.awaitData == 'boolean') query.awaitData = cmd.awaitData;\n  if(typeof cmd.exhaust == 'boolean') query.exhaust = cmd.exhaust;\n  if(typeof cmd.partial == 'boolean') query.partial = cmd.partial;\n  // Return the query\n  return query;\n}  \n\n//\n// Set up a command cursor\nvar setupCommand = function(bson, ns, cmd, cursorState, topology, options) {\n  var readPreference = options.readPreference || new ReadPreference('primary');\n  if(typeof readPreference == 'string') readPreference = new ReadPreference(readPreference);\n  if(!(readPreference instanceof ReadPreference)) throw new MongoError('readPreference must be a ReadPreference instance');\n\n  // Set empty options object\n  options = options || {}\n\n  // Final query\n  var finalCmd = {};\n  for(var name in cmd) {\n    finalCmd[name] = cmd[name];\n  }\n\n  // Build command namespace\n  var parts = ns.split(/\\./);\n\n  // We have a Mongos topology, check if we need to add a readPreference\n  if(topology.type == 'mongos' && readPreference) {\n    finalCmd['$readPreference'] = readPreference.toJSON();\n  }\n\n  // Build Query object\n  var query = new Query(bson, f('%s.$cmd', parts.shift()), finalCmd, {\n      numberToSkip: 0, numberToReturn: -1\n    , checkKeys: false\n  });\n\n  // Set query flags\n  query.slaveOk = readPreference.slaveOk();\n\n  // Return the query\n  return query;\n}\n\n/**\n * @ignore\n */\nvar bindToCurrentDomain = function(callback) {\n  var domain = process.domain;\n  if(domain == null || callback == null) {\n    return callback;\n  } else {\n    return domain.bind(callback);\n  }\n}\n\nmodule.exports = LegacySupport;"]}