{"version":3,"sources":["cursor.js"],"names":[],"mappings":"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","file":"cursor-compiled.js","sourcesContent":["\"use strict\";\n\nvar Long = require('bson').Long\n  , Logger = require('./connection/logger')\n  , MongoError = require('./error')\n  , f = require('util').format;  \n\n/**\n * This is a cursor results callback\n *\n * @callback resultCallback\n * @param {error} error An error object. Set to null if no error present\n * @param {object} document\n */\n\n/**\n * @fileOverview The **Cursor** class is an internal class that embodies a cursor on MongoDB\n * allowing for iteration over the results returned from the underlying query.\n * \n * **CURSORS Cannot directly be instantiated**\n * @example\n * var Server = require('mongodb-core').Server\n *   , ReadPreference = require('mongodb-core').ReadPreference\n *   , assert = require('assert');\n * \n * var server = new Server({host: 'localhost', port: 27017});\n * // Wait for the connection event\n * server.on('connect', function(server) {\n *   assert.equal(null, err);\n * \n *   // Execute the write\n *   var cursor = _server.cursor('integration_tests.inserts_example4', {\n *       find: 'integration_tests.example4'\n *     , query: {a:1}\n *   }, {\n *     readPreference: new ReadPreference('secondary');\n *   });\n * \n *   // Get the first document\n *   cursor.next(function(err, doc) {\n *     assert.equal(null, err);\n *     server.destroy();\n *   });\n * });\n * \n * // Start connecting\n * server.connect();\n */\n\n/**\n * Creates a new Cursor, not to be used directly\n * @class\n * @param {object} bson An instance of the BSON parser\n * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)\n * @param {{object}|Long} cmd The selector (can be a command or a cursorId)\n * @param {object} [options=null] Optional settings.\n * @param {object} [options.batchSize=1000] Batchsize for the operation\n * @param {array} [options.documents=[]] Initial documents list for cursor\n * @param {object} [options.transforms=null] Transform methods for the cursor results\n * @param {function} [options.transforms.query] Transform the value returned from the initial query\n * @param {function} [options.transforms.doc] Transform each document returned from Cursor.prototype.next\n * @param {object} topology The server topology instance.\n * @param {object} topologyOptions The server topology options.\n * @return {Cursor} A cursor instance\n * @property {number} cursorBatchSize The current cursorBatchSize for the cursor\n * @property {number} cursorLimit The current cursorLimit for the cursor\n * @property {number} cursorSkip The current cursorSkip for the cursor\n */\nvar Cursor = function(bson, ns, cmd, options, topology, topologyOptions) {\n  options = options || {};\n  // Cursor reference\n  var self = this;\n  // Initial query\n  var query = null;\n\n  // Cursor connection\n  this.connection = null;\n  // Cursor server\n  this.server = null;\n\n  // Do we have a not connected handler\n  this.disconnectHandler = options.disconnectHandler;\n\n  // Set local values\n  this.bson = bson;\n  this.ns = ns;\n  this.cmd = cmd;\n  this.options = options;\n  this.topology = topology;\n\n  // All internal state\n  this.cursorState = {\n      cursorId: null\n    , documents: options.documents || []\n    , cursorIndex: 0\n    , dead: false\n    , killed: false\n    , init: false\n    , notified: false\n    , limit: options.limit || cmd.limit || 0\n    , skip: options.skip || cmd.skip || 0\n    , batchSize: options.batchSize || cmd.batchSize || 1000\n    , currentLimit: 0\n    // Result field name if not a cursor (contains the array of results)\n    , transforms: options.transforms\n  }\n\n  // Callback controller\n  this.callbacks = null;\n\n  // Logger\n  this.logger = Logger('Cursor', options);\n\n  // \n  // Did we pass in a cursor id\n  if(typeof cmd == 'number') {\n    this.cursorState.cursorId = Long.fromNumber(cmd);\n  } else if(cmd instanceof Long) {\n    this.cursorState.cursorId = cmd;\n  }\n}\n\nCursor.prototype.setCursorBatchSize = function(value) {  \n  this.cursorState.batchSize = value;\n}\n\nCursor.prototype.cursorBatchSize = function() {  \n  return this.cursorState.batchSize;\n}\n\nCursor.prototype.setCursorLimit = function(value) {  \n  this.cursorState.limit = value;\n}\n\nCursor.prototype.cursorLimit = function() {  \n  return this.cursorState.limit;\n}\n\nCursor.prototype.setCursorSkip = function(value) {  \n  this.cursorState.skip = value;\n}\n\nCursor.prototype.cursorSkip = function() {  \n  return this.cursorState.skip;\n}\n\n//\n// Execute getMore command\nvar execGetMore = function(self, callback) {\n  if(self.logger.isDebug()) self.logger.debug(f(\"schedule getMore call for query [%s]\", JSON.stringify(self.query)))\n  // Determine if it's a raw query\n  var raw = self.options.raw || self.cmd.raw;\n  // We have a wire protocol handler\n  self.server.wireProtocolHandler.getMore(self.bson, self.ns, self.cursorState, self.cursorState.batchSize, raw, self.connection, self.callbacks, self.options, callback);\n}\n\n// \n// Execute the first query\nvar execInitialQuery = function(self, query, cmd, options, cursorState, connection, logger, callbacks, callback) {\n  if(logger.isDebug()) {\n    logger.debug(f(\"issue initial query [%s] with flags [%s]\"\n      , JSON.stringify(cmd)\n      , JSON.stringify(query)));\n  }\n\n  var queryCallback = function(err, result) {\n    if(err) return callback(err);\n\n    if (result.queryFailure) {\n      return callback(MongoError.create(result.documents[0]), null);\n    }\n\n    // Check if we have a command cursor\n    if(Array.isArray(result.documents) && result.documents.length == 1 && !cmd.find) {\n      if(result.documents[0]['$err'] \n        || result.documents[0]['errmsg']) {\n        return callback(MongoError.create(result.documents[0]), null);          \n      }\n\n      if(result.documents[0].cursor != null \n        && typeof result.documents[0].cursor != 'string') {\n          var id = result.documents[0].cursor.id;\n          // If we have a namespace change set the new namespace for getmores\n          if(result.documents[0].cursor.ns) {\n            self.ns = result.documents[0].cursor.ns;\n          }\n          // Promote id to long if needed\n          cursorState.cursorId = typeof id == 'number' ? Long.fromNumber(id) : id;\n          // If we have a firstBatch set it\n          if(Array.isArray(result.documents[0].cursor.firstBatch)) {\n            cursorState.documents = result.documents[0].cursor.firstBatch;//.reverse();\n          }\n\n          // Return after processing command cursor\n          return callback(null, null);\n      }\n\n      if(Array.isArray(result.documents[0].result)) {\n        cursorState.documents = result.documents[0].result;\n        cursorState.cursorId = Long.ZERO;\n        return callback(null, null);\n      }      \n    }\n\n    // Otherwise fall back to regular find path\n    cursorState.cursorId = result.cursorId;\n    cursorState.documents = result.documents;\n\n    // Transform the results with passed in transformation method if provided\n    if(cursorState.transforms && typeof cursorState.transforms.query == 'function') {\n      cursorState.documents = cursorState.transforms.query(result);\n    }\n\n    // Return callback\n    callback(null, null);\n  }\n\n  // If we have a raw query decorate the function\n  if(options.raw || cmd.raw) {\n    queryCallback.raw = options.raw || cmd.raw;\n  }\n\n  // Set up callback\n  callbacks.register(query.requestId, queryCallback);\n\n  // Write the initial command out\n  connection.write(query.toBin());\n}\n\n//\n// Handle callback (including any exceptions thrown)\nvar handleCallback = function(callback, err, result) {\n  try {\n    callback(err, result);\n  } catch(err) {\n    process.nextTick(function() {\n      throw err;\n    });\n  }\n}\n\n/**\n * Clone the cursor\n * @method\n * @return {Cursor}\n */  \nCursor.prototype.clone = function() {\n  return this.topology.cursor(this.ns, this.cmd, this.options);\n}\n\n/**\n * Checks if the cursor is dead\n * @method\n * @return {boolean} A boolean signifying if the cursor is dead or not\n */\nCursor.prototype.isDead = function() {\n  return this.cursorState.dead == true;\n}\n\n/**\n * Checks if the cursor was killed by the application\n * @method\n * @return {boolean} A boolean signifying if the cursor was killed by the application\n */\nCursor.prototype.isKilled = function() {\n  return this.cursorState.killed == true;\n}\n\n/**\n * Checks if the cursor notified it's caller about it's death\n * @method\n * @return {boolean} A boolean signifying if the cursor notified the callback\n */\nCursor.prototype.isNotified = function() {\n  return this.cursorState.notified == true;\n}\n\n/**\n * Returns current buffered documents length\n * @method\n * @return {number} The number of items in the buffered documents\n */\nCursor.prototype.bufferedCount = function() {\n  return this.cursorState.documents.length - this.cursorState.cursorIndex;\n}\n\n/**\n * Returns current buffered documents\n * @method\n * @return {Array} An array of buffered documents\n */\nCursor.prototype.readBufferedDocuments = function(number) {\n  var unreadDocumentsLength = this.cursorState.documents.length - this.cursorState.cursorIndex;\n  var length = number < unreadDocumentsLength ? number : unreadDocumentsLength;\n  var elements = this.cursorState.documents.slice(this.cursorState.cursorIndex, this.cursorState.cursorIndex + length);\n  this.cursorState.currentLimit = this.cursorState.currentLimit + length;\n  this.cursorState.cursorIndex = this.cursorState.cursorIndex + length;\n\n  // Transform the doc with passed in transformation method if provided\n  if(this.cursorState.transforms && typeof this.cursorState.transforms.doc == 'function') {\n    // Transform all the elements\n    for(var i = 0; i < elements.length; i++) {\n      elements[i] = this.cursorState.transforms.doc(elements[i]);\n    }\n  }\n\n  // Return elements\n  return elements;\n}\n\n/**\n * Kill the cursor\n * @method\n * @param {resultCallback} callback A callback function\n */\nCursor.prototype.kill = function(callback) {\n  // Set cursor to dead\n  this.cursorState.dead = true;\n  this.cursorState.killed = true;\n  // Remove documents\n  this.cursorState.documents = [];\n\n  // If no cursor id just return\n  if(this.cursorState.cursorId == null || this.cursorState.cursorId.isZero() || this.cursorState.init == false) {\n    if(callback) callback(null, null);\n    return;\n  }\n\n  // Execute command\n  this.server.wireProtocolHandler.killCursor(this.bson, this.cursorState.cursorId, this.connection, callback);\n}\n\n/**\n * Resets the cursor\n * @method\n * @return {null}\n */  \nCursor.prototype.rewind = function() {\n  if(this.cursorState.init) {\n    if(!this.cursorState.dead) {\n      this.kill();\n    }\n\n    this.cursorState.currentLimit = 0;\n    this.cursorState.init = false;\n    this.cursorState.dead = false;\n    this.cursorState.killed = false;\n    this.cursorState.notified = false;\n    this.cursorState.documents = [];\n    this.cursorState.cursorId = null;\n    this.cursorState.cursorIndex = 0;\n  }  \n}\n\n/**\n * Validate if the connection is dead and return error\n */\nvar isConnectionDead = function(self, callback) {\n  if(self.connection \n    && !self.connection.isConnected()) {\n    self.cursorState.notified = true;\n    self.cursorState.killed = true;\n    self.cursorState.documents = [];\n    self.cursorState.cursorIndex = 0;\n    callback(MongoError.create(f('connection to host %s:%s was destroyed', self.connection.host, self.connection.port)))\n    return true;\n  }\n\n  return false;\n}\n\n/**\n * Validate if the cursor is dead but was not explicitly killed by user\n */\nvar isCursorDeadButNotkilled = function(self, callback) {\n  // Cursor is dead but not marked killed, return null\n  if(self.cursorState.dead && !self.cursorState.killed) {\n    self.cursorState.notified = true;\n    self.cursorState.killed = true;\n    self.cursorState.documents = [];\n    self.cursorState.cursorIndex = 0;\n    handleCallback(callback, null, null);\n    return true;\n  }    \n\n  return false;\n}\n\n/**\n * Validate if the cursor is dead and was killed by user\n */\nvar isCursorDeadAndKilled = function(self, callback) {\n  if(self.cursorState.dead && self.cursorState.killed) {\n    handleCallback(callback, MongoError.create(\"cursor is dead\"));\n    return true;\n  }  \n\n  return false;\n}\n\n/**\n * Validate if the cursor was killed by the user\n */\nvar isCursorKilled = function(self, callback) {\n  if(self.cursorState.killed) {\n    self.cursorState.notified = true;\n    self.cursorState.documents = [];\n    self.cursorState.cursorIndex = 0;\n    handleCallback(callback, null, null);\n    return true;\n  }\n\n  return false;\n}\n\n/**\n * Mark cursor as being dead and notified\n */\nvar setCursorDeadAndNotified = function(self, callback) {\n  self.cursorState.dead = true;\n  self.cursorState.notified = true;\n  self.cursorState.documents = [];\n  self.cursorState.cursorIndex = 0;\n  handleCallback(callback, null, null);  \n}\n\n/**\n * Mark cursor as being notified\n */\nvar setCursorNotified = function(self, callback) {\n  self.cursorState.notified = true;\n  self.cursorState.documents = [];\n  self.cursorState.cursorIndex = 0;\n  handleCallback(callback, null, null);\n}\n\nvar nextFunction = function(self, callback) {\n  // We have notified about it\n  if(self.cursorState.notified) {\n    return callback(new Error('cursor is exhausted'));\n  }\n  // Cursor is killed return null\n  if(isCursorKilled(self, callback)) return;  \n\n  // Cursor is dead but not marked killed, return null\n  if(isCursorDeadButNotkilled(self, callback)) return;\n\n  // We have a dead and killed cursor, attempting to call next should error\n  if(isCursorDeadAndKilled(self, callback)) return;\n\n  // We have just started the cursor\n  if(!self.cursorState.init) {\n    // Topology is not connected, save the call in the provided store to be\n    // Executed at some point when the handler deems it's reconnected\n    if(!self.topology.isConnected(self.options) && self.disconnectHandler != null) {\n      return self.disconnectHandler.addObjectAndMethod('cursor', self, 'next', [callback], callback);\n    }\n\n    try {\n      // Get a server\n      self.server = self.topology.getServer(self.options);\n      // Get a connection\n      self.connection = self.server.getConnection();\n      // Get the callbacks\n      self.callbacks = self.server.getCallbacks();\n    } catch(err) {\n      return callback(err);\n    }\n\n    // Set as init\n    self.cursorState.init = true;\n    // Get the right wire protocol command\n    self.query = self.server.wireProtocolHandler.command(self.bson, self.ns, self.cmd, self.cursorState, self.topology, self.options);\n  }\n\n  // Process exhaust messages\n  var processExhaustMessages = function(err, result) {\n    if(err) {\n      self.cursorState.dead = true;\n      self.callbacks.unregister(self.query.requestId);\n      return callback(err);\n    }\n\n    // Concatenate all the documents\n    self.cursorState.documents = self.cursorState.documents.concat(result.documents);\n\n    // If we have no documents left\n    if(Long.ZERO.equals(result.cursorId)) {\n      self.cursorState.cursorId = Long.ZERO;\n      self.callbacks.unregister(self.query.requestId);\n      return nextFunction(self, callback);\n    }\n\n    // Set up next listener\n    self.callbacks.register(result.requestId, processExhaustMessages)\n\n    // Initial result\n    if(self.cursorState.cursorId == null) {\n      self.cursorState.cursorId = result.cursorId;\n      nextFunction(self, callback);\n    }\n  }    \n\n  // If we have exhaust\n  if(self.cmd.exhaust && self.cursorState.cursorId == null) {\n    // Handle all the exhaust responses\n    self.callbacks.register(self.query.requestId, processExhaustMessages);\n    // Write the initial command out\n    return self.connection.write(self.query.toBin());\n  } else if(self.cmd.exhaust && self.cursorState.cursorIndex < self.cursorState.documents.length) {\n    return handleCallback(callback, null, self.cursorState.documents[self.cursorState.cursorIndex++]);\n  } else if(self.cmd.exhaust && Long.ZERO.equals(self.cursorState.cursorId)) {\n    self.callbacks.unregister(self.query.requestId);\n    return setCursorNotified(self, callback);\n  } else if(self.cmd.exhaust) {\n    return setTimeout(function() {\n      if(Long.ZERO.equals(self.cursorState.cursorId)) return;\n      nextFunction(self, callback);\n    }, 1);\n  }\n\n  // If we don't have a cursorId execute the first query\n  if(self.cursorState.cursorId == null) {\n    // Check if connection is dead and return if not possible to\n    // execute the query against the db\n    if(isConnectionDead(self, callback)) return;\n\n    // Check if topology is destroyed\n    if(self.topology.isDestroyed()) return callback(new MongoError(f('connection destroyed, not possible to instantiate cursor')));\n    \n    // query, cmd, options, cursorState, callback\n    execInitialQuery(self, self.query, self.cmd, self.options, self.cursorState, self.connection, self.logger, self.callbacks, function(err, r) {\n      if(err) return handleCallback(callback, err, null);\n      if(self.cursorState.documents.length == 0 && !self.cmd.tailable && !self.cmd.awaitData) {\n        return setCursorNotified(self, callback);\n      }\n\n      nextFunction(self, callback);\n    });\n  } else if(self.cursorState.limit > 0 && self.cursorState.currentLimit >= self.cursorState.limit) {\n      return setCursorDeadAndNotified(self, callback);\n  } else if(self.cursorState.cursorIndex == self.cursorState.documents.length\n      && !Long.ZERO.equals(self.cursorState.cursorId)) {\n      // Ensure an empty cursor state\n      self.cursorState.documents = [];\n      self.cursorState.cursorIndex = 0;\n\n      // Check if topology is destroyed\n      if(self.topology.isDestroyed()) return callback(new MongoError(f('connection destroyed, not possible to instantiate cursor')));\n\n      // Check if connection is dead and return if not possible to\n      // execute a getmore on this connection\n      if(isConnectionDead(self, callback)) return;\n\n      // Execute the next get more\n      execGetMore(self, function(err, doc) {\n        if(err) return handleCallback(callback, err);\n        if(self.cursorState.documents.length == 0 && Long.ZERO.equals(self.cursorState.cursorId)) self.cursorState.dead = true;\n        \n        // Tailable cursor getMore result, notify owner about it\n        // No attempt is made here to retry, this is left to the user of the\n        // core module to handle to keep core simple\n        if(self.cursorState.documents.length == 0 && self.cmd.tailable) {\n          return handleCallback(callback, MongoError.create({\n              message: \"No more documents in tailed cursor\"\n            , tailable: self.cmd.tailable\n            , awaitData: self.cmd.awaitData\n          }));\n        }\n\n        if(self.cursorState.limit > 0 && self.cursorState.currentLimit >= self.cursorState.limit) {\n          return setCursorDeadAndNotified(self, callback);\n        }\n\n        nextFunction(self, callback);\n      });\n  } else if(self.cursorState.documents.length == self.cursorState.cursorIndex \n    && self.cmd.tailable) { \n      return handleCallback(callback, MongoError.create({\n          message: \"No more documents in tailed cursor\"\n        , tailable: self.cmd.tailable\n        , awaitData: self.cmd.awaitData\n      }));\n  } else if(self.cursorState.documents.length == self.cursorState.cursorIndex \n      && Long.ZERO.equals(self.cursorState.cursorId)) {\n      setCursorDeadAndNotified(self, callback);\n  } else {\n    if(self.cursorState.limit > 0 && self.cursorState.currentLimit >= self.cursorState.limit) {\n      return setCursorDeadAndNotified(self, callback);\n    }\n\n    // Increment the current cursor limit\n    self.cursorState.currentLimit += 1;\n\n    // Get the document\n    var doc = self.cursorState.documents[self.cursorState.cursorIndex++];\n\n    // Transform the doc with passed in transformation method if provided\n    if(self.cursorState.transforms && typeof self.cursorState.transforms.doc == 'function') {\n      doc = self.cursorState.transforms.doc(doc);\n    }\n\n    // Return the document\n    handleCallback(callback, null, doc);\n  }  \n}\n\n/**\n * Retrieve the next document from the cursor\n * @method\n * @param {resultCallback} callback A callback function\n */\nCursor.prototype.next = function(callback) {\n  nextFunction(this, callback);\n}\n\nmodule.exports = Cursor;\n"]}