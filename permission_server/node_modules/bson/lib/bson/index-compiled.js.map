{"version":3,"sources":["index.js"],"names":[],"mappings":";;AAAA,IAAI;AACF,SAAO,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AACrC,SAAO,CAAC,UAAU,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;CAC1C,CAAC,OAAM,GAAG,EAAE;;CAEZ;;AAED,CAAE,iBAAiB,EACf,UAAU,EACV,QAAQ,EACR,UAAU,EACV,UAAU,EACV,WAAW,EACX,WAAW,EACX,YAAY,EACZ,UAAU,EACV,aAAa,EACb,QAAQ,CAAC,CAAC,OAAO,CAAC,UAAU,IAAI,EAAE;AACnC,MAAI,MAAM,GAAG,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC;AAClC,OAAK,IAAI,CAAC,IAAI,MAAM,EAAE;AACrB,WAAO,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;GACtB;CACJ,CAAC,CAAC;;;AAGH,OAAO,CAAC,IAAI,GAAG,YAAW;AACxB,MAAI,OAAO,GAAG,EAAE,CAAC;;AAEjB,GAAE,iBAAiB,EACf,UAAU,EACV,QAAQ,EACR,UAAU,EACV,UAAU,EACV,WAAW,EACX,WAAW,EACX,YAAY,EACZ,UAAU,EACV,aAAa,EACb,QAAQ,EACR,UAAU,CAAC,CAAC,OAAO,CAAC,UAAU,IAAI,EAAE;AACrC,QAAI,MAAM,GAAG,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC;AAClC,SAAK,IAAI,CAAC,IAAI,MAAM,EAAE;AACrB,aAAO,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;KACtB;GACJ,CAAC,CAAC;;AAEH,SAAO,OAAO,CAAC;CAChB,CAAA;;;AAGD,OAAO,CAAC,MAAM,GAAG,YAAW;AAC1B,MAAI,OAAO,GAAG,EAAE,CAAC;;AAEjB,GAAE,iBAAiB,EACf,UAAU,EACV,QAAQ,EACR,UAAU,EACV,UAAU,EACV,WAAW,EACX,WAAW,EACX,YAAY,EACZ,UAAU,EACV,aAAa,EACb,QAAQ,CACX,CAAC,OAAO,CAAC,UAAU,IAAI,EAAE;AACtB,QAAI,MAAM,GAAG,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC;AAClC,SAAK,IAAI,CAAC,IAAI,MAAM,EAAE;AACpB,aAAO,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;KACxB;GACJ,CAAC,CAAC;;;AAGH,MAAI;AACF,WAAO,CAAC,MAAM,CAAC,GAAG,OAAO,CAAC,UAAU,CAAC,CAAA;GACtC,CAAC,OAAM,GAAG,EAAE;AACX,WAAO,OAAO,CAAC,IAAI,EAAE,CAAC;GACvB;;;AAGD,SAAO,OAAO,CAAC;CAChB,CAAA","file":"index-compiled.js","sourcesContent":["try {\n  exports.BSONPure = require('./bson');\n  exports.BSONNative = require('bson-ext');\n} catch(err) {\n  // do nothing\n}\n\n[ './binary_parser'\n  , './binary'\n  , './code'\n  , './db_ref'\n  , './double'\n  , './max_key'\n  , './min_key'\n  , './objectid'\n  , './symbol'\n  , './timestamp'\n  , './long'].forEach(function (path) {\n  \tvar module = require('./' + path);\n  \tfor (var i in module) {\n  \t\texports[i] = module[i];\n    }\n});\n\n// Exports all the classes for the PURE JS BSON Parser\nexports.pure = function() {\n  var classes = {};\n  // Map all the classes\n  [ './binary_parser'\n    , './binary'\n    , './code'\n    , './db_ref'\n    , './double'\n    , './max_key'\n    , './min_key'\n    , './objectid'\n    , './symbol'\n    , './timestamp'\n    , './long'\n    , '././bson'].forEach(function (path) {\n    \tvar module = require('./' + path);\n    \tfor (var i in module) {\n    \t\tclasses[i] = module[i];\n      }\n  });\n  // Return classes list\n  return classes;\n}\n\n// Exports all the classes for the NATIVE JS BSON Parser\nexports.native = function() {\n  var classes = {};\n  // Map all the classes\n  [ './binary_parser'\n    , './binary'\n    , './code'\n    , './db_ref'\n    , './double'\n    , './max_key'\n    , './min_key'\n    , './objectid'\n    , './symbol'\n    , './timestamp'\n    , './long'\n  ].forEach(function (path) {\n      var module = require('./' + path);\n      for (var i in module) {\n        classes[i] = module[i];\n      }\n  });\n  \n  // Catch error and return no classes found\n  try {\n    classes['BSON'] = require('bson-ext')\n  } catch(err) {\n    return exports.pure();\n  }\n\n  // Return classes list\n  return classes;\n}\n"]}