{"version":3,"sources":["crc.js"],"names":[],"mappings":";;;AACA,IAAI,GAAG,EAAE,GAAG,CAAC;;AAEb,GAAG,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;;AAEvB,MAAM,CAAC,OAAO,GAAG,GAAG,GAAG,CAAC,YAAW;AACjC,KAAG,CAAC,SAAS,CAAC,QAAQ,GAAG,IAAI,CAAC;;AAE9B,KAAG,CAAC,SAAS,CAAC,QAAQ,GAAG,IAAI,CAAC;;AAE9B,KAAG,CAAC,SAAS,CAAC,KAAK,GAAG,CAAC,CAAC;;AAExB,KAAG,CAAC,SAAS,CAAC,IAAI,GAAG,UAAS,GAAG,EAAE;AACjC,WAAO,EAAE,CAAC;GACX,CAAC;;AAEF,KAAG,CAAC,SAAS,CAAC,SAAS,GAAG,UAAS,GAAG,EAAE,EAAE,EAAE;AAC1C,QAAI,CAAC,EAAE,EAAE,EAAE,IAAI,EAAE,QAAQ,CAAC;AAC1B,QAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;AACzB,SAAG,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;KACnB;AACD,YAAQ,GAAG,EAAE,CAAC;AACd,SAAK,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,IAAI,GAAG,GAAG,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,IAAI,GAAG,EAAE,IAAI,IAAI,GAAG,EAAE,IAAI,IAAI,EAAE,CAAC,GAAG,CAAC,IAAI,IAAI,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE;AACxG,cAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;KAC3B;AACD,WAAO,QAAQ,CAAC;GACjB,CAAC;;AAEF,WAAS,GAAG,GAAG;AACb,QAAI,CAAC,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC;GAC1B;;AAED,KAAG,CAAC,SAAS,CAAC,aAAa,GAAG,YAAW;AACvC,WAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC,CAAC;GACpC,CAAC;;AAEF,KAAG,CAAC,SAAS,CAAC,MAAM,GAAG,UAAS,IAAI,EAAE,EAAE,CAAC;;AAEzC,KAAG,CAAC,SAAS,CAAC,KAAK,GAAG,YAAW;AAC/B,WAAO,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC;GACjC,CAAC;;AAEF,KAAG,CAAC,SAAS,CAAC,QAAQ,GAAG,UAAS,MAAM,EAAE;AACxC,QAAI,GAAG,CAAC;AACR,QAAI,MAAM,IAAI,IAAI,EAAE;AAClB,YAAM,GAAG,IAAI,CAAC;KACf;AACD,OAAG,GAAG,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC;AAC/B,QAAI,MAAM,EAAE;AACV,SAAG,GAAG,GAAG,KAAK,CAAC,CAAC;KACjB;AACD,WAAO,GAAG,CAAC;GACZ,CAAC;;AAEF,KAAG,CAAC,SAAS,CAAC,MAAM,GAAG,YAAW;AAChC,WAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;GACnC,CAAC;;AAEF,KAAG,CAAC,SAAS,CAAC,SAAS,GAAG,UAAS,KAAK,EAAE;AACxC,QAAI,MAAM,CAAC;AACX,QAAI,KAAK,IAAI,IAAI,EAAE;AACjB,UAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;KACpB;AACD,UAAM,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC;AACvB,QAAI,CAAC,KAAK,EAAE,CAAC;AACb,WAAO,MAAM,CAAC;GACf,CAAC;;AAEF,SAAO,GAAG,CAAC;CAEZ,CAAA,EAAG,CAAC","file":"crc-compiled.js","sourcesContent":["// Generated by CoffeeScript 1.7.1\nvar CRC, hex;\n\nhex = require('./hex');\n\nmodule.exports = CRC = (function() {\n  CRC.prototype.INIT_CRC = 0x00;\n\n  CRC.prototype.XOR_MASK = 0x00;\n\n  CRC.prototype.WIDTH = 0;\n\n  CRC.prototype.pack = function(crc) {\n    return '';\n  };\n\n  CRC.prototype.each_byte = function(buf, cb) {\n    var i, _i, _ref, _results;\n    if (!Buffer.isBuffer(buf)) {\n      buf = Buffer(buf);\n    }\n    _results = [];\n    for (i = _i = 0, _ref = buf.length - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; i = 0 <= _ref ? ++_i : --_i) {\n      _results.push(cb(buf[i]));\n    }\n    return _results;\n  };\n\n  function CRC() {\n    this.crc = this.INIT_CRC;\n  }\n\n  CRC.prototype.digest_length = function() {\n    return Math.ceil(this.WIDTH / 8.0);\n  };\n\n  CRC.prototype.update = function(data) {};\n\n  CRC.prototype.reset = function() {\n    return this.crc = this.INIT_CRC;\n  };\n\n  CRC.prototype.checksum = function(signed) {\n    var sum;\n    if (signed == null) {\n      signed = true;\n    }\n    sum = this.crc ^ this.XOR_MASK;\n    if (signed) {\n      sum = sum >>> 0;\n    }\n    return sum;\n  };\n\n  CRC.prototype.finish = function() {\n    return this.pack(this.checksum());\n  };\n\n  CRC.prototype.hexdigest = function(value) {\n    var result;\n    if (value != null) {\n      this.update(value);\n    }\n    result = this.finish();\n    this.reset();\n    return result;\n  };\n\n  return CRC;\n\n})();\n"]}