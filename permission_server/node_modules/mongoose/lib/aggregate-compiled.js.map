{"version":3,"sources":["aggregate.js"],"names":[],"mappings":"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","file":"aggregate-compiled.js","sourcesContent":["/*!\n * Module dependencies\n */\n\nvar Promise = require('./promise')\n  , util = require('util')\n  , utils = require('./utils')\n  , Query = require('./query')\n  , read = Query.prototype.read\n\n/**\n * Aggregate constructor used for building aggregation pipelines.\n *\n * ####Example:\n *\n *     new Aggregate();\n *     new Aggregate({ $project: { a: 1, b: 1 } });\n *     new Aggregate({ $project: { a: 1, b: 1 } }, { $skip: 5 });\n *     new Aggregate([{ $project: { a: 1, b: 1 } }, { $skip: 5 }]);\n *\n * Returned when calling Model.aggregate().\n *\n * ####Example:\n *\n *     Model\n *     .aggregate({ $match: { age: { $gte: 21 }}})\n *     .unwind('tags')\n *     .exec(callback)\n *\n * ####Note:\n *\n * - The documents returned are plain javascript objects, not mongoose documents (since any shape of document can be returned).\n * - Requires MongoDB >= 2.1\n *\n * @see MongoDB http://docs.mongodb.org/manual/applications/aggregation/\n * @see driver http://mongodb.github.com/node-mongodb-native/api-generated/collection.html#aggregate\n * @param {Object|Array} [ops] aggregation operator(s) or operator array\n * @api public\n */\n\nfunction Aggregate () {\n  this._pipeline = [];\n  this._model = undefined;\n  this.options = undefined;\n\n  if (1 === arguments.length && util.isArray(arguments[0])) {\n    this.append.apply(this, arguments[0]);\n  } else {\n    this.append.apply(this, arguments);\n  }\n}\n\n/**\n * Binds this aggregate to a model.\n *\n * @param {Model} model the model to which the aggregate is to be bound\n * @return {Aggregate}\n * @api private\n */\n\nAggregate.prototype.bind = function (model) {\n  this._model = model;\n  return this;\n}\n\n/**\n * Appends new operators to this aggregate pipeline\n *\n * ####Examples:\n *\n *     aggregate.append({ $project: { field: 1 }}, { $limit: 2 });\n *\n *     // or pass an array\n *     var pipeline = [{ $match: { daw: 'Logic Audio X' }} ];\n *     aggregate.append(pipeline);\n *\n * @param {Object} ops operator(s) to append\n * @return {Aggregate}\n * @api public\n */\n\nAggregate.prototype.append = function () {\n  var args = utils.args(arguments)\n    , arg;\n\n  if (!args.every(isOperator)) {\n    throw new Error(\"Arguments must be aggregate pipeline operators\");\n  }\n\n  this._pipeline = this._pipeline.concat(args);\n\n  return this;\n}\n\n/**\n * Appends a new $project operator to this aggregate pipeline.\n *\n * Mongoose query [selection syntax](#query_Query-select) is also supported.\n *\n * ####Examples:\n *\n *     // include a, include b, exclude _id\n *     aggregate.project(\"a b -_id\");\n *\n *     // or you may use object notation, useful when\n *     // you have keys already prefixed with a \"-\"\n *     aggregate.project({a: 1, b: 1, _id: 0});\n *\n *     // reshaping documents\n *     aggregate.project({\n *         newField: '$b.nested'\n *       , plusTen: { $add: ['$val', 10]}\n *       , sub: {\n *            name: '$a'\n *         }\n *     })\n *\n *     // etc\n *     aggregate.project({ salary_k: { $divide: [ \"$salary\", 1000 ] } });\n *\n * @param {Object|String} arg field specification\n * @see projection http://docs.mongodb.org/manual/reference/aggregation/project/\n * @return {Aggregate}\n * @api public\n */\n\nAggregate.prototype.project = function (arg) {\n  var fields = {};\n\n  if ('object' === typeof arg && !util.isArray(arg)) {\n    Object.keys(arg).forEach(function (field) {\n      fields[field] = arg[field];\n    });\n  } else if (1 === arguments.length && 'string' === typeof arg) {\n    arg.split(/\\s+/).forEach(function (field) {\n      if (!field) return;\n      var include = '-' == field[0] ? 0 : 1;\n      if (include === 0) field = field.substring(1);\n      fields[field] = include;\n    });\n  } else {\n    throw new Error(\"Invalid project() argument. Must be string or object\");\n  }\n\n  return this.append({ $project: fields });\n}\n\n/**\n * Appends a new custom $group operator to this aggregate pipeline.\n *\n * ####Examples:\n *\n *     aggregate.group({ _id: \"$department\" });\n *\n * @see $group http://docs.mongodb.org/manual/reference/aggregation/group/\n * @method group\n * @memberOf Aggregate\n * @param {Object} arg $group operator contents\n * @return {Aggregate}\n * @api public\n */\n\n/**\n * Appends a new custom $match operator to this aggregate pipeline.\n *\n * ####Examples:\n *\n *     aggregate.match({ department: { $in: [ \"sales\", \"engineering\" } } });\n *\n * @see $match http://docs.mongodb.org/manual/reference/aggregation/match/\n * @method match\n * @memberOf Aggregate\n * @param {Object} arg $match operator contents\n * @return {Aggregate}\n * @api public\n */\n\n/**\n * Appends a new $skip operator to this aggregate pipeline.\n *\n * ####Examples:\n *\n *     aggregate.skip(10);\n *\n * @see $skip http://docs.mongodb.org/manual/reference/aggregation/skip/\n * @method skip\n * @memberOf Aggregate\n * @param {Number} num number of records to skip before next stage\n * @return {Aggregate}\n * @api public\n */\n\n/**\n * Appends a new $limit operator to this aggregate pipeline.\n *\n * ####Examples:\n *\n *     aggregate.limit(10);\n *\n * @see $limit http://docs.mongodb.org/manual/reference/aggregation/limit/\n * @method limit\n * @memberOf Aggregate\n * @param {Number} num maximum number of records to pass to the next stage\n * @return {Aggregate}\n * @api public\n */\n\n/**\n * Appends a new $geoNear operator to this aggregate pipeline.\n *\n * ####NOTE:\n *\n * **MUST** be used as the first operator in the pipeline.\n *\n * ####Examples:\n *\n *     aggregate.near({\n *       near: [40.724, -73.997],\n *       distanceField: \"dist.calculated\", // required\n *       maxDistance: 0.008,\n *       query: { type: \"public\" },\n *       includeLocs: \"dist.location\",\n *       uniqueDocs: true,\n *       num: 5\n *     });\n *\n * @see $geoNear http://docs.mongodb.org/manual/reference/aggregation/geoNear/\n * @method near\n * @memberOf Aggregate\n * @param {Object} parameters\n * @return {Aggregate}\n * @api public\n */\n\nAggregate.prototype.near = function (arg) {\n  var op = {};\n  op.$geoNear = arg;\n  return this.append(op);\n};\n\n/*!\n * define methods\n */\n\n'group match skip limit out'.split(' ').forEach(function ($operator) {\n  Aggregate.prototype[$operator] = function (arg) {\n    var op = {};\n    op['$' + $operator] = arg;\n    return this.append(op);\n  };\n});\n\n/**\n * Appends new custom $unwind operator(s) to this aggregate pipeline.\n *\n * ####Examples:\n *\n *     aggregate.unwind(\"tags\");\n *     aggregate.unwind(\"a\", \"b\", \"c\");\n *\n * @see $unwind http://docs.mongodb.org/manual/reference/aggregation/unwind/\n * @param {String} fields the field(s) to unwind\n * @return {Aggregate}\n * @api public\n */\n\nAggregate.prototype.unwind = function () {\n  var args = utils.args(arguments);\n\n  return this.append.apply(this, args.map(function (arg) {\n    return { $unwind: '$' + arg };\n  }));\n}\n\n/**\n * Appends a new $sort operator to this aggregate pipeline.\n *\n * If an object is passed, values allowed are `asc`, `desc`, `ascending`, `descending`, `1`, and `-1`.\n *\n * If a string is passed, it must be a space delimited list of path names. The sort order of each path is ascending unless the path name is prefixed with `-` which will be treated as descending.\n *\n * ####Examples:\n *\n *     // these are equivalent\n *     aggregate.sort({ field: 'asc', test: -1 });\n *     aggregate.sort('field -test');\n *\n * @see $sort http://docs.mongodb.org/manual/reference/aggregation/sort/\n * @param {Object|String} arg\n * @return {Aggregate} this\n * @api public\n */\n\nAggregate.prototype.sort = function (arg) {\n  // TODO refactor to reuse the query builder logic\n\n  var sort = {};\n\n  if ('Object' === arg.constructor.name) {\n    var desc = ['desc', 'descending', -1];\n    Object.keys(arg).forEach(function (field) {\n      sort[field] = desc.indexOf(arg[field]) === -1 ? 1 : -1;\n    });\n  } else if (1 === arguments.length && 'string' == typeof arg) {\n    arg.split(/\\s+/).forEach(function (field) {\n      if (!field) return;\n      var ascend = '-' == field[0] ? -1 : 1;\n      if (ascend === -1) field = field.substring(1);\n      sort[field] = ascend;\n    });\n  } else {\n    throw new TypeError('Invalid sort() argument. Must be a string or object.');\n  }\n\n  return this.append({ $sort: sort });\n}\n\n/**\n * Sets the readPreference option for the aggregation query.\n *\n * ####Example:\n *\n *     Model.aggregate(..).read('primaryPreferred').exec(callback)\n *\n * @param {String} pref one of the listed preference options or their aliases\n * @param {Array} [tags] optional tags for this query\n * @see mongodb http://docs.mongodb.org/manual/applications/replication/#read-preference\n * @see driver http://mongodb.github.com/node-mongodb-native/driver-articles/anintroductionto1_1and2_2.html#read-preferences\n */\n\nAggregate.prototype.read = function (pref) {\n  if (!this.options) this.options = {};\n  read.apply(this, arguments);\n  return this;\n};\n\n/**\n * Sets the allowDiskUse option for the aggregation query (ignored for < 2.6.0)\n *\n * ####Example:\n *\n *     Model.aggregate(..).allowDiskUse(true).exec(callback)\n *\n * @param {Boolean} value Should tell server it can use hard drive to store data during aggregation.\n * @param {Array} [tags] optional tags for this query\n * @see mongodb http://docs.mongodb.org/manual/reference/command/aggregate/\n */\n\nAggregate.prototype.allowDiskUse = function(value) {\n  if (!this.options) this.options = {};\n  this.options.allowDiskUse = value;\n  return this;\n};\n\n/**\n * Sets the cursor option option for the aggregation query (ignored for < 2.6.0).\n * Note the different syntax below: .exec() returns a cursor object, and no callback\n * is necessary.\n *\n * ####Example:\n *\n *     var cursor = Model.aggregate(..).cursor({ batchSize: 1000 }).exec();\n *     cursor.each(function(error, doc) {\n *       // use doc\n *     });\n *\n * @param {Object} options set the cursor batch size\n * @see mongodb http://mongodb.github.io/node-mongodb-native/2.0/api/AggregationCursor.html\n */\n\nAggregate.prototype.cursor = function(options) {\n  if (!this.options) this.options = {};\n  this.options.cursor = options;\n  return this;\n};\n\n/**\n * Executes the aggregate pipeline on the currently bound Model.\n *\n * ####Example:\n *\n *     aggregate.exec(callback);\n *\n *     // Because a promise is returned, the `callback` is optional.\n *     var promise = aggregate.exec();\n *     promise.then(..);\n *\n * @see Promise #promise_Promise\n * @param {Function} [callback]\n * @return {Promise}\n * @api public\n */\n\nAggregate.prototype.exec = function (callback) {\n  var promise = new Promise();\n\n  if (callback) {\n    promise.addBack(callback);\n  }\n\n  if (!this._pipeline.length) {\n    promise.error(new Error(\"Aggregate has empty pipeline\"));\n    return promise;\n  }\n\n  if (!this._model) {\n    promise.error(new Error(\"Aggregate not bound to any Model\"));\n    return promise;\n  }\n\n  prepareDiscriminatorPipeline(this);\n\n  if (this.options && this.options.cursor) {\n    return this._model.collection.aggregate(this._pipeline, this.options || {});\n  }\n\n  this._model\n    .collection\n    .aggregate(this._pipeline, this.options || {}, promise.resolve.bind(promise));\n\n  return promise;\n};\n\n/*!\n * Helpers\n */\n\n/**\n * Checks whether an object is likely a pipeline operator\n *\n * @param {Object} obj object to check\n * @return {Boolean}\n * @api private\n */\n\nfunction isOperator (obj) {\n  var k;\n\n  if ('object' !== typeof obj) {\n    return false;\n  }\n\n  k = Object.keys(obj);\n\n  return 1 === k.length && k.some(function (key) {\n    return '$' === key[0];\n  });\n}\n\n/*!\n * Adds the appropriate `$match` pipeline step to the top of an aggregate's\n * pipeline, should it's model is a non-root discriminator type. This is\n * analogous to the `prepareDiscriminatorCriteria` function in `lib/query.js`.\n *\n * @param {Aggregate} aggregate Aggregate to prepare\n */\n\nfunction prepareDiscriminatorPipeline (aggregate) {\n  var schema = aggregate._model.schema,\n      discriminatorMapping = schema && schema.discriminatorMapping;\n\n  if (discriminatorMapping && !discriminatorMapping.isRoot) {\n    var originalPipeline = aggregate._pipeline,\n        discriminatorKey = discriminatorMapping.key,\n        discriminatorValue = discriminatorMapping.value;\n\n    // If the first pipeline stage is a match and it doesn't specify a `__t`\n    // key, add the discriminator key to it. This allows for potential\n    // aggregation query optimizations not to be disturbed by this feature.\n    if (originalPipeline[0] && originalPipeline[0].$match &&\n        !originalPipeline[0].$match[discriminatorKey]) {\n      originalPipeline[0].$match[discriminatorKey] = discriminatorValue;\n      // `originalPipeline` is a ref, so there's no need for\n      // aggregate._pipeline = originalPipeline\n    } else {\n      var match = {};\n      match[discriminatorKey] = discriminatorValue;\n      aggregate._pipeline = [{ $match: match }].concat(originalPipeline);\n    }\n  }\n}\n\n\n/*!\n * Exports\n */\n\nmodule.exports = Aggregate;\n"]}