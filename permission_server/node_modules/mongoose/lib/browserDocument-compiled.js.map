{"version":3,"sources":["browserDocument.js"],"names":[],"mappings":"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","file":"browserDocument-compiled.js","sourcesContent":["/*!\n * Module dependencies.\n */\n\nvar NodeJSDocument = require('./document')\n  , EventEmitter = require('events').EventEmitter\n  , setMaxListeners = EventEmitter.prototype.setMaxListeners\n  , MongooseError = require('./error')\n  , MixedSchema = require('./schema/mixed')\n  , Schema = require('./schema')\n  , ObjectId = require('./types/objectid')\n  , ValidatorError = require('./schematype').ValidatorError\n  , utils = require('./utils')\n  , clone = utils.clone\n  , isMongooseObject = utils.isMongooseObject\n  , inspect = require('util').inspect\n  , ValidationError = MongooseError.ValidationError\n  , InternalCache = require('./internal')\n  , deepEqual = utils.deepEqual\n  , hooks = require('hooks-fixed')\n  , Promise = require('./promise')\n  , DocumentArray\n  , MongooseArray\n  , Embedded\n\n/**\n * Document constructor.\n *\n * @param {Object} obj the values to set\n * @param {Object} [fields] optional object containing the fields which were selected in the query returning this document and any populated paths data\n * @param {Boolean} [skipId] bool, should we auto create an ObjectId _id\n * @inherits NodeJS EventEmitter http://nodejs.org/api/events.html#events_class_events_eventemitter\n * @event `init`: Emitted on a document after it has was retreived from the db and fully hydrated by Mongoose.\n * @event `save`: Emitted when the document is successfully saved\n * @api private\n */\n\nfunction Document (obj, schema, fields, skipId, skipInit) {\n  if ( !(this instanceof Document) )\n    return new Document( obj, schema, fields, skipId, skipInit );\n\n\n  if (utils.isObject(schema) && !(schema instanceof Schema)) {\n    schema = new Schema(schema);\n  }\n\n  // When creating EmbeddedDocument, it already has the schema and he doesn't need the _id\n  schema = this.schema || schema;\n\n  // Generate ObjectId if it is missing, but it requires a scheme\n  if ( !this.schema && schema.options._id ){\n    obj = obj || {};\n\n    if ( obj._id === undefined ){\n      obj._id = new ObjectId();\n    }\n  }\n\n  if ( !schema ){\n    throw new MongooseError.MissingSchemaError();\n  }\n\n  this.$__setSchema(schema);\n\n  this.$__ = new InternalCache;\n  this.$__.emitter = new EventEmitter();\n  this.isNew = true;\n  this.errors = undefined;\n\n  //var schema = this.schema;\n\n  if ('boolean' === typeof fields) {\n    this.$__.strictMode = fields;\n    fields = undefined;\n  } else {\n    this.$__.strictMode = this.schema.options && this.schema.options.strict;\n    this.$__.selected = fields;\n  }\n\n  var required = this.schema.requiredPaths();\n  for (var i = 0; i < required.length; ++i) {\n    this.$__.activePaths.require(required[i]);\n  }\n\n  setMaxListeners.call(this, 0);\n  this._doc = this.$__buildDoc(obj, fields, skipId);\n\n  if ( !skipInit && obj ){\n    this.init( obj );\n  }\n\n  this.$__registerHooksFromSchema();\n\n  // apply methods\n  for ( var m in schema.methods ){\n    this[ m ] = schema.methods[ m ];\n  }\n  // apply statics\n  for ( var s in schema.statics ){\n    this[ s ] = schema.statics[ s ];\n  }\n}\n\n/*!\n * Inherit from the NodeJS document\n */\nDocument.prototype = Object.create(NodeJSDocument.prototype);\nDocument.prototype.constructor = Document;\n\n\n\n/*!\n * Module exports.\n */\n\nDocument.ValidationError = ValidationError;\nmodule.exports = exports = Document;\n"]}