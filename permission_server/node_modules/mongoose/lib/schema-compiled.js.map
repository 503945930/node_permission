{"version":3,"sources":["schema.js"],"names":[],"mappings":"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","file":"schema-compiled.js","sourcesContent":["/*!\n * Module dependencies.\n */\n\nvar EventEmitter = require('events').EventEmitter;\nvar VirtualType = require('./virtualtype');\nvar utils = require('./utils');\nvar MongooseTypes;\nvar Kareem = require('kareem');\n\nvar IS_QUERY_HOOK = {\n  count: true,\n  find: true,\n  findOne: true,\n  findOneAndUpdate: true,\n  findOneAndRemove: true,\n  update: true\n};\n\n/**\n * Schema constructor.\n *\n * ####Example:\n *\n *     var child = new Schema({ name: String });\n *     var schema = new Schema({ name: String, age: Number, children: [child] });\n *     var Tree = mongoose.model('Tree', schema);\n *\n *     // setting schema options\n *     new Schema({ name: String }, { _id: false, autoIndex: false })\n *\n * ####Options:\n *\n * - [autoIndex](/docs/guide.html#autoIndex): bool - defaults to null (which means use the connection's autoIndex option)\n * - [bufferCommands](/docs/guide.html#bufferCommands): bool - defaults to true\n * - [capped](/docs/guide.html#capped): bool - defaults to false\n * - [collection](/docs/guide.html#collection): string - no default\n * - [id](/docs/guide.html#id): bool - defaults to true\n * - [_id](/docs/guide.html#_id): bool - defaults to true\n * - `minimize`: bool - controls [document#toObject](#document_Document-toObject) behavior when called manually - defaults to true\n * - [read](/docs/guide.html#read): string\n * - [safe](/docs/guide.html#safe): bool - defaults to true.\n * - [shardKey](/docs/guide.html#shardKey): bool - defaults to `null`\n * - [strict](/docs/guide.html#strict): bool - defaults to true\n * - [toJSON](/docs/guide.html#toJSON) - object - no default\n * - [toObject](/docs/guide.html#toObject) - object - no default\n * - [validateBeforeSave](/docs/guide.html#validateBeforeSave) - bool - defaults to `true`\n * - [versionKey](/docs/guide.html#versionKey): bool - defaults to \"__v\"\n *\n * ####Note:\n *\n * _When nesting schemas, (`children` in the example above), always declare the child schema first before passing it into its parent._\n *\n * @param {Object} definition\n * @inherits NodeJS EventEmitter http://nodejs.org/api/events.html#events_class_events_eventemitter\n * @event `init`: Emitted after the schema is compiled into a `Model`.\n * @api public\n */\n\nfunction Schema (obj, options) {\n  if (!(this instanceof Schema))\n    return new Schema(obj, options);\n\n  this.paths = {};\n  this.subpaths = {};\n  this.virtuals = {};\n  this.nested = {};\n  this.inherits = {};\n  this.callQueue = [];\n  this._indexes = [];\n  this.methods = {};\n  this.statics = {};\n  this.tree = {};\n  this._requiredpaths = undefined;\n  this.discriminatorMapping = undefined;\n  this._indexedpaths = undefined;\n\n  this.s = {\n    hooks: new Kareem(),\n    queryHooks: IS_QUERY_HOOK\n  };\n\n  this.options = this.defaultOptions(options);\n\n  // build paths\n  if (obj) {\n    this.add(obj);\n  }\n\n  // check if _id's value is a subdocument (gh-2276)\n  var _idSubDoc = obj && obj._id && utils.isObject(obj._id);\n\n  // ensure the documents get an auto _id unless disabled\n  var auto_id = !this.paths['_id'] && (!this.options.noId && this.options._id) && !_idSubDoc;\n\n  if (auto_id) {\n    this.add({ _id: {type: Schema.ObjectId, auto: true} });\n  }\n\n  // ensure the documents receive an id getter unless disabled\n  var autoid = !this.paths['id'] && (!this.options.noVirtualId && this.options.id);\n  if (autoid) {\n    this.virtual('id').get(idGetter);\n  }\n\n  for (var i = 0; i < this._defaultMiddleware.length; ++i) {\n    var m = this._defaultMiddleware[i];\n    this[m.kind](m.hook, m.fn);\n  }\n\n  // adds updatedAt and createdAt timestamps to documents if enabled\n  var timestamps = this.options.timestamps;\n  if (timestamps) {\n    var createdAt = timestamps.createdAt || 'createdAt'\n      , updatedAt = timestamps.updatedAt || 'updatedAt'\n      , schemaAdditions = {};\n\n    schemaAdditions[updatedAt] = Date;\n\n    if (!this.paths[createdAt]) {\n      schemaAdditions[createdAt] = Date;\n    }\n\n    this.add(schemaAdditions);\n\n    this.pre('save', function (next) {\n      var defaultTimestamp = new Date();\n\n      if (!this[createdAt]){\n        this[createdAt] = auto_id ? this._id.getTimestamp() : defaultTimestamp;\n      }\n\n      this[updatedAt] = this.isNew ? this[createdAt] : defaultTimestamp;\n\n      next();\n    });\n  }\n\n}\n\n/*!\n * Returns this documents _id cast to a string.\n */\n\nfunction idGetter () {\n  if (this.$__._id) {\n    return this.$__._id;\n  }\n\n  return this.$__._id = null == this._id\n    ? null\n    : String(this._id);\n}\n\n/*!\n * Inherit from EventEmitter.\n */\nSchema.prototype = Object.create( EventEmitter.prototype );\nSchema.prototype.constructor = Schema;\n\n/**\n * Default middleware attached to a schema. Cannot be changed.\n *\n * This field is used to make sure discriminators don't get multiple copies of\n * built-in middleware. Declared as a constant because changing this at runtime\n * may lead to instability with Model.prototype.discriminator().\n *\n * @api private\n * @property _defaultMiddleware\n */\nObject.defineProperty(Schema.prototype, '_defaultMiddleware', {\n  configurable: false,\n  enumerable: false,\n  writable: false,\n  value: [\n    {\n      kind: 'pre',\n      hook: 'save',\n      fn: function(next) {\n        // Nested docs have their own presave\n        if (this.ownerDocument) {\n          return next();\n        }\n\n        // Validate\n        if (this.schema.options.validateBeforeSave) {\n          this.validate(next);\n        } else {\n          next();\n        }\n      }\n    }\n  ]\n});\n\n/**\n * Schema as flat paths\n *\n * ####Example:\n *     {\n *         '_id'        : SchemaType,\n *       , 'nested.key' : SchemaType,\n *     }\n *\n * @api private\n * @property paths\n */\n\nSchema.prototype.paths;\n\n/**\n * Schema as a tree\n *\n * ####Example:\n *     {\n *         '_id'     : ObjectId\n *       , 'nested'  : {\n *             'key' : String\n *         }\n *     }\n *\n * @api private\n * @property tree\n */\n\nSchema.prototype.tree;\n\n/**\n * Returns default options for this schema, merged with `options`.\n *\n * @param {Object} options\n * @return {Object}\n * @api private\n */\n\nSchema.prototype.defaultOptions = function (options) {\n  if (options && false === options.safe) {\n    options.safe = { w: 0 };\n  }\n\n  if (options && options.safe && 0 === options.safe.w) {\n    // if you turn off safe writes, then versioning goes off as well\n    options.versionKey = false;\n  }\n\n  options = utils.options({\n      strict: true\n    , bufferCommands: true\n    , capped: false // { size, max, autoIndexId }\n    , versionKey: '__v'\n    , discriminatorKey: '__t'\n    , minimize: true\n    , autoIndex: null\n    , shardKey: null\n    , read: null\n    , validateBeforeSave: true\n    // the following are only applied at construction time\n    , noId: false // deprecated, use { _id: false }\n    , _id: true\n    , noVirtualId: false // deprecated, use { id: false }\n    , id: true\n//    , pluralization: true  // only set this to override the global option\n  }, options);\n\n  if (options.read) {\n    options.read = utils.readPref(options.read);\n  }\n\n  return options;\n}\n\n/**\n * Adds key path / schema type pairs to this schema.\n *\n * ####Example:\n *\n *     var ToySchema = new Schema;\n *     ToySchema.add({ name: 'string', color: 'string', price: 'number' });\n *\n * @param {Object} obj\n * @param {String} prefix\n * @api public\n */\n\nSchema.prototype.add = function add (obj, prefix) {\n  prefix = prefix || '';\n  var keys = Object.keys(obj);\n\n  for (var i = 0; i < keys.length; ++i) {\n    var key = keys[i];\n\n    if (null == obj[key]) {\n      throw new TypeError('Invalid value for schema path `'+ prefix + key +'`');\n    }\n\n    if (Array.isArray(obj[key]) && obj[key].length === 1 && null == obj[key][0]) {\n      throw new TypeError('Invalid value for schema Array path `'+ prefix + key +'`');\n    }\n\n    if (utils.isObject(obj[key]) && (!obj[key].constructor || 'Object' == utils.getFunctionName(obj[key].constructor)) && (!obj[key].type || obj[key].type.type)) {\n      if (Object.keys(obj[key]).length) {\n        // nested object { last: { name: String }}\n        this.nested[prefix + key] = true;\n        this.add(obj[key], prefix + key + '.');\n      } else {\n        this.path(prefix + key, obj[key]); // mixed type\n      }\n    } else {\n      this.path(prefix + key, obj[key]);\n    }\n  }\n};\n\n/**\n * Reserved document keys.\n *\n * Keys in this object are names that are rejected in schema declarations b/c they conflict with mongoose functionality. Using these key name will throw an error.\n *\n *      on, emit, _events, db, get, set, init, isNew, errors, schema, options, modelName, collection, _pres, _posts, toObject\n *\n * _NOTE:_ Use of these terms as method names is permitted, but play at your own risk, as they may be existing mongoose document methods you are stomping on.\n *\n *      var schema = new Schema(..);\n *      schema.methods.init = function () {} // potentially breaking\n */\n\nSchema.reserved = Object.create(null);\nvar reserved = Schema.reserved;\nreserved.emit =\nreserved.on =\nreserved.once = // EventEmitter\nreserved.db =\nreserved.set =\nreserved.get =\nreserved.init =\nreserved.isNew =\nreserved.errors =\nreserved.schema =\nreserved.modelName =\nreserved.collection =\nreserved.toObject =\nreserved.save =\nreserved.validate =\nreserved.increment = // document properties and functions\nreserved._pres = reserved._posts = 1 // hooks.js\n\n/**\n * Gets/sets schema paths.\n *\n * Sets a path (if arity 2)\n * Gets a path (if arity 1)\n *\n * ####Example\n *\n *     schema.path('name') // returns a SchemaType\n *     schema.path('name', Number) // changes the schemaType of `name` to Number\n *\n * @param {String} path\n * @param {Object} constructor\n * @api public\n */\n\nSchema.prototype.path = function (path, obj) {\n  if (obj == undefined) {\n    if (this.paths[path]) return this.paths[path];\n    if (this.subpaths[path]) return this.subpaths[path];\n\n    // subpaths?\n    return /\\.\\d+\\.?.*$/.test(path)\n      ? getPositionalPath(this, path)\n      : undefined;\n  }\n\n  // some path names conflict with document methods\n  if (reserved[path]) {\n    throw new Error(\"`\" + path + \"` may not be used as a schema pathname\");\n  }\n\n  // update the tree\n  var subpaths = path.split(/\\./)\n    , last = subpaths.pop()\n    , branch = this.tree;\n\n  subpaths.forEach(function(sub, i) {\n    if (!branch[sub]) branch[sub] = {};\n    if ('object' != typeof branch[sub]) {\n      var msg = 'Cannot set nested path `' + path + '`. '\n              + 'Parent path `'\n              + subpaths.slice(0, i).concat([sub]).join('.')\n              + '` already set to type ' + branch[sub].name\n              + '.';\n      throw new Error(msg);\n    }\n    branch = branch[sub];\n  });\n\n  branch[last] = utils.clone(obj);\n\n  this.paths[path] = Schema.interpretAsType(path, obj);\n  return this;\n};\n\n/**\n * Converts type arguments into Mongoose Types.\n *\n * @param {String} path\n * @param {Object} obj constructor\n * @api private\n */\n\nSchema.interpretAsType = function (path, obj) {\n  if (obj.constructor) {\n    var constructorName = utils.getFunctionName(obj.constructor);\n    if (constructorName != 'Object') {\n      obj = { type: obj };\n    }\n  }\n\n  // Get the type making sure to allow keys named \"type\"\n  // and default to mixed if not specified.\n  // { type: { type: String, default: 'freshcut' } }\n  var type = obj.type && !obj.type.type\n    ? obj.type\n    : {};\n\n  if ('Object' == utils.getFunctionName(type.constructor) || 'mixed' == type) {\n    return new MongooseTypes.Mixed(path, obj);\n  }\n\n  if (Array.isArray(type) || Array == type || 'array' == type) {\n    // if it was specified through { type } look for `cast`\n    var cast = (Array == type || 'array' == type)\n      ? obj.cast\n      : type[0];\n\n    if (cast instanceof Schema) {\n      return new MongooseTypes.DocumentArray(path, cast, obj);\n    }\n\n    if ('string' == typeof cast) {\n      cast = MongooseTypes[cast.charAt(0).toUpperCase() + cast.substring(1)];\n    } else if (cast && (!cast.type || cast.type.type)\n                    && 'Object' == utils.getFunctionName(cast.constructor)\n                    && Object.keys(cast).length) {\n      return new MongooseTypes.DocumentArray(path, new Schema(cast), obj);\n    }\n\n    return new MongooseTypes.Array(path, cast || MongooseTypes.Mixed, obj);\n  }\n\n  var name;\n  if (Buffer.isBuffer(type)) {\n    name = 'Buffer';\n  } else {\n    name = 'string' == typeof type\n      ? type\n      // If not string, `type` is a function. Outside of IE, function.name\n      // gives you the function name. In IE, you need to compute it\n      : type.schemaName || utils.getFunctionName(type);\n  }\n\n  if (name) {\n    name = name.charAt(0).toUpperCase() + name.substring(1);\n  }\n\n  if (undefined == MongooseTypes[name]) {\n    throw new TypeError('Undefined type `' + name + '` at `' + path +\n        '`\\n  Did you try nesting Schemas? ' +\n        'You can only nest using refs or arrays.');\n  }\n\n  return new MongooseTypes[name](path, obj);\n};\n\n/**\n * Iterates the schemas paths similar to Array#forEach.\n *\n * The callback is passed the pathname and schemaType as arguments on each iteration.\n *\n * @param {Function} fn callback function\n * @return {Schema} this\n * @api public\n */\n\nSchema.prototype.eachPath = function (fn) {\n  var keys = Object.keys(this.paths)\n    , len = keys.length;\n\n  for (var i = 0; i < len; ++i) {\n    fn(keys[i], this.paths[keys[i]]);\n  }\n\n  return this;\n};\n\n/**\n * Returns an Array of path strings that are required by this schema.\n *\n * @api public\n * @return {Array}\n */\n\nSchema.prototype.requiredPaths = function requiredPaths () {\n  if (this._requiredpaths) return this._requiredpaths;\n\n  var paths = Object.keys(this.paths)\n    , i = paths.length\n    , ret = [];\n\n  while (i--) {\n    var path = paths[i];\n    if (this.paths[path].isRequired) ret.push(path);\n  }\n\n  return this._requiredpaths = ret;\n}\n\n/**\n * Returns indexes from fields and schema-level indexes (cached).\n *\n * @api private\n * @return {Array}\n */\n\nSchema.prototype.indexedPaths = function indexedPaths () {\n  if (this._indexedpaths) return this._indexedpaths;\n\n  return this._indexedpaths = this.indexes();\n}\n\n/**\n * Returns the pathType of `path` for this schema.\n *\n * Given a path, returns whether it is a real, virtual, nested, or ad-hoc/undefined path.\n *\n * @param {String} path\n * @return {String}\n * @api public\n */\n\nSchema.prototype.pathType = function (path) {\n  if (path in this.paths) return 'real';\n  if (path in this.virtuals) return 'virtual';\n  if (path in this.nested) return 'nested';\n  if (path in this.subpaths) return 'real';\n\n  if (/\\.\\d+\\.|\\.\\d+$/.test(path) && getPositionalPath(this, path)) {\n    return 'real';\n  } else {\n    return 'adhocOrUndefined'\n  }\n};\n\n/*!\n * ignore\n */\n\nfunction getPositionalPath (self, path) {\n  var subpaths = path.split(/\\.(\\d+)\\.|\\.(\\d+)$/).filter(Boolean);\n  if (subpaths.length < 2) {\n    return self.paths[subpaths[0]];\n  }\n\n  var val = self.path(subpaths[0]);\n  if (!val) return val;\n\n  var last = subpaths.length - 1\n    , subpath\n    , i = 1;\n\n  for (; i < subpaths.length; ++i) {\n    subpath = subpaths[i];\n\n    if (i === last && val && !val.schema && !/\\D/.test(subpath)) {\n      if (val instanceof MongooseTypes.Array) {\n        // StringSchema, NumberSchema, etc\n        val = val.caster;\n      } else {\n        val = undefined;\n      }\n      break;\n    }\n\n    // ignore if its just a position segment: path.0.subpath\n    if (!/\\D/.test(subpath)) continue;\n\n    if (!(val && val.schema)) {\n      val = undefined;\n      break;\n    }\n\n    val = val.schema.path(subpath);\n  }\n\n  return self.subpaths[path] = val;\n}\n\n/**\n * Adds a method call to the queue.\n *\n * @param {String} name name of the document method to call later\n * @param {Array} args arguments to pass to the method\n * @api private\n */\n\nSchema.prototype.queue = function(name, args){\n  this.callQueue.push([name, args]);\n  return this;\n};\n\n/**\n * Defines a pre hook for the document.\n *\n * ####Example\n *\n *     var toySchema = new Schema(..);\n *\n *     toySchema.pre('save', function (next) {\n *       if (!this.created) this.created = new Date;\n *       next();\n *     })\n *\n *     toySchema.pre('validate', function (next) {\n *       if (this.name != 'Woody') this.name = 'Woody';\n *       next();\n *     })\n *\n * @param {String} method\n * @param {Function} callback\n * @see hooks.js https://github.com/bnoguchi/hooks-js/tree/31ec571cef0332e21121ee7157e0cf9728572cc3\n * @api public\n */\n\nSchema.prototype.pre = function() {\n  var name = arguments[0];\n  if (IS_QUERY_HOOK[name]) {\n    this.s.hooks.pre.apply(this.s.hooks, arguments);\n    return this;\n  }\n  return this.queue('pre', arguments);\n};\n\n/**\n * Defines a post hook for the document\n *\n * Post hooks fire `on` the event emitted from document instances of Models compiled from this schema.\n *\n *     var schema = new Schema(..);\n *     schema.post('save', function (doc) {\n *       console.log('this fired after a document was saved');\n *     });\n *\n *     var Model = mongoose.model('Model', schema);\n *\n *     var m = new Model(..);\n *     m.save(function (err) {\n *       console.log('this fires after the `post` hook');\n *     });\n *\n * @param {String} method name of the method to hook\n * @param {Function} fn callback\n * @see hooks.js https://github.com/bnoguchi/hooks-js/tree/31ec571cef0332e21121ee7157e0cf9728572cc3\n * @api public\n */\n\nSchema.prototype.post = function(method, fn) {\n  if (IS_QUERY_HOOK[method]) {\n    this.s.hooks.post.apply(this.s.hooks, arguments);\n    return this;\n  }\n  // assuming that all callbacks with arity < 2 are synchronous post hooks\n  if (fn.length < 2) {\n    return this.queue('on', [arguments[0], function(doc) {\n      return fn.call(doc, doc);\n    }]);\n  }\n\n  return this.queue('post', [arguments[0], function(next){\n    // wrap original function so that the callback goes last,\n    // for compatibility with old code that is using synchronous post hooks\n    fn.call(this, this, next);\n  }]);\n};\n\n/**\n * Registers a plugin for this schema.\n *\n * @param {Function} plugin callback\n * @param {Object} [opts]\n * @see plugins\n * @api public\n */\n\nSchema.prototype.plugin = function (fn, opts) {\n  fn(this, opts);\n  return this;\n};\n\n/**\n * Adds an instance method to documents constructed from Models compiled from this schema.\n *\n * ####Example\n *\n *     var schema = kittySchema = new Schema(..);\n *\n *     schema.method('meow', function () {\n *       console.log('meeeeeoooooooooooow');\n *     })\n *\n *     var Kitty = mongoose.model('Kitty', schema);\n *\n *     var fizz = new Kitty;\n *     fizz.meow(); // meeeeeooooooooooooow\n *\n * If a hash of name/fn pairs is passed as the only argument, each name/fn pair will be added as methods.\n *\n *     schema.method({\n *         purr: function () {}\n *       , scratch: function () {}\n *     });\n *\n *     // later\n *     fizz.purr();\n *     fizz.scratch();\n *\n * @param {String|Object} method name\n * @param {Function} [fn]\n * @api public\n */\n\nSchema.prototype.method = function (name, fn) {\n  if ('string' != typeof name)\n    for (var i in name)\n      this.methods[i] = name[i];\n  else\n    this.methods[name] = fn;\n  return this;\n};\n\n/**\n * Adds static \"class\" methods to Models compiled from this schema.\n *\n * ####Example\n *\n *     var schema = new Schema(..);\n *     schema.static('findByName', function (name, callback) {\n *       return this.find({ name: name }, callback);\n *     });\n *\n *     var Drink = mongoose.model('Drink', schema);\n *     Drink.findByName('sanpellegrino', function (err, drinks) {\n *       //\n *     });\n *\n * If a hash of name/fn pairs is passed as the only argument, each name/fn pair will be added as statics.\n *\n * @param {String} name\n * @param {Function} fn\n * @api public\n */\n\nSchema.prototype.static = function(name, fn) {\n  if ('string' != typeof name)\n    for (var i in name)\n      this.statics[i] = name[i];\n  else\n    this.statics[name] = fn;\n  return this;\n};\n\n/**\n * Defines an index (most likely compound) for this schema.\n *\n * ####Example\n *\n *     schema.index({ first: 1, last: -1 })\n *\n * @param {Object} fields\n * @param {Object} [options]\n * @api public\n */\n\nSchema.prototype.index = function (fields, options) {\n  options || (options = {});\n\n  if (options.expires)\n    utils.expires(options);\n\n  this._indexes.push([fields, options]);\n  return this;\n};\n\n/**\n * Sets/gets a schema option.\n *\n * @param {String} key option name\n * @param {Object} [value] if not passed, the current option value is returned\n * @api public\n */\n\nSchema.prototype.set = function (key, value, _tags) {\n  if (1 === arguments.length) {\n    return this.options[key];\n  }\n\n  switch (key) {\n    case 'read':\n      this.options[key] = utils.readPref(value, _tags)\n      break;\n    case 'safe':\n      this.options[key] = false === value\n        ? { w: 0 }\n        : value\n      break;\n    default:\n      this.options[key] = value;\n  }\n\n  return this;\n}\n\n/**\n * Gets a schema option.\n *\n * @param {String} key option name\n * @api public\n */\n\nSchema.prototype.get = function (key) {\n  return this.options[key];\n}\n\n/**\n * The allowed index types\n *\n * @static indexTypes\n * @receiver Schema\n * @api public\n */\n\nvar indexTypes = '2d 2dsphere hashed text'.split(' ');\n\nObject.defineProperty(Schema, 'indexTypes', {\n    get: function () { return indexTypes }\n  , set: function () { throw new Error('Cannot overwrite Schema.indexTypes') }\n})\n\n/**\n * Compiles indexes from fields and schema-level indexes\n *\n * @api public\n */\n\nSchema.prototype.indexes = function () {\n  'use strict';\n\n  var indexes = [];\n  var seenPrefix = {};\n\n  var collectIndexes = function(schema, prefix) {\n    if (seenPrefix[prefix]) {\n      return;\n    }\n    seenPrefix[prefix] = true;\n\n    prefix = prefix || '';\n    var key, path, index, field, isObject, options, type;\n    var keys = Object.keys(schema.paths);\n\n    for (var i = 0; i < keys.length; ++i) {\n      key = keys[i];\n      path = schema.paths[key];\n\n      if (path instanceof MongooseTypes.DocumentArray) {\n        collectIndexes(path.schema, key + '.');\n      } else {\n        index = path._index;\n\n        if (false !== index && null != index) {\n          field = {};\n          isObject = utils.isObject(index);\n          options = isObject ? index : {};\n          type = 'string' == typeof index ? index :\n            isObject ? index.type :\n            false;\n\n          if (type && ~Schema.indexTypes.indexOf(type)) {\n            field[prefix + key] = type;\n          } else {\n            field[prefix + key] = 1;\n          }\n\n          delete options.type;\n          if (!('background' in options)) {\n            options.background = true;\n          }\n\n          indexes.push([field, options]);\n        }\n      }\n    }\n\n    if (prefix) {\n      fixSubIndexPaths(schema, prefix);\n    } else {\n      schema._indexes.forEach(function (index) {\n        if (!('background' in index[1])) index[1].background = true;\n      });\n      indexes = indexes.concat(schema._indexes);\n    }\n\n  };\n\n  collectIndexes(this);\n  return indexes;\n\n  /*!\n   * Checks for indexes added to subdocs using Schema.index().\n   * These indexes need their paths prefixed properly.\n   *\n   * schema._indexes = [ [indexObj, options], [indexObj, options] ..]\n   */\n\n  function fixSubIndexPaths (schema, prefix) {\n    var subindexes = schema._indexes\n      , len = subindexes.length\n      , indexObj\n      , newindex\n      , klen\n      , keys\n      , key\n      , i = 0\n      , j\n\n    for (i = 0; i < len; ++i) {\n      indexObj = subindexes[i][0];\n      keys = Object.keys(indexObj);\n      klen = keys.length;\n      newindex = {};\n\n      // use forward iteration, order matters\n      for (j = 0; j < klen; ++j) {\n        key = keys[j];\n        newindex[prefix + key] = indexObj[key];\n      }\n\n      indexes.push([newindex, subindexes[i][1]]);\n    }\n  }\n}\n\n/**\n * Creates a virtual type with the given name.\n *\n * @param {String} name\n * @param {Object} [options]\n * @return {VirtualType}\n */\n\nSchema.prototype.virtual = function (name, options) {\n  var virtuals = this.virtuals;\n  var parts = name.split('.');\n  return virtuals[name] = parts.reduce(function (mem, part, i) {\n    mem[part] || (mem[part] = (i === parts.length-1)\n                            ? new VirtualType(options, name)\n                            : {});\n    return mem[part];\n  }, this.tree);\n};\n\n/**\n * Returns the virtual type with the given `name`.\n *\n * @param {String} name\n * @return {VirtualType}\n */\n\nSchema.prototype.virtualpath = function (name) {\n  return this.virtuals[name];\n};\n\n/*!\n * Module exports.\n */\n\nmodule.exports = exports = Schema;\n\n// require down here because of reference issues\n\n/**\n * The various built-in Mongoose Schema Types.\n *\n * ####Example:\n *\n *     var mongoose = require('mongoose');\n *     var ObjectId = mongoose.Schema.Types.ObjectId;\n *\n * ####Types:\n *\n * - [String](#schema-string-js)\n * - [Number](#schema-number-js)\n * - [Boolean](#schema-boolean-js) | Bool\n * - [Array](#schema-array-js)\n * - [Buffer](#schema-buffer-js)\n * - [Date](#schema-date-js)\n * - [ObjectId](#schema-objectid-js) | Oid\n * - [Mixed](#schema-mixed-js)\n *\n * Using this exposed access to the `Mixed` SchemaType, we can use them in our schema.\n *\n *     var Mixed = mongoose.Schema.Types.Mixed;\n *     new mongoose.Schema({ _user: Mixed })\n *\n * @api public\n */\n\nSchema.Types = MongooseTypes = require('./schema/index');\n\n/*!\n * ignore\n */\n\nvar ObjectId = exports.ObjectId = MongooseTypes.ObjectId;\n"]}