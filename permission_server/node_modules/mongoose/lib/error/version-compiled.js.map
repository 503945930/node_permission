{"version":3,"sources":["version.js"],"names":[],"mappings":";;;;;;;AAKA,IAAI,aAAa,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC;;;;;;;;;AAS3C,SAAS,YAAY,GAAI;AACvB,eAAa,CAAC,IAAI,CAAC,IAAI,EAAE,6BAA6B,CAAC,CAAC;AACxD,OAAK,CAAC,iBAAiB,IAAI,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,SAAS,CAAC,MAAM,CAAC,CAAC;AAC3E,MAAI,CAAC,IAAI,GAAG,cAAc,CAAC;CAC5B,CAAC;;;;;;AAMF,YAAY,CAAC,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;AAChE,YAAY,CAAC,SAAS,CAAC,WAAW,GAAG,aAAa,CAAC;;;;;;AAMnD,MAAM,CAAC,OAAO,GAAG,YAAY,CAAC","file":"version-compiled.js","sourcesContent":["\n/*!\n * Module dependencies.\n */\n\nvar MongooseError = require('../error.js');\n\n/**\n * Version Error constructor.\n *\n * @inherits MongooseError\n * @api private\n */\n\nfunction VersionError () {\n  MongooseError.call(this, 'No matching document found.');\n  Error.captureStackTrace && Error.captureStackTrace(this, arguments.callee);\n  this.name = 'VersionError';\n};\n\n/*!\n * Inherits from MongooseError.\n */\n\nVersionError.prototype = Object.create(MongooseError.prototype);\nVersionError.prototype.constructor = MongooseError;\n\n/*!\n * exports\n */\n\nmodule.exports = VersionError;\n"]}