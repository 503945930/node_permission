{"version":3,"sources":["validation.js"],"names":[],"mappings":";;;;;;;AAKA,IAAI,aAAa,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC;;;;;;;;;;AAU3C,SAAS,eAAe,CAAE,QAAQ,EAAE;AAClC,MAAI,QAAQ,IAAI,QAAQ,CAAC,WAAW,CAAC,IAAI,KAAK,OAAO,EAAE;AACrD,iBAAa,CAAC,IAAI,CAAC,IAAI,EAAE,QAAQ,CAAC,WAAW,CAAC,SAAS,GAAG,oBAAoB,CAAC,CAAC;GACjF,MAAM;AACL,iBAAa,CAAC,IAAI,CAAC,IAAI,EAAE,mBAAmB,CAAC,CAAC;GAC/C;AACD,OAAK,CAAC,iBAAiB,IAAI,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,SAAS,CAAC,MAAM,CAAC,CAAC;AAC3E,MAAI,CAAC,IAAI,GAAG,iBAAiB,CAAC;AAC9B,MAAI,CAAC,MAAM,GAAG,EAAE,CAAC;AACjB,MAAI,QAAQ,EAAE;AACZ,YAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;GAC/B;CACF;;;;;;AAMD,eAAe,CAAC,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;AACnE,eAAe,CAAC,SAAS,CAAC,WAAW,GAAG,aAAa,CAAC;;;;;;AAOtD,eAAe,CAAC,SAAS,CAAC,QAAQ,GAAG,YAAY;AAC/C,MAAI,GAAG,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AAC3B,MAAI,IAAI,GAAG,EAAE,CAAC;;AAEd,QAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,UAAU,GAAG,EAAE;AAC9C,QAAI,IAAI,IAAI,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,OAAO;AACrC,QAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;GACrC,EAAE,IAAI,CAAC,CAAC;;AAET,SAAO,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;CAC9B,CAAC;;;;;;AAMF,MAAM,CAAC,OAAO,GAAG,OAAO,GAAG,eAAe,CAAC","file":"validation-compiled.js","sourcesContent":["\n/*!\n * Module requirements\n */\n\nvar MongooseError = require('../error.js');\n\n/**\n * Document Validation Error\n *\n * @api private\n * @param {Document} instance\n * @inherits MongooseError\n */\n\nfunction ValidationError (instance) {\n  if (instance && instance.constructor.name === 'model') {\n    MongooseError.call(this, instance.constructor.modelName + \" validation failed\");\n  } else {\n    MongooseError.call(this, \"Validation failed\");\n  }\n  Error.captureStackTrace && Error.captureStackTrace(this, arguments.callee);\n  this.name = 'ValidationError';\n  this.errors = {};\n  if (instance) {\n    instance.errors = this.errors;\n  }\n}\n\n/*!\n * Inherits from MongooseError.\n */\n\nValidationError.prototype = Object.create(MongooseError.prototype);\nValidationError.prototype.constructor = MongooseError;\n\n\n/**\n * Console.log helper\n */\n\nValidationError.prototype.toString = function () {\n  var ret = this.name + ': ';\n  var msgs = [];\n\n  Object.keys(this.errors).forEach(function (key) {\n    if (this == this.errors[key]) return;\n    msgs.push(String(this.errors[key]));\n  }, this);\n\n  return ret + msgs.join(', ');\n};\n\n/*!\n * Module exports\n */\n\nmodule.exports = exports = ValidationError;\n"]}