{"version":3,"sources":["divergentArray.js"],"names":[],"mappings":";;;;;;;AAKA,IAAI,aAAa,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC;;;;;;;;AAQ3C,SAAS,mBAAmB,CAAE,KAAK,EAAE;AACnC,MAAI,GAAG,GAAG,gEAAgE,GAChE,uDAAuD,GACvD,iEAAiE,GACjE,gEAAgE,GAChE,mDAAmD,GACnD,8CAA8C,GAC9C,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,GAChC,oDAAoD,CAAA;;;AAG9D,eAAa,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;AAC9B,OAAK,CAAC,iBAAiB,IAAI,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,SAAS,CAAC,MAAM,CAAC,CAAC;AAC3E,MAAI,CAAC,IAAI,GAAG,qBAAqB,CAAC;CACnC,CAAC;;;;;;AAMF,mBAAmB,CAAC,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;AACvE,mBAAmB,CAAC,SAAS,CAAC,WAAW,GAAG,aAAa,CAAC;;;;;;AAO1D,MAAM,CAAC,OAAO,GAAG,mBAAmB,CAAC","file":"divergentArray-compiled.js","sourcesContent":["\n/*!\n * Module dependencies.\n */\n\nvar MongooseError = require('../error.js');\n\n/*!\n * DivergentArrayError constructor.\n *\n * @inherits MongooseError\n */\n\nfunction DivergentArrayError (paths) {\n  var msg = 'For your own good, using `document.save()` to update an array '\n          + 'which was selected using an $elemMatch projection OR '\n          + 'populated using skip, limit, query conditions, or exclusion of '\n          + 'the _id field when the operation results in a $pop or $set of '\n          + 'the entire array is not supported. The following '\n          + 'path(s) would have been modified unsafely:\\n'\n          + '  ' + paths.join('\\n  ') + '\\n'\n          + 'Use Model.update() to update these arrays instead.'\n          // TODO write up a docs page (FAQ) and link to it\n\n  MongooseError.call(this, msg);\n  Error.captureStackTrace && Error.captureStackTrace(this, arguments.callee);\n  this.name = 'DivergentArrayError';\n};\n\n/*!\n * Inherits from MongooseError.\n */\n\nDivergentArrayError.prototype = Object.create(MongooseError.prototype);\nDivergentArrayError.prototype.constructor = MongooseError;\n\n\n/*!\n * exports\n */\n\nmodule.exports = DivergentArrayError;\n"]}