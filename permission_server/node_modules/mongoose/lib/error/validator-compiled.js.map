{"version":3,"sources":["validator.js"],"names":[],"mappings":";;;;;;AAIA,IAAI,aAAa,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC;AAC3C,IAAI,aAAa,GAAG,aAAa,CAAC,QAAQ,CAAC;;;;;;;;;;AAU3C,SAAS,cAAc,CAAE,UAAU,EAAE;AACnC,MAAI,GAAG,GAAG,UAAU,CAAC,OAAO,CAAC;AAC7B,MAAI,CAAC,GAAG,EAAE;AACR,OAAG,GAAG,aAAa,CAAC,OAAO,WAAQ,CAAC;GACrC;;AAED,MAAI,CAAC,UAAU,GAAG,UAAU,CAAC;AAC7B,MAAI,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,EAAE,UAAU,CAAC,CAAC;AAClD,eAAa,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;AAClC,OAAK,CAAC,iBAAiB,IAAI,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,SAAS,CAAC,MAAM,CAAC,CAAC;AAC3E,MAAI,CAAC,IAAI,GAAG,gBAAgB,CAAC;AAC7B,MAAI,CAAC,IAAI,GAAG,UAAU,CAAC,IAAI,CAAC;AAC5B,MAAI,CAAC,IAAI,GAAG,UAAU,CAAC,IAAI,CAAC;AAC5B,MAAI,CAAC,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC;CAC/B,CAAC;;;;;;AAMF,cAAc,CAAC,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;AAClE,cAAc,CAAC,SAAS,CAAC,WAAW,GAAG,aAAa,CAAC;;;;;;AAMrD,cAAc,CAAC,SAAS,CAAC,aAAa,GAAG,UAAU,GAAG,EAAE,UAAU,EAAE;AAClE,MAAI,aAAa,GAAG,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AAC5C,OAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,aAAa,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;AAC7C,QAAI,YAAY,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC;AACpC,QAAI,YAAY,KAAK,SAAS,EAAE;AAC9B,eAAS;KACV;AACD,OAAG,GAAG,GAAG,CAAC,OAAO,CAAC,GAAG,GAAG,YAAY,CAAC,WAAW,EAAE,GAAG,GAAG,EAAE,UAAU,CAAC,YAAY,CAAC,CAAC,CAAC;GACrF;AACD,SAAO,GAAG,CAAC;CACZ,CAAC;;;;;;AAMF,cAAc,CAAC,SAAS,CAAC,QAAQ,GAAG,YAAY;AAC9C,SAAO,IAAI,CAAC,OAAO,CAAC;CACrB,CAAA;;;;;;AAMD,MAAM,CAAC,OAAO,GAAG,cAAc,CAAC","file":"validator-compiled.js","sourcesContent":["/*!\n * Module dependencies.\n */\n\nvar MongooseError = require('../error.js');\nvar errorMessages = MongooseError.messages;\n\n/**\n * Schema validator error\n *\n * @param {Object} properties\n * @inherits MongooseError\n * @api private\n */\n\nfunction ValidatorError (properties) {\n  var msg = properties.message;\n  if (!msg) {\n    msg = errorMessages.general.default;\n  }\n\n  this.properties = properties;\n  var message = this.formatMessage(msg, properties);\n  MongooseError.call(this, message);\n  Error.captureStackTrace && Error.captureStackTrace(this, arguments.callee);\n  this.name = 'ValidatorError';\n  this.kind = properties.type;\n  this.path = properties.path;\n  this.value = properties.value;\n};\n\n/*!\n * Inherits from MongooseError\n */\n\nValidatorError.prototype = Object.create(MongooseError.prototype);\nValidatorError.prototype.constructor = MongooseError;\n\n/*!\n * Formats error messages\n */\n\nValidatorError.prototype.formatMessage = function (msg, properties) {\n  var propertyNames = Object.keys(properties);\n  for (var i = 0; i < propertyNames.length; ++i) {\n    var propertyName = propertyNames[i];\n    if (propertyName === 'message') {\n      continue;\n    }\n    msg = msg.replace('{' + propertyName.toUpperCase() + '}', properties[propertyName]);\n  }\n  return msg;\n};\n\n/*!\n * toString helper\n */\n\nValidatorError.prototype.toString = function () {\n  return this.message;\n}\n\n/*!\n * exports\n */\n\nmodule.exports = ValidatorError;\n"]}