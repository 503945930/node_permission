{"version":3,"sources":["updateValidators.js"],"names":[],"mappings":";;;;;;AAIA,IAAI,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;AAC7B,IAAI,eAAe,GAAG,OAAO,CAAC,wBAAwB,CAAC,CAAC;AACxD,IAAI,QAAQ,GAAG,OAAO,CAAC,mBAAmB,CAAC,CAAC;;;;;;;;;;;;;;AAc5C,MAAM,CAAC,OAAO,GAAG,UAAS,KAAK,EAAE,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE;AAC3D,MAAI,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,SAAS,IAAI,EAAE,CAAC,CAAC;AACxC,MAAI,WAAW,GAAG,EAAE,CAAC;AACrB,MAAI,aAAa,GAAG,EAAE,CAAC;AACvB,MAAI,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC;AAC1B,MAAI,eAAe,GAAG,KAAK,CAAC;AAC5B,OAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,EAAE,EAAE,CAAC,EAAE;AAChC,QAAI,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;AAC7B,UAAI,IAAI,GAAG,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,UAAI,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC9B,UAAI,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAC;AAC5B,WAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,EAAE,EAAE,CAAC,EAAE;AACjC,YAAI,IAAI,CAAC,CAAC,CAAC,KAAK,MAAM,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,cAAc,EAAE;AACpD,uBAAa,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;SAC1C,MAAM,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,QAAQ,EAAE;AAC/B,uBAAa,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC;SACrC;AACD,mBAAW,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;OAC9B;AACD,qBAAe,GAAG,IAAI,CAAC;KACxB;GACF;;AAED,MAAI,CAAC,eAAe,EAAE;AACpB,iBAAa,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;AACnC,eAAW,GAAG,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;GAC1C;;AAED,MAAI,OAAO,IAAI,OAAO,CAAC,MAAM,EAAE;AAC7B,SAAK,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;AACvC,YAAQ,GAAG,IAAI,CAAC,MAAM,CAAC;AACvB,SAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,EAAE,EAAE,CAAC,EAAE;AACjC,UAAI,OAAO,KAAK,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,QAAQ,EAAE;AACnD,YAAI,aAAa,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7D,YAAI,gBAAgB,GAAG,aAAa,CAAC,MAAM,CAAC;AAC5C,YAAI,YAAY,GAAG,KAAK,CAAC;AACzB,aAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,gBAAgB,EAAE,EAAE,CAAC,EAAE;AACzC,cAAI,aAAa,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;AACtC,wBAAY,GAAG,IAAI,CAAC;AACpB,kBAAM;WACP;SACF;AACD,YAAI,YAAY,EAAE;AAChB,mBAAS;SACV;OACF;AACD,iBAAW,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;KAC9B;;AAED,QAAI,OAAO,CAAC,mBAAmB,EAAE;AAC/B,YAAM,CAAC,QAAQ,CAAC,UAAS,IAAI,EAAE,UAAU,EAAE;AACzC,YAAI,IAAI,KAAK,KAAK,EAAE;;AAElB,iBAAO;SACR;AACD,YAAI,GAAG,GAAG,UAAU,CAAC,UAAU,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;AAC5C,YAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,OAAO,GAAG,KAAK,WAAW,EAAE;AACpD,mBAAS,CAAC,YAAY,GAAG,SAAS,CAAC,YAAY,IAAI,EAAE,CAAC;AACtD,mBAAS,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC;AACnC,uBAAa,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC;SAC3B;OACF,CAAC,CAAC;KACJ;GACF;;AAED,MAAI,OAAO,GAAG,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;AACzC,MAAI,UAAU,GAAG,OAAO,CAAC,MAAM,CAAC;AAChC,MAAI,mBAAmB,GAAG,EAAE,CAAC;AAC7B,MAAI,gBAAgB,GAAG,EAAE,CAAC;AAC1B,OAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,EAAE,EAAE,CAAC,EAAE;AACnC,KAAC,UAAS,CAAC,EAAE;AACX,UAAI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE;AAC3B,2BAAmB,CAAC,IAAI,CAAC,UAAS,QAAQ,EAAE;AAC1C,gBAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,CAChC,aAAa,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EACzB,UAAS,GAAG,EAAE;AACZ,gBAAI,GAAG,EAAE;AACP,8BAAgB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;aAC5B;AACD,oBAAQ,CAAC,IAAI,CAAC,CAAC;WAChB,EACD,IAAI,CAAC,CAAC;SACT,CAAC,CAAC;OACJ;KACF,CAAA,CAAE,CAAC,CAAC,CAAC;GACP;;AAED,SAAO,UAAS,QAAQ,EAAE;AACxB,SAAK,CAAC,QAAQ,CAAC,mBAAmB,EAAE,YAAW;AAC7C,UAAI,gBAAgB,CAAC,MAAM,EAAE;AAC3B,YAAI,GAAG,GAAG,IAAI,eAAe,CAAC,IAAI,CAAC,CAAC;AACpC,aAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,gBAAgB,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;AAChD,aAAG,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,gBAAgB,CAAC,CAAC,CAAC,CAAC;SAC5D;AACD,eAAO,QAAQ,CAAC,GAAG,CAAC,CAAC;OACtB;AACD,cAAQ,CAAC,IAAI,CAAC,CAAC;KAChB,CAAC,CAAC;GACJ,CAAC;CACH,CAAC;;AAEF,SAAS,OAAO,CAAC,MAAM,EAAE,IAAI,EAAE;AAC7B,MAAI,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC/B,MAAI,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC;AAC1B,MAAI,MAAM,GAAG,EAAE,CAAC;AAChB,MAAI,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,EAAE,CAAC;;AAE9B,OAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,EAAE,EAAE,CAAC,EAAE;AAChC,QAAI,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;AAClB,QAAI,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;AACtB,QAAI,aAAa,CAAC,GAAG,CAAC,EAAE;AACtB,UAAI,IAAI,GAAG,OAAO,CAAC,GAAG,EAAE,IAAI,GAAG,GAAG,CAAC,CAAC;AACpC,WAAK,IAAI,CAAC,IAAI,IAAI,EAAE;AAClB,cAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;OACrB;KACF,MAAM;AACL,YAAM,CAAC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC;KAC1B;GACF;;AAED,SAAO,MAAM,CAAC;CACf;;AAED,SAAS,aAAa,CAAC,GAAG,EAAE;AAC1B,SAAO,GAAG,IAAI,OAAO,GAAG,KAAK,QAAQ,IAAI,EAAE,GAAG,YAAY,QAAQ,CAAA,AAAC,CAAC;CACrE","file":"updateValidators-compiled.js","sourcesContent":["/*!\n * Module dependencies.\n */\n\nvar async = require('async');\nvar ValidationError = require('../error/validation.js');\nvar ObjectId = require('../types/objectid');\n\n/**\n * Applies validators and defaults to update and fineOneAndUpdate operations,\n * specifically passing a null doc as `this` to validators and defaults\n *\n * @param {Query} query\n * @param {Schema} schema\n * @param {Object} castedDoc\n * @param {Object} options\n * @method runValidatorsOnUpdate\n * @api private\n */\n\nmodule.exports = function(query, schema, castedDoc, options) {\n  var keys = Object.keys(castedDoc || {});\n  var updatedKeys = {};\n  var updatedValues = {};\n  var numKeys = keys.length;\n  var hasDollarUpdate = false;\n  for (var i = 0; i < numKeys; ++i) {\n    if (keys[i].charAt(0) === '$') {\n      var flat = flatten(castedDoc[keys[i]]);\n      var paths = Object.keys(flat);\n      var numPaths = paths.length;\n      for (var j = 0; j < numPaths; ++j) {\n        if (keys[i] === '$set' || keys[i] === '$setOnInsert') {\n          updatedValues[paths[j]] = flat[paths[j]];\n        } else if (keys[i] === '$unset') {\n          updatedValues[paths[j]] = undefined;\n        }\n        updatedKeys[paths[j]] = true;\n      }\n      hasDollarUpdate = true;\n    }\n  }\n\n  if (!hasDollarUpdate) {\n    updatedValues = flatten(castedDoc);\n    updatedKeys = Object.keys(updatedValues);\n  }\n\n  if (options && options.upsert) {\n    paths = Object.keys(query._conditions);\n    numPaths = keys.length;\n    for (var i = 0; i < numPaths; ++i) {\n      if (typeof query._conditions[paths[i]] === 'Object') {\n        var conditionKeys = Object.keys(query._conditions[paths[i]]);\n        var numConditionKeys = conditionKeys.length;\n        var hasDollarKey = false;\n        for (var j = 0; j < numConditionKeys; ++j) {\n          if (conditionKeys[j].charAt(0) === '$') {\n            hasDollarKey = true;\n            break;\n          }\n        }\n        if (hasDollarKey) {\n          continue;\n        }\n      }\n      updatedKeys[paths[i]] = true;\n    }\n\n    if (options.setDefaultsOnInsert) {\n      schema.eachPath(function(path, schemaType) {\n        if (path === '_id') {\n          // Ignore _id for now because it causes bugs in 2.4\n          return;\n        }\n        var def = schemaType.getDefault(null, true);\n        if (!updatedKeys[path] && typeof def !== 'undefined') {\n          castedDoc.$setOnInsert = castedDoc.$setOnInsert || {};\n          castedDoc.$setOnInsert[path] = def;\n          updatedValues[path] = def;\n        }\n      });\n    }\n  }\n\n  var updates = Object.keys(updatedValues);\n  var numUpdates = updates.length;\n  var validatorsToExecute = [];\n  var validationErrors = [];\n  for (var i = 0; i < numUpdates; ++i) {\n    (function(i) {\n      if (schema.path(updates[i])) {\n        validatorsToExecute.push(function(callback) {\n          schema.path(updates[i]).doValidate(\n            updatedValues[updates[i]],\n            function(err) {\n              if (err) {\n                validationErrors.push(err);\n              }\n              callback(null);\n            },\n            null);\n        });\n      }\n    })(i);\n  }\n\n  return function(callback) {\n    async.parallel(validatorsToExecute, function() {\n      if (validationErrors.length) {\n        var err = new ValidationError(null);\n        for (var i = 0; i < validationErrors.length; ++i) {\n          err.errors[validationErrors[i].path] = validationErrors[i];\n        }\n        return callback(err);\n      }\n      callback(null);\n    });\n  };\n};\n\nfunction flatten(update, path) {\n  var keys = Object.keys(update);\n  var numKeys = keys.length;\n  var result = {};\n  path = path ? path + '.' : '';\n\n  for (var i = 0; i < numKeys; ++i) {\n    var key = keys[i];\n    var val = update[key];\n    if (shouldFlatten(val)) {\n      var flat = flatten(val, path + key);\n      for (var k in flat) {\n        result[k] = flat[k];\n      }\n    } else {\n      result[path + key] = val;\n    }\n  }\n\n  return result;\n}\n\nfunction shouldFlatten(val) {\n  return val && typeof val === 'object' && !(val instanceof ObjectId);\n}\n"]}