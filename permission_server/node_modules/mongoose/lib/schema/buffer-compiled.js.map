{"version":3,"sources":["buffer.js"],"names":[],"mappings":"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","file":"buffer-compiled.js","sourcesContent":["/*!\n * Module dependencies.\n */\n\nvar utils = require('../utils');\n\nvar MongooseBuffer = require('../types').Buffer;\nvar SchemaType = require('../schematype');\n\nvar Binary = MongooseBuffer.Binary;\nvar CastError = SchemaType.CastError;\nvar Document;\n\n/**\n * Buffer SchemaType constructor\n *\n * @param {String} key\n * @param {SchemaType} cast\n * @inherits SchemaType\n * @api private\n */\n\nfunction SchemaBuffer (key, options) {\n  SchemaType.call(this, key, options, 'Buffer');\n}\n\n/**\n * This schema type's name, to defend against minifiers that mangle\n * function names.\n *\n * @api private\n */\nSchemaBuffer.schemaName = 'Buffer';\n\n/*!\n * Inherits from SchemaType.\n */\nSchemaBuffer.prototype = Object.create( SchemaType.prototype );\nSchemaBuffer.prototype.constructor = SchemaBuffer;\n\n/**\n * Check required\n *\n * @api private\n */\n\nSchemaBuffer.prototype.checkRequired = function (value, doc) {\n  if (SchemaType._isRef(this, value, doc, true)) {\n    return null != value;\n  } else {\n    return !!(value && value.length);\n  }\n};\n\n/**\n * Casts contents\n *\n * @param {Object} value\n * @param {Document} doc document that triggers the casting\n * @param {Boolean} init\n * @api private\n */\n\nSchemaBuffer.prototype.cast = function (value, doc, init) {\n  if (SchemaType._isRef(this, value, doc, init)) {\n    // wait! we may need to cast this to a document\n\n    if (null == value) {\n      return value;\n    }\n\n    // lazy load\n    Document || (Document = require('./../document'));\n\n    if (value instanceof Document) {\n      value.$__.wasPopulated = true;\n      return value;\n    }\n\n    // setting a populated path\n    if (Buffer.isBuffer(value)) {\n      return value;\n    } else if (!utils.isObject(value)) {\n      throw new CastError('buffer', value, this.path);\n    }\n\n    // Handle the case where user directly sets a populated\n    // path to a plain object; cast to the Model used in\n    // the population query.\n    var path = doc.$__fullPath(this.path);\n    var owner = doc.ownerDocument ? doc.ownerDocument() : doc;\n    var pop = owner.populated(path, true);\n    var ret = new pop.options.model(value);\n    ret.$__.wasPopulated = true;\n    return ret;\n  }\n\n  // documents\n  if (value && value._id) {\n    value = value._id;\n  }\n\n  if (value && value.isMongooseBuffer) {\n    return value;\n  }\n\n  if (Buffer.isBuffer(value)) {\n    if (!value || !value.isMongooseBuffer) {\n      value = new MongooseBuffer(value, [this.path, doc]);\n    }\n\n    return value;\n  } else if (value instanceof Binary) {\n    var ret = new MongooseBuffer(value.value(true), [this.path, doc]);\n    if (typeof value.sub_type !== 'number') {\n      throw new CastError('buffer', value, this.path);\n    }\n    ret._subtype = value.sub_type;\n    return ret;\n  }\n\n  if (null === value) return value;\n\n  var type = typeof value;\n  if ('string' == type || 'number' == type || Array.isArray(value)) {\n    var ret = new MongooseBuffer(value, [this.path, doc]);\n    return ret;\n  }\n\n  throw new CastError('buffer', value, this.path);\n};\n\n/*!\n * ignore\n */\nfunction handleSingle (val) {\n  return this.castForQuery(val);\n}\n\nfunction handleArray (val) {\n  var self = this;\n  return val.map( function (m) {\n    return self.castForQuery(m);\n  });\n}\n\nSchemaBuffer.prototype.$conditionalHandlers =\n  utils.options(SchemaType.prototype.$conditionalHandlers, {\n    '$gt' : handleSingle,\n    '$gte': handleSingle,\n    '$in' : handleArray,\n    '$lt' : handleSingle,\n    '$lte': handleSingle,\n    '$ne' : handleSingle,\n    '$nin': handleArray\n  });\n\n/**\n * Casts contents for queries.\n *\n * @param {String} $conditional\n * @param {any} [value]\n * @api private\n */\n\nSchemaBuffer.prototype.castForQuery = function ($conditional, val) {\n  var handler;\n  if (arguments.length === 2) {\n    handler = this.$conditionalHandlers[$conditional];\n    if (!handler)\n      throw new Error(\"Can't use \" + $conditional + \" with Buffer.\");\n    return handler.call(this, val);\n  } else {\n    val = $conditional;\n    return this.cast(val).toObject();\n  }\n};\n\n/*!\n * Module exports.\n */\n\nmodule.exports = SchemaBuffer;\n"]}