{"version":3,"sources":["objectid.js"],"names":[],"mappings":";;;;;;AAIA,IAAI,UAAU,GAAG,OAAO,CAAC,eAAe,CAAC;IACrC,SAAS,GAAG,UAAU,CAAC,SAAS;IAChC,GAAG,GAAG,OAAO,CAAC,mBAAmB,CAAC;IAClC,KAAK,GAAG,OAAO,CAAC,UAAU,CAAC;IAC3B,QAAQ,CAAA;;;;;;;;;;;AAWZ,SAAS,QAAQ,CAAE,GAAG,EAAE,OAAO,EAAE;AAC/B,YAAU,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,EAAE,OAAO,EAAE,UAAU,CAAC,CAAC;CACjD;;;;;;;;AAQD,QAAQ,CAAC,UAAU,GAAG,UAAU,CAAC;;;;;AAKjC,QAAQ,CAAC,SAAS,GAAG,MAAM,CAAC,MAAM,CAAE,UAAU,CAAC,SAAS,CAAE,CAAC;AAC3D,QAAQ,CAAC,SAAS,CAAC,WAAW,GAAG,QAAQ,CAAC;;;;;;;;;AAS1C,QAAQ,CAAC,SAAS,CAAC,IAAI,GAAG,UAAU,MAAM,EAAE;AAC1C,MAAI,MAAM,EAAE;AACV,QAAI,WAAQ,CAAC,SAAS,CAAC,CAAC;AACxB,QAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAA;GAClB;;AAED,SAAO,IAAI,CAAC;CACb,CAAC;;;;;;;;AAQF,QAAQ,CAAC,SAAS,CAAC,aAAa,GAAG,SAAS,aAAa,CAAE,KAAK,EAAE,GAAG,EAAE;AACrE,MAAI,UAAU,CAAC,MAAM,CAAC,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,CAAC,EAAE;AAC7C,WAAO,IAAI,IAAI,KAAK,CAAC;GACtB,MAAM;AACL,WAAO,KAAK,YAAY,GAAG,CAAC;GAC7B;CACF,CAAC;;;;;;;;;;;AAWF,QAAQ,CAAC,SAAS,CAAC,IAAI,GAAG,UAAU,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE;AACpD,MAAI,UAAU,CAAC,MAAM,CAAC,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,CAAC,EAAE;;;AAG7C,QAAI,IAAI,IAAI,KAAK,EAAE;AACjB,aAAO,KAAK,CAAC;KACd;;;AAGD,YAAQ,KAAK,QAAQ,GAAG,OAAO,CAAC,eAAe,CAAC,CAAA,AAAC,CAAC;;AAElD,QAAI,KAAK,YAAY,QAAQ,EAAE;AAC7B,WAAK,CAAC,GAAG,CAAC,YAAY,GAAG,IAAI,CAAC;AAC9B,aAAO,KAAK,CAAC;KACd;;;AAGD,QAAI,KAAK,YAAY,GAAG,EAAE;AACxB,aAAO,KAAK,CAAC;KACd,MAAM,IAAI,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE;AAC3D,YAAM,IAAI,SAAS,CAAC,UAAU,EAAE,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;KACnD;;;;;AAKD,QAAI,IAAI,GAAG,GAAG,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACtC,QAAI,KAAK,GAAG,GAAG,CAAC,aAAa,GAAG,GAAG,CAAC,aAAa,EAAE,GAAG,GAAG,CAAC;AAC1D,QAAI,GAAG,GAAG,KAAK,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;AACtC,QAAI,GAAG,GAAG,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;AACvC,OAAG,CAAC,GAAG,CAAC,YAAY,GAAG,IAAI,CAAC;AAC5B,WAAO,GAAG,CAAC;GACZ;;;AAGD,MAAI,KAAK,IAAI,IAAI,EAAE,OAAO,KAAK,CAAC;;AAEhC,MAAI,KAAK,YAAY,GAAG,EACtB,OAAO,KAAK,CAAC;;AAEf,MAAI,KAAK,CAAC,GAAG,EAAE;AACb,QAAI,KAAK,CAAC,GAAG,YAAY,GAAG,EAAE;AAC5B,aAAO,KAAK,CAAC,GAAG,CAAC;KAClB;AACD,QAAI,KAAK,CAAC,GAAG,CAAC,QAAQ,YAAY,QAAQ,EAAE;AAC1C,UAAI;AACF,eAAO,GAAG,CAAC,mBAAmB,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC;OACtD,CAAC,OAAM,CAAC,EAAE,EAAE;KACd;GACF;;AAED,MAAI,KAAK,CAAC,QAAQ,YAAY,QAAQ,EAAE;AACtC,QAAI;AACF,aAAO,GAAG,CAAC,mBAAmB,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC;KAClD,CAAC,OAAO,GAAG,EAAE;AACZ,YAAM,IAAI,SAAS,CAAC,UAAU,EAAE,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;KACnD;GACF;;AAED,QAAM,IAAI,SAAS,CAAC,UAAU,EAAE,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;CACnD,CAAC;;;;;;AAMF,SAAS,YAAY,CAAE,GAAG,EAAE;AAC1B,SAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;CACvB;;AAED,SAAS,WAAW,CAAE,GAAG,EAAE;AACzB,MAAI,IAAI,GAAG,IAAI,CAAC;AAChB,SAAO,GAAG,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE;AAC1B,WAAO,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;GACrB,CAAC,CAAC;CACJ;;AAED,QAAQ,CAAC,SAAS,CAAC,oBAAoB,GACrC,KAAK,CAAC,OAAO,CAAC,UAAU,CAAC,SAAS,CAAC,oBAAoB,EAAE;AACvD,QAAM,EAAE,WAAW;AACnB,OAAK,EAAE,YAAY;AACnB,QAAM,EAAE,YAAY;AACpB,OAAK,EAAE,WAAW;AAClB,OAAK,EAAE,YAAY;AACnB,QAAM,EAAE,YAAY;AACpB,OAAK,EAAE,YAAY;AACnB,QAAM,EAAE,WAAW;CACpB,CAAC,CAAC;;;;;;;;;;AAUL,QAAQ,CAAC,SAAS,CAAC,YAAY,GAAG,UAAU,YAAY,EAAE,GAAG,EAAE;AAC7D,MAAI,OAAO,CAAC;AACZ,MAAI,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE;AAC1B,WAAO,GAAG,IAAI,CAAC,oBAAoB,CAAC,YAAY,CAAC,CAAC;AAClD,QAAI,CAAC,OAAO,EACV,MAAM,IAAI,KAAK,CAAC,YAAY,GAAG,YAAY,GAAG,iBAAiB,CAAC,CAAC;AACnE,WAAO,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;GAChC,MAAM;AACL,WAAO,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;GAChC;CACF,CAAC;;;;;;AAMF,SAAS,SAAS,GAAI;AACpB,SAAO,IAAI,GAAG,EAAE,CAAC;CAClB,CAAC;;AAEF,SAAS,OAAO,CAAE,CAAC,EAAE;AACnB,MAAI,CAAC,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC;AACpB,SAAO,CAAC,CAAC;CACV;;;;;;AAMD,MAAM,CAAC,OAAO,GAAG,QAAQ,CAAC","file":"objectid-compiled.js","sourcesContent":["/*!\n * Module dependencies.\n */\n\nvar SchemaType = require('../schematype')\n  , CastError = SchemaType.CastError\n  , oid = require('../types/objectid')\n  , utils = require('../utils')\n  , Document\n\n/**\n * ObjectId SchemaType constructor.\n *\n * @param {String} key\n * @param {Object} options\n * @inherits SchemaType\n * @api private\n */\n\nfunction ObjectId (key, options) {\n  SchemaType.call(this, key, options, 'ObjectID');\n}\n\n/**\n * This schema type's name, to defend against minifiers that mangle\n * function names.\n *\n * @api private\n */\nObjectId.schemaName = 'ObjectId';\n\n/*!\n * Inherits from SchemaType.\n */\nObjectId.prototype = Object.create( SchemaType.prototype );\nObjectId.prototype.constructor = ObjectId;\n\n/**\n * Adds an auto-generated ObjectId default if turnOn is true.\n * @param {Boolean} turnOn auto generated ObjectId defaults\n * @api public\n * @return {SchemaType} this\n */\n\nObjectId.prototype.auto = function (turnOn) {\n  if (turnOn) {\n    this.default(defaultId);\n    this.set(resetId)\n  }\n\n  return this;\n};\n\n/**\n * Check required\n *\n * @api private\n */\n\nObjectId.prototype.checkRequired = function checkRequired (value, doc) {\n  if (SchemaType._isRef(this, value, doc, true)) {\n    return null != value;\n  } else {\n    return value instanceof oid;\n  }\n};\n\n/**\n * Casts to ObjectId\n *\n * @param {Object} value\n * @param {Object} doc\n * @param {Boolean} init whether this is an initialization cast\n * @api private\n */\n\nObjectId.prototype.cast = function (value, doc, init) {\n  if (SchemaType._isRef(this, value, doc, init)) {\n    // wait! we may need to cast this to a document\n\n    if (null == value) {\n      return value;\n    }\n\n    // lazy load\n    Document || (Document = require('./../document'));\n\n    if (value instanceof Document) {\n      value.$__.wasPopulated = true;\n      return value;\n    }\n\n    // setting a populated path\n    if (value instanceof oid) {\n      return value;\n    } else if (Buffer.isBuffer(value) || !utils.isObject(value)) {\n      throw new CastError('ObjectId', value, this.path);\n    }\n\n    // Handle the case where user directly sets a populated\n    // path to a plain object; cast to the Model used in\n    // the population query.\n    var path = doc.$__fullPath(this.path);\n    var owner = doc.ownerDocument ? doc.ownerDocument() : doc;\n    var pop = owner.populated(path, true);\n    var ret = new pop.options.model(value);\n    ret.$__.wasPopulated = true;\n    return ret;\n  }\n\n  // If null or undefined\n  if (value == null) return value;\n\n  if (value instanceof oid)\n    return value;\n\n  if (value._id) {\n    if (value._id instanceof oid) {\n      return value._id;\n    }\n    if (value._id.toString instanceof Function) {\n      try {\n        return oid.createFromHexString(value._id.toString());\n      } catch(e) {}\n    }\n  }\n\n  if (value.toString instanceof Function) {\n    try {\n      return oid.createFromHexString(value.toString());\n    } catch (err) {\n      throw new CastError('ObjectId', value, this.path);\n    }\n  }\n\n  throw new CastError('ObjectId', value, this.path);\n};\n\n/*!\n * ignore\n */\n\nfunction handleSingle (val) {\n  return this.cast(val);\n}\n\nfunction handleArray (val) {\n  var self = this;\n  return val.map(function (m) {\n    return self.cast(m);\n  });\n}\n\nObjectId.prototype.$conditionalHandlers =\n  utils.options(SchemaType.prototype.$conditionalHandlers, {\n    '$all': handleArray,\n    '$gt': handleSingle,\n    '$gte': handleSingle,\n    '$in': handleArray,\n    '$lt': handleSingle,\n    '$lte': handleSingle,\n    '$ne': handleSingle,\n    '$nin': handleArray\n  });\n\n/**\n * Casts contents for queries.\n *\n * @param {String} $conditional\n * @param {any} [val]\n * @api private\n */\n\nObjectId.prototype.castForQuery = function ($conditional, val) {\n  var handler;\n  if (arguments.length === 2) {\n    handler = this.$conditionalHandlers[$conditional];\n    if (!handler)\n      throw new Error(\"Can't use \" + $conditional + \" with ObjectId.\");\n    return handler.call(this, val);\n  } else {\n    return this.cast($conditional);\n  }\n};\n\n/*!\n * ignore\n */\n\nfunction defaultId () {\n  return new oid();\n};\n\nfunction resetId (v) {\n  this.$__._id = null;\n  return v;\n}\n\n/*!\n * Module exports.\n */\n\nmodule.exports = ObjectId;\n"]}