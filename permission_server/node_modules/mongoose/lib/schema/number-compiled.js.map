{"version":3,"sources":["number.js"],"names":[],"mappings":"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","file":"number-compiled.js","sourcesContent":["/*!\n * Module requirements.\n */\n\nvar SchemaType = require('../schematype')\n  , CastError = SchemaType.CastError\n  , errorMessages = require('../error').messages\n  , utils = require('../utils')\n  , Document\n\n/**\n * Number SchemaType constructor.\n *\n * @param {String} key\n * @param {Object} options\n * @inherits SchemaType\n * @api private\n */\n\nfunction SchemaNumber (key, options) {\n  SchemaType.call(this, key, options, 'Number');\n}\n\n/**\n * This schema type's name, to defend against minifiers that mangle\n * function names.\n *\n * @api private\n */\nSchemaNumber.schemaName = 'Number';\n\n/*!\n * Inherits from SchemaType.\n */\nSchemaNumber.prototype = Object.create( SchemaType.prototype );\nSchemaNumber.prototype.constructor = SchemaNumber;\n\n/**\n * Required validator for number\n *\n * @api private\n */\n\nSchemaNumber.prototype.checkRequired = function checkRequired (value, doc) {\n  if (SchemaType._isRef(this, value, doc, true)) {\n    return null != value;\n  } else {\n    return typeof value == 'number' || value instanceof Number;\n  }\n};\n\n/**\n * Sets a minimum number validator.\n *\n * ####Example:\n *\n *     var s = new Schema({ n: { type: Number, min: 10 })\n *     var M = db.model('M', s)\n *     var m = new M({ n: 9 })\n *     m.save(function (err) {\n *       console.error(err) // validator error\n *       m.n = 10;\n *       m.save() // success\n *     })\n *\n *     // custom error messages\n *     // We can also use the special {MIN} token which will be replaced with the invalid value\n *     var min = [10, 'The value of path `{PATH}` ({VALUE}) is beneath the limit ({MIN}).'];\n *     var schema = new Schema({ n: { type: Number, min: min })\n *     var M = mongoose.model('Measurement', schema);\n *     var s= new M({ n: 4 });\n *     s.validate(function (err) {\n *       console.log(String(err)) // ValidationError: The value of path `n` (4) is beneath the limit (10).\n *     })\n *\n * @param {Number} value minimum number\n * @param {String} [message] optional custom error message\n * @return {SchemaType} this\n * @see Customized Error Messages #error_messages_MongooseError-messages\n * @api public\n */\n\nSchemaNumber.prototype.min = function (value, message) {\n  if (this.minValidator) {\n    this.validators = this.validators.filter(function (v) {\n      return v.validator != this.minValidator;\n    }, this);\n  }\n\n  if (null != value) {\n    var msg = message || errorMessages.Number.min;\n    msg = msg.replace(/{MIN}/, value);\n    this.validators.push({\n      validator: this.minValidator = function (v) {\n        return v === null || v >= value;\n      },\n      message: msg,\n      type: 'min'\n    });\n  }\n\n  return this;\n};\n\n/**\n * Sets a maximum number validator.\n *\n * ####Example:\n *\n *     var s = new Schema({ n: { type: Number, max: 10 })\n *     var M = db.model('M', s)\n *     var m = new M({ n: 11 })\n *     m.save(function (err) {\n *       console.error(err) // validator error\n *       m.n = 10;\n *       m.save() // success\n *     })\n *\n *     // custom error messages\n *     // We can also use the special {MAX} token which will be replaced with the invalid value\n *     var max = [10, 'The value of path `{PATH}` ({VALUE}) exceeds the limit ({MAX}).'];\n *     var schema = new Schema({ n: { type: Number, max: max })\n *     var M = mongoose.model('Measurement', schema);\n *     var s= new M({ n: 4 });\n *     s.validate(function (err) {\n *       console.log(String(err)) // ValidationError: The value of path `n` (4) exceeds the limit (10).\n *     })\n *\n * @param {Number} maximum number\n * @param {String} [message] optional custom error message\n * @return {SchemaType} this\n * @see Customized Error Messages #error_messages_MongooseError-messages\n * @api public\n */\n\nSchemaNumber.prototype.max = function (value, message) {\n  if (this.maxValidator) {\n    this.validators = this.validators.filter(function(v){\n      return v.validator != this.maxValidator;\n    }, this);\n  }\n\n  if (null != value) {\n    var msg = message || errorMessages.Number.max;\n    msg = msg.replace(/{MAX}/, value);\n    this.validators.push({\n      validator: this.maxValidator = function(v) {\n        return v === null || v <= value;\n      },\n      message: msg,\n      type: 'max'\n    });\n  }\n\n  return this;\n};\n\n/**\n * Casts to number\n *\n * @param {Object} value value to cast\n * @param {Document} doc document that triggers the casting\n * @param {Boolean} init\n * @api private\n */\n\nSchemaNumber.prototype.cast = function (value, doc, init) {\n  if (SchemaType._isRef(this, value, doc, init)) {\n    // wait! we may need to cast this to a document\n\n    if (null == value) {\n      return value;\n    }\n\n    // lazy load\n    Document || (Document = require('./../document'));\n\n    if (value instanceof Document) {\n      value.$__.wasPopulated = true;\n      return value;\n    }\n\n    // setting a populated path\n    if ('number' == typeof value) {\n      return value;\n    } else if (Buffer.isBuffer(value) || !utils.isObject(value)) {\n      throw new CastError('number', value, this.path);\n    }\n\n    // Handle the case where user directly sets a populated\n    // path to a plain object; cast to the Model used in\n    // the population query.\n    var path = doc.$__fullPath(this.path);\n    var owner = doc.ownerDocument ? doc.ownerDocument() : doc;\n    var pop = owner.populated(path, true);\n    var ret = new pop.options.model(value);\n    ret.$__.wasPopulated = true;\n    return ret;\n  }\n\n  var val = value && value._id\n    ? value._id // documents\n    : value;\n\n  if (!isNaN(val)){\n    if (null === val) return val;\n    if ('' === val) return null;\n    if ('string' == typeof val) val = Number(val);\n    if (val instanceof Number) return val\n    if ('number' == typeof val) return val;\n    if (val.toString && !Array.isArray(val) &&\n        val.toString() == Number(val)) {\n      return new Number(val)\n    }\n  }\n\n  throw new CastError('number', value, this.path);\n};\n\n/*!\n * ignore\n */\n\nfunction handleSingle (val) {\n  return this.cast(val)\n}\n\nfunction handleArray (val) {\n  var self = this;\n  return val.map(function (m) {\n    return self.cast(m)\n  });\n}\n\nSchemaNumber.prototype.$conditionalHandlers =\n  utils.options(SchemaType.prototype.$conditionalHandlers, {\n    '$all': handleArray,\n    '$gt' : handleSingle,\n    '$gte': handleSingle,\n    '$in' : handleArray,\n    '$lt' : handleSingle,\n    '$lte': handleSingle,\n    '$ne' : handleSingle,\n    '$mod': handleArray,\n    '$nin': handleArray\n  });\n\n/**\n * Casts contents for queries.\n *\n * @param {String} $conditional\n * @param {any} [value]\n * @api private\n */\n\nSchemaNumber.prototype.castForQuery = function ($conditional, val) {\n  var handler;\n  if (arguments.length === 2) {\n    handler = this.$conditionalHandlers[$conditional];\n    if (!handler)\n      throw new Error(\"Can't use \" + $conditional + \" with Number.\");\n    return handler.call(this, val);\n  } else {\n    val = this.cast($conditional);\n    return val == null ? val : val\n  }\n};\n\n/*!\n * Module exports.\n */\n\nmodule.exports = SchemaNumber;\n"]}