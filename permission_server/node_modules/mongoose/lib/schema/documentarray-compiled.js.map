{"version":3,"sources":["documentarray.js"],"names":[],"mappings":"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","file":"documentarray-compiled.js","sourcesContent":["\n/*!\n * Module dependencies.\n */\n\nvar ArrayType = require('./array');\nvar Document = require('../document');\nvar MongooseDocumentArray = require('../types/documentarray');\nvar SchemaType = require('../schematype');\nvar Subdocument = require('../types/embedded');\n\n/**\n * SubdocsArray SchemaType constructor\n *\n * @param {String} key\n * @param {Schema} schema\n * @param {Object} options\n * @inherits SchemaArray\n * @api private\n */\n\nfunction DocumentArray (key, schema, options) {\n\n  // compile an embedded document for this schema\n  function EmbeddedDocument () {\n    Subdocument.apply(this, arguments);\n  }\n\n  EmbeddedDocument.prototype = Object.create(Subdocument.prototype);\n  EmbeddedDocument.prototype.$__setSchema(schema);\n  EmbeddedDocument.schema = schema;\n\n  // apply methods\n  for (var i in schema.methods)\n    EmbeddedDocument.prototype[i] = schema.methods[i];\n\n  // apply statics\n  for (var i in schema.statics)\n    EmbeddedDocument[i] = schema.statics[i];\n\n  EmbeddedDocument.options = options;\n  this.schema = schema;\n\n  ArrayType.call(this, key, EmbeddedDocument, options);\n\n  this.schema = schema;\n  var path = this.path;\n  var fn = this.defaultValue;\n\n  this.default(function(){\n    var arr = fn.call(this);\n    if (!Array.isArray(arr)) arr = [arr];\n    return new MongooseDocumentArray(arr, path, this);\n  });\n}\n\n/**\n * This schema type's name, to defend against minifiers that mangle\n * function names.\n *\n * @api private\n */\nDocumentArray.schemaName = 'DocumentArray';\n\n/*!\n * Inherits from ArrayType.\n */\nDocumentArray.prototype = Object.create( ArrayType.prototype );\nDocumentArray.prototype.constructor = DocumentArray;\n\n/**\n * Performs local validations first, then validations on each embedded doc\n *\n * @api private\n */\n\nDocumentArray.prototype.doValidate = function (array, fn, scope) {\n  SchemaType.prototype.doValidate.call(this, array, function (err) {\n    if (err) {\n      return fn(err);\n    }\n\n    var count = array && array.length;\n    var error;\n\n    if (!count) return fn();\n\n    // handle sparse arrays, do not use array.forEach which does not\n    // iterate over sparse elements yet reports array.length including\n    // them :(\n\n    for (var i = 0, len = count; i < len; ++i) {\n      // sidestep sparse entries\n      var doc = array[i];\n      if (!doc) {\n        --count || fn(error);\n        continue;\n      }\n\n      doc.validate(function (err) {\n        if (err) {\n          error = err;\n        }\n        --count || fn(error);\n      });\n    }\n  }, scope);\n};\n\n/**\n * Performs local validations first, then validations on each embedded doc.\n *\n * ####Note:\n *\n * This method ignores the asynchronous validators.\n *\n * @return {MongooseError|undefined}\n * @api private\n */\n\nDocumentArray.prototype.doValidateSync = function (array, scope) {\n  var schemaTypeError = SchemaType.prototype.doValidateSync.call(this, array, scope);\n  if (schemaTypeError) return schemaTypeError;\n\n  var count = array && array.length\n    , resultError = null;\n\n  if (!count) return;\n\n  // handle sparse arrays, do not use array.forEach which does not\n  // iterate over sparse elements yet reports array.length including\n  // them :(\n\n  for (var i = 0, len = count; i < len; ++i) {\n    // only first error\n    if ( resultError ) break;\n    // sidestep sparse entries\n    var doc = array[i];\n    if (!doc) continue;\n\n    var subdocValidateError = doc.validateSync();\n\n    if (subdocValidateError) {\n      resultError = subdocValidateError;\n    }\n  }\n\n  return resultError;\n};\n\n/**\n * Casts contents\n *\n * @param {Object} value\n * @param {Document} document that triggers the casting\n * @api private\n */\n\nDocumentArray.prototype.cast = function (value, doc, init, prev) {\n  var selected\n    , subdoc\n    , i\n\n  if (!Array.isArray(value)) {\n    // gh-2442 mark whole array as modified if we're initializing a doc from\n    // the db and the path isn't an array in the document\n    if (!!doc && init) {\n      doc.markModified(this.path);\n    }\n    return this.cast([value], doc, init, prev);\n  }\n\n  if (!(value && value.isMongooseDocumentArray)) {\n    value = new MongooseDocumentArray(value, this.path, doc);\n    if (prev && prev._handlers) {\n      for (var key in prev._handlers) {\n        doc.removeListener(key, prev._handlers[key]);\n      }\n    }\n  }\n\n  i = value.length;\n\n  while (i--) {\n    if (!(value[i] instanceof Subdocument) && value[i]) {\n      if (init) {\n        selected || (selected = scopePaths(this, doc.$__.selected, init));\n        subdoc = new this.casterConstructor(null, value, true, selected, i);\n        value[i] = subdoc.init(value[i]);\n      } else {\n        try {\n          subdoc = prev.id(value[i]._id);\n        } catch(e) {}\n\n        if (prev && subdoc) {\n          // handle resetting doc with existing id but differing data\n          // doc.array = [{ doc: 'val' }]\n          subdoc.set(value[i]);\n          // if set() is hooked it will have no return value\n          // see gh-746\n          value[i] = subdoc;\n        } else {\n          subdoc = new this.casterConstructor(value[i], value, undefined, undefined, i);\n          // if set() is hooked it will have no return value\n          // see gh-746\n          value[i] = subdoc;\n        }\n      }\n    }\n  }\n\n  return value;\n}\n\n/*!\n * Scopes paths selected in a query to this array.\n * Necessary for proper default application of subdocument values.\n *\n * @param {DocumentArray} array - the array to scope `fields` paths\n * @param {Object|undefined} fields - the root fields selected in the query\n * @param {Boolean|undefined} init - if we are being created part of a query result\n */\n\nfunction scopePaths (array, fields, init) {\n  if (!(init && fields)) return undefined;\n\n  var path = array.path + '.'\n    , keys = Object.keys(fields)\n    , i = keys.length\n    , selected = {}\n    , hasKeys\n    , key\n\n  while (i--) {\n    key = keys[i];\n    if (0 === key.indexOf(path)) {\n      hasKeys || (hasKeys = true);\n      selected[key.substring(path.length)] = fields[key];\n    }\n  }\n\n  return hasKeys && selected || undefined;\n}\n\n/*!\n * Module exports.\n */\n\nmodule.exports = DocumentArray;\n"]}