{"version":3,"sources":["browser.js"],"names":[],"mappings":";;;;;;;;;AAOA,OAAO,CAAC,KAAK,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;;;;;;;;;;;;;;;AAenC,OAAO,CAAC,MAAM,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BrC,OAAO,CAAC,KAAK,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;;;;;;;;AAQnC,OAAO,CAAC,WAAW,GAAG,OAAO,CAAC,eAAe,CAAC,CAAC;;;;;;;;;;;;;;AAc/C,OAAO,CAAC,UAAU,GAAG,OAAO,CAAC,iBAAiB,CAAC,CAAC;;;;;;;;;AAShD,OAAO,CAAC,KAAK,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC;;;;;;;;AAQtC,OAAO,CAAC,QAAQ,GAAG,OAAO,CAAC,wBAAwB,CAAC,EAAE,CAAC;;;;;;AAMvD,IAAI,OAAO,MAAM,KAAK,WAAW,EAAE;AACjC,QAAM,CAAC,QAAQ,GAAG,MAAM,CAAC,OAAO,CAAC;AACjC,QAAM,CAAC,MAAM,GAAG,MAAM,CAAC;CACxB","file":"browser-compiled.js","sourcesContent":["/**\n * The [MongooseError](#error_MongooseError) constructor.\n *\n * @method Error\n * @api public\n */\n\nexports.Error = require('./error');\n\n/**\n * The Mongoose [Schema](#schema_Schema) constructor\n *\n * ####Example:\n *\n *     var mongoose = require('mongoose');\n *     var Schema = mongoose.Schema;\n *     var CatSchema = new Schema(..);\n *\n * @method Schema\n * @api public\n */\n\nexports.Schema = require('./schema');\n\n/**\n * The various Mongoose Types.\n *\n * ####Example:\n *\n *     var mongoose = require('mongoose');\n *     var array = mongoose.Types.Array;\n *\n * ####Types:\n *\n * - [ObjectId](#types-objectid-js)\n * - [Buffer](#types-buffer-js)\n * - [SubDocument](#types-embedded-js)\n * - [Array](#types-array-js)\n * - [DocumentArray](#types-documentarray-js)\n *\n * Using this exposed access to the `ObjectId` type, we can construct ids on demand.\n *\n *     var ObjectId = mongoose.Types.ObjectId;\n *     var id1 = new ObjectId;\n *\n * @property Types\n * @api public\n */\nexports.Types = require('./types');\n\n/**\n * The Mongoose [VirtualType](#virtualtype_VirtualType) constructor\n *\n * @method VirtualType\n * @api public\n */\nexports.VirtualType = require('./virtualtype');\n\n/**\n * The various Mongoose SchemaTypes.\n *\n * ####Note:\n *\n * _Alias of mongoose.Schema.Types for backwards compatibility._\n *\n * @property SchemaTypes\n * @see Schema.SchemaTypes #schema_Schema.Types\n * @api public\n */\n\nexports.SchemaType = require('./schematype.js');\n\n/**\n * Internal utils\n *\n * @property utils\n * @api private\n */\n\nexports.utils = require('./utils.js');\n\n/**\n * The Mongoose browser [Document](#document-js) constructor.\n *\n * @method Document\n * @api public\n */\nexports.Document = require('./document_provider.js')();\n\n/*!\n * Module exports.\n */\n\nif (typeof window !== 'undefined') {\n  window.mongoose = module.exports;\n  window.Buffer = Buffer;\n}\n"]}