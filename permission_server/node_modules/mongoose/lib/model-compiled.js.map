{"version":3,"sources":["model.js"],"names":[],"mappings":"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","file":"model-compiled.js","sourcesContent":["/*!\n * Module dependencies.\n */\n\nvar Document = require('./document')\n  , MongooseArray = require('./types/array')\n  , MongooseDocumentArray = require('./types/documentarray')\n  , MongooseBuffer = require('./types/buffer')\n  , MongooseError = require('./error')\n  , VersionError = MongooseError.VersionError\n  , DivergentArrayError = MongooseError.DivergentArrayError\n  , Query = require('./query')\n  , Aggregate = require('./aggregate')\n  , Schema = require('./schema')\n  , Types = require('./schema/index')\n  , utils = require('./utils')\n  , hasOwnProperty = utils.object.hasOwnProperty\n  , isMongooseObject = utils.isMongooseObject\n  , EventEmitter = require('events').EventEmitter\n  , merge = utils.merge\n  , Promise = require('./promise')\n  , assert = require('assert')\n  , util = require('util')\n  , tick = utils.tick;\n\nvar async = require('async');\n\nvar VERSION_WHERE = 1\n  , VERSION_INC = 2\n  , VERSION_ALL = VERSION_WHERE | VERSION_INC;\n\n/**\n * Model constructor\n *\n * Provides the interface to MongoDB collections as well as creates document instances.\n *\n * @param {Object} doc values with which to create the document\n * @inherits Document\n * @event `error`: If listening to this event, it is emitted when a document was saved without passing a callback and an `error` occurred. If not listening, the event bubbles to the connection used to create this Model.\n * @event `index`: Emitted after `Model#ensureIndexes` completes. If an error occurred it is passed with the event.\n * @api public\n */\n\nfunction Model (doc, fields, skipId) {\n  Document.call(this, doc, fields, skipId);\n};\n\n/*!\n * Inherits from Document.\n *\n * All Model.prototype features are available on\n * top level (non-sub) documents.\n */\n\nModel.prototype.__proto__ = Document.prototype;\n\n/**\n * Connection the model uses.\n *\n * @api public\n * @property db\n */\n\nModel.prototype.db;\n\n/**\n * Collection the model uses.\n *\n * @api public\n * @property collection\n */\n\nModel.prototype.collection;\n\n/**\n * The name of the model\n *\n * @api public\n * @property modelName\n */\n\nModel.prototype.modelName;\n\nModel.prototype.$__handleSave = function $__handleSave(options) {\n  var self = this;\n  var innerPromise = new Promise;\n  if (!options.safe && this.schema.options.safe) {\n    options.safe = this.schema.options.safe;\n  }\n\n  if (this.isNew) {\n    // send entire doc\n    var toObjectOptions = {};\n    if (this.schema.options.toObject &&\n        this.schema.options.toObject.retainKeyOrder) {\n      toObjectOptions.retainKeyOrder = true;\n    }\n\n    toObjectOptions.depopulate = 1;\n    toObjectOptions._skipDepopulateTopLevel = true;\n    toObjectOptions.transform = false;\n\n    var obj = this.toObject(toObjectOptions);\n\n    if (!utils.object.hasOwnProperty(obj || {}, '_id')) {\n      // documents must have an _id else mongoose won't know\n      // what to update later if more changes are made. the user\n      // wouldn't know what _id was generated by mongodb either\n      // nor would the ObjectId generated my mongodb necessarily\n      // match the schema definition.\n      innerPromise.reject(new Error('document must have an _id before saving'));\n      return innerPromise;\n    }\n\n    this.$__version(true, obj);\n    this.collection.insert(obj, options.safe, function (err, ret) {\n      innerPromise.resolve(err, ret);\n    });\n    this.$__reset();\n    this.isNew = false;\n    this.emit('isNew', false);\n    // Make it possible to retry the insert\n    this.$__.inserting = true;\n\n  } else {\n    // Make sure we don't treat it as a new object on error,\n    // since it already exists\n    this.$__.inserting = false;\n\n    var delta = this.$__delta();\n\n    if (delta) {\n      if (delta instanceof Error) {\n        innerPromise.reject(delta);\n        return innerPromise;\n      }\n      var where = this.$__where(delta[0]);\n      this.collection.update(where, delta[1], options.safe, function (err, ret) {\n        innerPromise.resolve(err, ret);\n      });\n    } else {\n      this.$__reset();\n      innerPromise.fulfill(this);\n    }\n\n    this.emit('isNew', false);\n  }\n  return innerPromise;\n};\n\n/**\n * @description Saves this document.\n *\n * @example:\n *\n *     product.sold = Date.now();\n *     product.save(function (err, product, numberAffected) {\n *       if (err) ..\n *     })\n *\n * @description The callback will receive three parameters, `err` if an error occurred, `product` which is the saved `product`, and `numberAffected` which will be 1 when the document was found and updated in the database, otherwise 0.\n *\n * The `fn` callback is optional. If no `fn` is passed and validation fails, the validation error will be emitted on the connection used to create this model.\n * @example:\n *     var db = mongoose.createConnection(..);\n *     var schema = new Schema(..);\n *     var Product = db.model('Product', schema);\n *\n *     db.on('error', handleError);\n *\n * @description However, if you desire more local error handling you can add an `error` listener to the model and handle errors there instead.\n * @example:\n *     Product.on('error', handleError);\n *\n * @description As an extra measure of flow control, save will return a Promise (bound to `fn` if passed) so it could be chained, or hook to recive errors\n * @example:\n *     product.save().then(function (product, numberAffected) {\n *        ...\n *     }).onRejected(function (err) {\n *        assert.ok(err)\n *     })\n *\n * @description For legacy reasons, mongoose stores object keys in reverse order on initial save. That is, `{ a: 1, b: 2}` will be saved as `{ b: 2, a: 1 }` in MongoDB. To override this behavior, set [the `toObject.retainKeyOrder` option](http://mongoosejs.com/docs/api.html#document_Document-toObject) to true on your schema.\n *\n * @param {Object} [options] options set `options.safe` to override [schema's safe option](/docs/guide.html#safe)\n * @param {function(err, product, Number)} [fn] optional callback\n * @return {Promise} Promise\n * @api public\n * @see middleware http://mongoosejs.com/docs/middleware.html\n */\n\nModel.prototype.save = function (options, fn) {\n  if ('function' == typeof options) {\n    fn = options;\n    options = undefined;\n  }\n\n  if (!options) {\n    options = {};\n  }\n\n  var self = this;\n  var finalPromise = new Promise(fn);\n\n  // Jank to be able to use mpromise.prototype.all()\n  var p0 = new Promise;\n  p0.fulfill();\n\n  // Call save hooks on subdocs\n  var p1 = p0.all(function () {\n    var subDocs = self.$__getAllSubdocs();\n    return subDocs.map(function (d) {return d.save();});\n  });\n\n  // Handle save and resaults\n  p1\n    .then(this.$__handleSave.bind(this, options))\n    .then(function (result) {\n      self.$__reset();\n      self.$__storeShard();\n\n      var numAffected = 0;\n      if (result) {\n        if (Array.isArray(result)) {\n          numAffected = result.length;\n        } else if (result.result && result.result.n !== undefined) {\n          numAffected = result.result.n;\n        } else if (result.result && result.result.nModified !== undefined) {\n          numAffected = result.result.nModified;\n        } else {\n          numAffected = result;\n        }\n      }\n\n      // was this an update that required a version bump?\n      if (self.$__.version && !self.$__.inserting) {\n        var doIncrement = VERSION_INC === (VERSION_INC & self.$__.version);\n        self.$__.version = undefined;\n\n        if (numAffected <= 0) {\n          // the update failed. pass an error back\n          return finalPromise.reject(new VersionError);\n        }\n\n        // increment version if was successful\n        if (doIncrement) {\n          var key = self.schema.options.versionKey;\n          var version = self.getValue(key) | 0;\n          self.setValue(key, version + 1);\n        }\n      }\n\n      self.emit('save', self, numAffected);\n      return finalPromise.fulfill(self, numAffected);\n    }\n    , function (err) {\n      // If the initial insert fails provide a second chance.\n      // (If we did this all the time we would break updates)\n      if (self.$__.inserting) {\n        self.isNew = true;\n        self.emit('isNew', true);\n      }\n      finalPromise.reject(err);\n    })\n    .end();\n\n  return finalPromise;\n};\n\n\n/*!\n * Apply the operation to the delta (update) clause as\n * well as track versioning for our where clause.\n *\n * @param {Document} self\n * @param {Object} where\n * @param {Object} delta\n * @param {Object} data\n * @param {Mixed} val\n * @param {String} [operation]\n */\n\nfunction operand (self, where, delta, data, val, op) {\n  // delta\n  op || (op = '$set');\n  if (!delta[op]) delta[op] = {};\n  delta[op][data.path] = val;\n\n  // disabled versioning?\n  if (false === self.schema.options.versionKey) return;\n\n  // path excluded from versioning?\n  var skipVersioning = self.schema.options.skipVersioning;\n  if (skipVersioning && skipVersioning[data.path]) return;\n\n  // already marked for versioning?\n  if (VERSION_ALL === (VERSION_ALL & self.$__.version)) return;\n\n  switch (op) {\n    case '$set':\n    case '$unset':\n    case '$pop':\n    case '$pull':\n    case '$pullAll':\n    case '$push':\n    case '$pushAll':\n    case '$addToSet':\n      break;\n    default:\n      // nothing to do\n      return;\n  }\n\n  // ensure updates sent with positional notation are\n  // editing the correct array element.\n  // only increment the version if an array position changes.\n  // modifying elements of an array is ok if position does not change.\n\n  if ('$push' == op || '$pushAll' == op || '$addToSet' == op) {\n    self.$__.version = VERSION_INC;\n  }\n  else if (/^\\$p/.test(op)) {\n    // potentially changing array positions\n    self.increment();\n  }\n  else if (Array.isArray(val)) {\n    // $set an array\n    self.increment();\n  }\n  // now handling $set, $unset\n  else if (/\\.\\d+\\.|\\.\\d+$/.test(data.path)) {\n    // subpath of array\n    self.$__.version = VERSION_WHERE;\n  }\n}\n\n/*!\n * Compiles an update and where clause for a `val` with _atomics.\n *\n * @param {Document} self\n * @param {Object} where\n * @param {Object} delta\n * @param {Object} data\n * @param {Array} value\n */\n\nfunction handleAtomics (self, where, delta, data, value) {\n  if (delta.$set && delta.$set[data.path]) {\n    // $set has precedence over other atomics\n    return;\n  }\n\n  if ('function' == typeof value.$__getAtomics) {\n    value.$__getAtomics().forEach(function (atomic) {\n      var op = atomic[0];\n      var val = atomic[1];\n      operand(self, where, delta, data, val, op);\n    })\n    return;\n  }\n\n  // legacy support for plugins\n\n  var atomics = value._atomics\n    , ops = Object.keys(atomics)\n    , i = ops.length\n    , val\n    , op;\n\n  if (0 === i) {\n    // $set\n\n    if (isMongooseObject(value)) {\n      value = value.toObject({ depopulate: 1 });\n    } else if (value.valueOf) {\n      value = value.valueOf();\n    }\n\n    return operand(self, where, delta, data, value);\n  }\n\n  while (i--) {\n    op = ops[i];\n    val = atomics[op];\n\n    if (isMongooseObject(val)) {\n      val = val.toObject({ depopulate: 1 })\n    } else if (Array.isArray(val)) {\n      val = val.map(function (mem) {\n        return isMongooseObject(mem)\n          ? mem.toObject({ depopulate: 1 })\n          : mem;\n      })\n    } else if (val.valueOf) {\n      val = val.valueOf()\n    }\n\n    if ('$addToSet' === op)\n      val = { $each: val };\n\n    operand(self, where, delta, data, val, op);\n  }\n}\n\n/**\n * Produces a special query document of the modified properties used in updates.\n *\n * @api private\n * @method $__delta\n * @memberOf Model\n */\n\nModel.prototype.$__delta = function () {\n  var dirty = this.$__dirty();\n  if (!dirty.length && VERSION_ALL != this.$__.version) return;\n\n  var where = {}\n    , delta = {}\n    , len = dirty.length\n    , divergent = []\n    , d = 0\n    , val\n    , obj\n\n  for (; d < len; ++d) {\n    var data = dirty[d]\n    var value = data.value\n    var schema = data.schema\n\n    var match = checkDivergentArray(this, data.path, value);\n    if (match) {\n      divergent.push(match);\n      continue;\n    }\n\n    if (divergent.length) continue;\n\n    if (undefined === value) {\n      operand(this, where, delta, data, 1, '$unset');\n\n    } else if (null === value) {\n      operand(this, where, delta, data, null);\n\n    } else if (value._path && value._atomics) {\n      // arrays and other custom types (support plugins etc)\n      handleAtomics(this, where, delta, data, value);\n\n    } else if (value._path && Buffer.isBuffer(value)) {\n      // MongooseBuffer\n      value = value.toObject();\n      operand(this, where, delta, data, value);\n\n    } else {\n      value = utils.clone(value, { depopulate: 1 });\n      operand(this, where, delta, data, value);\n    }\n  }\n\n  if (divergent.length) {\n    return new DivergentArrayError(divergent);\n  }\n\n  if (this.$__.version) {\n    this.$__version(where, delta);\n  }\n\n  return [where, delta];\n}\n\n/*!\n * Determine if array was populated with some form of filter and is now\n * being updated in a manner which could overwrite data unintentionally.\n *\n * @see https://github.com/Automattic/mongoose/issues/1334\n * @param {Document} doc\n * @param {String} path\n * @return {String|undefined}\n */\n\nfunction checkDivergentArray (doc, path, array) {\n  // see if we populated this path\n  var pop = doc.populated(path, true);\n\n  if (!pop && doc.$__.selected) {\n    // If any array was selected using an $elemMatch projection, we deny the update.\n    // NOTE: MongoDB only supports projected $elemMatch on top level array.\n    var top = path.split('.')[0];\n    if ((doc.$__.selected[top] && doc.$__.selected[top].$elemMatch) ||\n        doc.$__.selected[top + '.$']) {\n      return top;\n    }\n  }\n\n  if (!(pop && array && array.isMongooseArray)) return;\n\n  // If the array was populated using options that prevented all\n  // documents from being returned (match, skip, limit) or they\n  // deselected the _id field, $pop and $set of the array are\n  // not safe operations. If _id was deselected, we do not know\n  // how to remove elements. $pop will pop off the _id from the end\n  // of the array in the db which is not guaranteed to be the\n  // same as the last element we have here. $set of the entire array\n  // would be similarily destructive as we never received all\n  // elements of the array and potentially would overwrite data.\n  var check = pop.options.match ||\n              pop.options.options && hasOwnProperty(pop.options.options, 'limit') || // 0 is not permitted\n              pop.options.options && pop.options.options.skip || // 0 is permitted\n              pop.options.select && // deselected _id?\n                (0 === pop.options.select._id ||\n                /\\s?-_id\\s?/.test(pop.options.select))\n\n  if (check) {\n    var atomics = array._atomics;\n    if (0 === Object.keys(atomics).length || atomics.$set || atomics.$pop) {\n      return path;\n    }\n  }\n}\n\n/**\n * Appends versioning to the where and update clauses.\n *\n * @api private\n * @method $__version\n * @memberOf Model\n */\n\nModel.prototype.$__version = function (where, delta) {\n  var key = this.schema.options.versionKey;\n\n  if (true === where) {\n    // this is an insert\n    if (key) this.setValue(key, delta[key] = 0);\n    return;\n  }\n\n  // updates\n\n  // only apply versioning if our versionKey was selected. else\n  // there is no way to select the correct version. we could fail\n  // fast here and force them to include the versionKey but\n  // thats a bit intrusive. can we do this automatically?\n  if (!this.isSelected(key)) {\n    return;\n  }\n\n  // $push $addToSet don't need the where clause set\n  if (VERSION_WHERE === (VERSION_WHERE & this.$__.version)) {\n    where[key] = this.getValue(key);\n  }\n\n  if (VERSION_INC === (VERSION_INC & this.$__.version)) {\n    if (!delta.$set || typeof delta.$set[key] === 'undefined') {\n      delta.$inc || (delta.$inc = {});\n      delta.$inc[key] = 1;\n    }\n  }\n}\n\n/**\n * Signal that we desire an increment of this documents version.\n *\n * ####Example:\n *\n *     Model.findById(id, function (err, doc) {\n *       doc.increment();\n *       doc.save(function (err) { .. })\n *     })\n *\n * @see versionKeys http://mongoosejs.com/docs/guide.html#versionKey\n * @api public\n */\n\nModel.prototype.increment = function increment () {\n  this.$__.version = VERSION_ALL;\n  return this;\n}\n\n/**\n * Returns a query object which applies shardkeys if they exist.\n *\n * @api private\n * @method $__where\n * @memberOf Model\n */\n\nModel.prototype.$__where = function _where (where) {\n  where || (where = {});\n\n  var paths\n    , len\n\n  if (this.$__.shardval) {\n    paths = Object.keys(this.$__.shardval)\n    len = paths.length\n\n    for (var i = 0; i < len; ++i) {\n      where[paths[i]] = this.$__.shardval[paths[i]];\n    }\n  }\n\n  where._id = this._doc._id;\n  return where;\n}\n\n/**\n * @description Removes this document from the db.\n *\n * @example:\n *     product.remove(function (err, product) {\n *       if (err) return handleError(err);\n *       Product.findById(product._id, function (err, product) {\n *         console.log(product) // null\n *       })\n *     })\n *\n *\n * @description As an extra measure of flow control, remove will return a Promise (bound to `fn` if passed) so it could be chained, or hooked to recive errors\n *\n * @example\n *     product.remove().then(function (product) {\n *        ...\n *     }).onRejected(function (err) {\n *        assert.ok(err)\n *     })\n *\n * @param {function (err, product)} [fn] optional callback\n * @return {Promise} Promise\n * @api public\n */\n\nModel.prototype.remove = function remove (options, fn) {\n\n  if ('function' == typeof options) {\n    fn = options;\n    options = undefined;\n  }\n\n  if (!options) {\n    options = {};\n  }\n\n  if (this.$__.removing) {\n    this.$__.removing.onResolve(fn);\n    return this;\n  }\n\n  var promise = this.$__.removing = new Promise(fn)\n    , where = this.$__where()\n    , self = this\n    ;\n\n  if (!options.safe && this.schema.options.safe) {\n    options.safe = this.schema.options.safe;\n  }\n\n  this.collection.remove(where, options, function (err) {\n    if (!err) {\n      self.emit('remove', self);\n    }\n    promise.resolve(err, self);\n  });\n\n  return promise;\n};\n\n/**\n * Returns another Model instance.\n *\n * ####Example:\n *\n *     var doc = new Tank;\n *     doc.model('User').findById(id, callback);\n *\n * @param {String} name model name\n * @api public\n */\n\nModel.prototype.model = function model (name) {\n  return this.db.model(name);\n};\n\n/**\n * Adds a discriminator type.\n *\n * ####Example:\n *\n *     function BaseSchema() {\n *       Schema.apply(this, arguments);\n *\n *       this.add({\n *         name: String,\n *         createdAt: Date\n *       });\n *     }\n *     util.inherits(BaseSchema, Schema);\n *\n *     var PersonSchema = new BaseSchema();\n *     var BossSchema = new BaseSchema({ department: String });\n *\n *     var Person = mongoose.model('Person', PersonSchema);\n *     var Boss = Person.discriminator('Boss', BossSchema);\n *\n * @param {String} name   discriminator model name\n * @param {Schema} schema discriminator model schema\n * @api public\n */\n\nModel.discriminator = function discriminator (name, schema) {\n  if (!(schema instanceof Schema)) {\n    throw new Error(\"You must pass a valid discriminator Schema\");\n  }\n\n  if (this.schema.discriminatorMapping && !this.schema.discriminatorMapping.isRoot) {\n    throw new Error(\"Discriminator \\\"\" + name +\n      \"\\\" can only be a discriminator of the root model\");\n  }\n\n  var key = this.schema.options.discriminatorKey;\n  if (schema.path(key)) {\n    throw new Error(\"Discriminator \\\"\" + name +\n      \"\\\" cannot have field with name \\\"\" + key + \"\\\"\");\n  }\n\n  // merges base schema into new discriminator schema and sets new type field.\n  (function(schema, baseSchema) {\n    utils.merge(schema, baseSchema);\n\n    var obj = {};\n    obj[key] = { type: String, default: name };\n    schema.add(obj);\n    schema.discriminatorMapping = { key: key, value: name, isRoot: false };\n\n    if (baseSchema.options.collection) {\n      schema.options.collection = baseSchema.options.collection;\n    }\n\n      // throws error if options are invalid\n    (function(a, b) {\n      a = utils.clone(a);\n      b = utils.clone(b);\n      delete a.toJSON;\n      delete a.toObject;\n      delete b.toJSON;\n      delete b.toObject;\n\n      if (!utils.deepEqual(a, b)) {\n        throw new Error(\"Discriminator options are not customizable \" +\n          \"(except toJSON & toObject)\");\n      }\n    })(schema.options, baseSchema.options);\n\n    var toJSON = schema.options.toJSON\n      , toObject = schema.options.toObject;\n\n    schema.options = utils.clone(baseSchema.options);\n    if (toJSON)   schema.options.toJSON = toJSON;\n    if (toObject) schema.options.toObject = toObject;\n\n    schema.callQueue = baseSchema.callQueue.concat(schema.callQueue.slice(schema._defaultMiddleware.length));\n    schema._requiredpaths = undefined; // reset just in case Schema#requiredPaths() was called on either schema\n  })(schema, this.schema);\n\n  if (!this.discriminators) {\n    this.discriminators = {};\n  }\n\n  if (!this.schema.discriminatorMapping) {\n    this.schema.discriminatorMapping = { key: key, value: null, isRoot: true };\n  }\n\n  if (this.discriminators[name]) {\n    throw new Error(\"Discriminator with name \\\"\" + name + \"\\\" already exists\");\n  }\n\n  this.discriminators[name] = this.db.model(name, schema, this.collection.name);\n  this.discriminators[name].prototype.__proto__ = this.prototype;\n\n  // apply methods and statics\n  applyMethods(this.discriminators[name], schema);\n  applyStatics(this.discriminators[name], schema);\n\n  return this.discriminators[name];\n};\n\n// Model (class) features\n\n/*!\n * Give the constructor the ability to emit events.\n */\n\nfor (var i in EventEmitter.prototype)\n  Model[i] = EventEmitter.prototype[i];\n\n/**\n * Called when the model compiles.\n *\n * @api private\n */\n\nModel.init = function init () {\n  if ((this.schema.options.autoIndex) ||\n      (this.schema.options.autoIndex === null && this.db.config.autoIndex)) {\n    this.ensureIndexes();\n  }\n\n  this.schema.emit('init', this);\n};\n\n/**\n * Sends `ensureIndex` commands to mongo for each index declared in the schema.\n *\n * ####Example:\n *\n *     Event.ensureIndexes(function (err) {\n *       if (err) return handleError(err);\n *     });\n *\n * After completion, an `index` event is emitted on this `Model` passing an error if one occurred.\n *\n * ####Example:\n *\n *     var eventSchema = new Schema({ thing: { type: 'string', unique: true }})\n *     var Event = mongoose.model('Event', eventSchema);\n *\n *     Event.on('index', function (err) {\n *       if (err) console.error(err); // error occurred during index creation\n *     })\n *\n * _NOTE: It is not recommended that you run this in production. Index creation may impact database performance depending on your load. Use with caution._\n *\n * The `ensureIndex` commands are not sent in parallel. This is to avoid the `MongoError: cannot add index with a background operation in progress` error. See [this ticket](https://github.com/Automattic/mongoose/issues/1365) for more information.\n *\n * @param {Function} [cb] optional callback\n * @return {Promise}\n * @api public\n */\n\nModel.ensureIndexes = function ensureIndexes (cb) {\n  var promise = new Promise(cb);\n\n  var indexes = this.schema.indexes();\n  if (!indexes.length) {\n    process.nextTick(promise.fulfill.bind(promise));\n    return promise;\n  }\n\n  // Indexes are created one-by-one to support how MongoDB < 2.4 deals\n  // with background indexes.\n\n  var self = this\n    , safe = self.schema.options.safe\n\n  var done = function(err) {\n    self.emit('index', err);\n    promise.resolve(err);\n  }\n\n  var create = function() {\n    var index = indexes.shift();\n    if (!index) return done();\n\n    var options = index[1];\n    options.safe = safe;\n    self.collection.ensureIndex(index[0], options, tick(function (err) {\n      if (err) return done(err);\n      create();\n    }));\n  }\n\n  create();\n  return promise;\n}\n\n/**\n * Schema the model uses.\n *\n * @property schema\n * @receiver Model\n * @api public\n */\n\nModel.schema;\n\n/*!\n * Connection instance the model uses.\n *\n * @property db\n * @receiver Model\n * @api public\n */\n\nModel.db;\n\n/*!\n * Collection the model uses.\n *\n * @property collection\n * @receiver Model\n * @api public\n */\n\nModel.collection;\n\n/**\n * Base Mongoose instance the model uses.\n *\n * @property base\n * @receiver Model\n * @api public\n */\n\nModel.base;\n\n/**\n * Registered discriminators for this model.\n *\n * @property discriminators\n * @receiver Model\n * @api public\n */\n\nModel.discriminators;\n\n/**\n * Removes documents from the collection.\n *\n * ####Example:\n *\n *     Comment.remove({ title: 'baby born from alien father' }, function (err) {\n *\n *     });\n *\n * ####Note:\n *\n * To remove documents without waiting for a response from MongoDB, do not pass a `callback`, then call `exec` on the returned [Query](#query-js):\n *\n *     var query = Comment.remove({ _id: id });\n *     query.exec();\n *\n * ####Note:\n *\n * This method sends a remove command directly to MongoDB, no Mongoose documents are involved. Because no Mongoose documents are involved, _no middleware (hooks) are executed_.\n *\n * @param {Object} conditions\n * @param {Function} [callback]\n * @return {Promise} Promise\n * @api public\n */\n\nModel.remove = function remove (conditions, callback) {\n  if ('function' === typeof conditions) {\n    callback = conditions;\n    conditions = {};\n  }\n\n  // get the mongodb collection object\n  var mq = new Query(conditions, {}, this, this.collection);\n\n  return mq.remove(callback);\n};\n\n/**\n * Finds documents\n *\n * The `conditions` are cast to their respective SchemaTypes before the command is sent.\n *\n * ####Examples:\n *\n *     // named john and at least 18\n *     MyModel.find({ name: 'john', age: { $gte: 18 }});\n *\n *     // executes immediately, passing results to callback\n *     MyModel.find({ name: 'john', age: { $gte: 18 }}, function (err, docs) {});\n *\n *     // name LIKE john and only selecting the \"name\" and \"friends\" fields, executing immediately\n *     MyModel.find({ name: /john/i }, 'name friends', function (err, docs) { })\n *\n *     // passing options\n *     MyModel.find({ name: /john/i }, null, { skip: 10 })\n *\n *     // passing options and executing immediately\n *     MyModel.find({ name: /john/i }, null, { skip: 10 }, function (err, docs) {});\n *\n *     // executing a query explicitly\n *     var query = MyModel.find({ name: /john/i }, null, { skip: 10 })\n *     query.exec(function (err, docs) {});\n *\n *     // using the promise returned from executing a query\n *     var query = MyModel.find({ name: /john/i }, null, { skip: 10 });\n *     var promise = query.exec();\n *     promise.addBack(function (err, docs) {});\n *\n * @param {Object} conditions\n * @param {Object} [projection] optional fields to return (http://bit.ly/1HotzBo)\n * @param {Object} [options] optional\n * @param {Function} [callback]\n * @return {Query}\n * @see field selection #query_Query-select\n * @see promise #promise-js\n * @api public\n */\n\nModel.find = function find (conditions, projection, options, callback) {\n  if ('function' == typeof conditions) {\n    callback = conditions;\n    conditions = {};\n    projection = null;\n    options = null;\n  } else if ('function' == typeof projection) {\n    callback = projection;\n    projection = null;\n    options = null;\n  } else if ('function' == typeof options) {\n    callback = options;\n    options = null;\n  }\n\n  // get the raw mongodb collection object\n  var mq = new Query({}, options, this, this.collection);\n  mq.select(projection);\n  if (this.schema.discriminatorMapping && mq.selectedInclusively()) {\n    mq.select(this.schema.options.discriminatorKey);\n  }\n\n  return mq.find(conditions, callback);\n};\n\n/**\n * Finds a single document by id.\n *\n * The `id` is cast based on the Schema before sending the command.\n *\n * ####Example:\n *\n *     // find adventure by id and execute immediately\n *     Adventure.findById(id, function (err, adventure) {});\n *\n *     // same as above\n *     Adventure.findById(id).exec(callback);\n *\n *     // select only the adventures name and length\n *     Adventure.findById(id, 'name length', function (err, adventure) {});\n *\n *     // same as above\n *     Adventure.findById(id, 'name length').exec(callback);\n *\n *     // include all properties except for `length`\n *     Adventure.findById(id, '-length').exec(function (err, adventure) {});\n *\n *     // passing options (in this case return the raw js objects, not mongoose documents by passing `lean`\n *     Adventure.findById(id, 'name', { lean: true }, function (err, doc) {});\n *\n *     // same as above\n *     Adventure.findById(id, 'name').lean().exec(function (err, doc) {});\n *\n * @param {ObjectId|HexId} id objectid, or a value that can be casted to one\n * @param {Object} [projection] optional fields to return (http://bit.ly/1HotzBo)\n * @param {Object} [options] optional\n * @param {Function} [callback]\n * @return {Query}\n * @see field selection #query_Query-select\n * @see lean queries #query_Query-lean\n * @api public\n */\n\nModel.findById = function findById (id, projection, options, callback) {\n  return this.findOne({ _id: id }, projection, options, callback);\n};\n\n/**\n * Finds one document.\n *\n * The `conditions` are cast to their respective SchemaTypes before the command is sent.\n *\n * ####Example:\n *\n *     // find one iphone adventures - iphone adventures??\n *     Adventure.findOne({ type: 'iphone' }, function (err, adventure) {});\n *\n *     // same as above\n *     Adventure.findOne({ type: 'iphone' }).exec(function (err, adventure) {});\n *\n *     // select only the adventures name\n *     Adventure.findOne({ type: 'iphone' }, 'name', function (err, adventure) {});\n *\n *     // same as above\n *     Adventure.findOne({ type: 'iphone' }, 'name').exec(function (err, adventure) {});\n *\n *     // specify options, in this case lean\n *     Adventure.findOne({ type: 'iphone' }, 'name', { lean: true }, callback);\n *\n *     // same as above\n *     Adventure.findOne({ type: 'iphone' }, 'name', { lean: true }).exec(callback);\n *\n *     // chaining findOne queries (same as above)\n *     Adventure.findOne({ type: 'iphone' }).select('name').lean().exec(callback);\n *\n * @param {Object} [conditions]\n * @param {Object} [projection] optional fields to return (http://bit.ly/1HotzBo)\n * @param {Object} [options] optional\n * @param {Function} [callback]\n * @return {Query}\n * @see field selection #query_Query-select\n * @see lean queries #query_Query-lean\n * @api public\n */\n\nModel.findOne = function findOne (conditions, projection, options, callback) {\n  if ('function' == typeof options) {\n    callback = options;\n    options = null;\n  } else if ('function' == typeof projection) {\n    callback = projection;\n    projection = null;\n    options = null;\n  } else if ('function' == typeof conditions) {\n    callback = conditions;\n    conditions = {};\n    projection = null;\n    options = null;\n  }\n\n  // get the mongodb collection object\n  var mq = new Query({}, options, this, this.collection);\n  mq.select(projection);\n  if (this.schema.discriminatorMapping && mq.selectedInclusively()) {\n    mq.select(this.schema.options.discriminatorKey);\n  }\n\n  return mq.findOne(conditions, callback);\n};\n\n/**\n * Counts number of matching documents in a database collection.\n *\n * ####Example:\n *\n *     Adventure.count({ type: 'jungle' }, function (err, count) {\n *       if (err) ..\n *       console.log('there are %d jungle adventures', count);\n *     });\n *\n * @param {Object} conditions\n * @param {Function} [callback]\n * @return {Query}\n * @api public\n */\n\nModel.count = function count (conditions, callback) {\n  if ('function' === typeof conditions)\n    callback = conditions, conditions = {};\n\n  // get the mongodb collection object\n  var mq = new Query({}, {}, this, this.collection);\n\n  return mq.count(conditions, callback);\n};\n\n/**\n * Creates a Query for a `distinct` operation.\n *\n * Passing a `callback` immediately executes the query.\n *\n * ####Example\n *\n *     Link.distinct('url', { clicks: {$gt: 100}}, function (err, result) {\n *       if (err) return handleError(err);\n *\n *       assert(Array.isArray(result));\n *       console.log('unique urls with more than 100 clicks', result);\n *     })\n *\n *     var query = Link.distinct('url');\n *     query.exec(callback);\n *\n * @param {String} field\n * @param {Object} [conditions] optional\n * @param {Function} [callback]\n * @return {Query}\n * @api public\n */\n\nModel.distinct = function distinct (field, conditions, callback) {\n  // get the mongodb collection object\n  var mq = new Query({}, {}, this, this.collection);\n\n  if ('function' == typeof conditions) {\n    callback = conditions;\n    conditions = {};\n  }\n\n  return mq.distinct(field, conditions, callback);\n};\n\n/**\n * Creates a Query, applies the passed conditions, and returns the Query.\n *\n * For example, instead of writing:\n *\n *     User.find({age: {$gte: 21, $lte: 65}}, callback);\n *\n * we can instead write:\n *\n *     User.where('age').gte(21).lte(65).exec(callback);\n *\n * Since the Query class also supports `where` you can continue chaining\n *\n *     User\n *     .where('age').gte(21).lte(65)\n *     .where('name', /^b/i)\n *     ... etc\n *\n * @param {String} path\n * @param {Object} [val] optional value\n * @return {Query}\n * @api public\n */\n\nModel.where = function where (path, val) {\n  // get the mongodb collection object\n  var mq = new Query({}, {}, this, this.collection).find({});\n  return mq.where.apply(mq, arguments);\n};\n\n/**\n * Creates a `Query` and specifies a `$where` condition.\n *\n * Sometimes you need to query for things in mongodb using a JavaScript expression. You can do so via `find({ $where: javascript })`, or you can use the mongoose shortcut method $where via a Query chain or from your mongoose Model.\n *\n *     Blog.$where('this.comments.length > 5').exec(function (err, docs) {});\n *\n * @param {String|Function} argument is a javascript string or anonymous function\n * @method $where\n * @memberOf Model\n * @return {Query}\n * @see Query.$where #query_Query-%24where\n * @api public\n */\n\nModel.$where = function $where () {\n  var mq = new Query({}, {}, this, this.collection).find({});\n  return mq.$where.apply(mq, arguments);\n};\n\n/**\n * Issues a mongodb findAndModify update command.\n *\n * Finds a matching document, updates it according to the `update` arg, passing any `options`, and returns the found document (if any) to the callback. The query executes immediately if `callback` is passed else a Query object is returned.\n *\n * ####Options:\n *\n * - `new`: bool - if true, return the modified document rather than the original. defaults to false (changed in 4.0)\n * - `upsert`: bool - creates the object if it doesn't exist. defaults to false.\n * - `sort`: if multiple docs are found by the conditions, sets the sort order to choose which doc to update\n * - `select`: sets the document fields to return\n *\n * ####Examples:\n *\n *     A.findOneAndUpdate(conditions, update, options, callback) // executes\n *     A.findOneAndUpdate(conditions, update, options)  // returns Query\n *     A.findOneAndUpdate(conditions, update, callback) // executes\n *     A.findOneAndUpdate(conditions, update)           // returns Query\n *     A.findOneAndUpdate()                             // returns Query\n *\n * ####Note:\n *\n * All top level update keys which are not `atomic` operation names are treated as set operations:\n *\n * ####Example:\n *\n *     var query = { name: 'borne' };\n *     Model.findOneAndUpdate(query, { name: 'jason borne' }, options, callback)\n *\n *     // is sent as\n *     Model.findOneAndUpdate(query, { $set: { name: 'jason borne' }}, options, callback)\n *\n * This helps prevent accidentally overwriting your document with `{ name: 'jason borne' }`.\n *\n * ####Note:\n *\n * Although values are cast to their appropriate types when using the findAndModify helpers, the following are *not* applied:\n *\n * - defaults\n * - setters\n * - validators\n * - middleware\n *\n * If you need those features, use the traditional approach of first retrieving the document.\n *\n *     Model.findOne({ name: 'borne' }, function (err, doc) {\n *       if (err) ..\n *       doc.name = 'jason borne';\n *       doc.save(callback);\n *     })\n *\n * @param {Object} [conditions]\n * @param {Object} [update]\n * @param {Object} [options]\n * @param {Function} [callback]\n * @return {Query}\n * @see mongodb http://www.mongodb.org/display/DOCS/findAndModify+Command\n * @api public\n */\n\nModel.findOneAndUpdate = function (conditions, update, options, callback) {\n  if ('function' == typeof options) {\n    callback = options;\n    options = null;\n  }\n  else if (1 === arguments.length) {\n    if ('function' == typeof conditions) {\n      var msg = 'Model.findOneAndUpdate(): First argument must not be a function.\\n\\n'\n              + '  ' + this.modelName + '.findOneAndUpdate(conditions, update, options, callback)\\n'\n              + '  ' + this.modelName + '.findOneAndUpdate(conditions, update, options)\\n'\n              + '  ' + this.modelName + '.findOneAndUpdate(conditions, update)\\n'\n              + '  ' + this.modelName + '.findOneAndUpdate(update)\\n'\n              + '  ' + this.modelName + '.findOneAndUpdate()\\n';\n      throw new TypeError(msg)\n    }\n    update = conditions;\n    conditions = undefined;\n  }\n\n  var fields;\n  if (options && options.fields) {\n    fields = options.fields;\n    options.fields = undefined;\n  }\n\n  update = utils.clone(update, { depopulate: 1 });\n  if (this.schema.options.versionKey && options && options.upsert) {\n    if (!update.$setOnInsert) {\n      update.$setOnInsert = {};\n    }\n    update.$setOnInsert[this.schema.options.versionKey] = 0;\n  }\n\n  var mq = new Query({}, {}, this, this.collection);\n  mq.select(fields);\n\n  return mq.findOneAndUpdate(conditions, update, options, callback);\n}\n\n/**\n * Issues a mongodb findAndModify update command by a documents id.\n *\n * Finds a matching document, updates it according to the `update` arg, passing any `options`, and returns the found document (if any) to the callback. The query executes immediately if `callback` is passed else a Query object is returned.\n *\n * ####Options:\n *\n * - `new`: bool - true to return the modified document rather than the original. defaults to true\n * - `upsert`: bool - creates the object if it doesn't exist. defaults to false.\n * - `sort`: if multiple docs are found by the conditions, sets the sort order to choose which doc to update\n * - `select`: sets the document fields to return\n *\n * ####Examples:\n *\n *     A.findByIdAndUpdate(id, update, options, callback) // executes\n *     A.findByIdAndUpdate(id, update, options)  // returns Query\n *     A.findByIdAndUpdate(id, update, callback) // executes\n *     A.findByIdAndUpdate(id, update)           // returns Query\n *     A.findByIdAndUpdate()                     // returns Query\n *\n * Finds a matching document, updates it according to the `update` arg, passing any `options`, and returns the found document (if any) to the callback. The query executes      immediately if `callback` is passed else a Query object is returned.\n *\n * ####Options:\n *\n * - `new`: bool - true to return the modified document rather than the original. defaults to true\n * - `upsert`: bool - creates the object if it doesn't exist. defaults to false.\n * - `sort`: if multiple docs are found by the conditions, sets the sort order to choose which doc to update\n *\n * ####Note:\n *\n * All top level update keys which are not `atomic` operation names are treated as set operations:\n *\n * ####Example:\n *\n *     Model.findByIdAndUpdate(id, { name: 'jason borne' }, options, callback)\n *\n *     // is sent as\n *     Model.findByIdAndUpdate(id, { $set: { name: 'jason borne' }}, options, callback)\n *\n * This helps prevent accidentally overwriting your document with `{ name: 'jason borne' }`.\n *\n * ####Note:\n *\n * Although values are cast to their appropriate types when using the findAndModify helpers, the following are *not* applied:\n *\n * - defaults\n * - setters\n * - validators\n * - middleware\n *\n * If you need those features, use the traditional approach of first retrieving the document.\n *\n *     Model.findById(id, function (err, doc) {\n *       if (err) ..\n *       doc.name = 'jason borne';\n *       doc.save(callback);\n *     })\n *\n * @param {ObjectId|HexId} id an ObjectId or string that can be cast to one.\n * @param {Object} [update]\n * @param {Object} [options]\n * @param {Function} [callback]\n * @return {Query}\n * @see Model.findOneAndUpdate #model_Model.findOneAndUpdate\n * @see mongodb http://www.mongodb.org/display/DOCS/findAndModify+Command\n * @api public\n */\n\nModel.findByIdAndUpdate = function (id, update, options, callback) {\n  var args;\n  if (1 === arguments.length) {\n    if ('function' == typeof id) {\n      var msg = 'Model.findByIdAndUpdate(): First argument must not be a function.\\n\\n'\n                + '  ' + this.modelName + '.findByIdAndUpdate(id, callback)\\n'\n                + '  ' + this.modelName + '.findByIdAndUpdate(id)\\n'\n                + '  ' + this.modelName + '.findByIdAndUpdate()\\n';\n      throw new TypeError(msg)\n    }\n    return this.findOneAndUpdate({_id: id }, undefined);\n  }\n\n  args = utils.args(arguments, 1);\n\n  // if a model is passed in instead of an id\n  if (id && id._id) {\n    id = id._id;\n  }\n  if (id) {\n    args.unshift({ _id: id });\n  }\n  return this.findOneAndUpdate.apply(this, args);\n}\n\n/**\n * Issue a mongodb findAndModify remove command.\n *\n * Finds a matching document, removes it, passing the found document (if any) to the callback.\n *\n * Executes immediately if `callback` is passed else a Query object is returned.\n *\n * ####Options:\n *\n * - `sort`: if multiple docs are found by the conditions, sets the sort order to choose which doc to update\n * - `select`: sets the document fields to return\n *\n * ####Examples:\n *\n *     A.findOneAndRemove(conditions, options, callback) // executes\n *     A.findOneAndRemove(conditions, options)  // return Query\n *     A.findOneAndRemove(conditions, callback) // executes\n *     A.findOneAndRemove(conditions) // returns Query\n *     A.findOneAndRemove()           // returns Query\n *\n * Although values are cast to their appropriate types when using the findAndModify helpers, the following are *not* applied:\n *\n * - defaults\n * - setters\n * - validators\n * - middleware\n *\n * If you need those features, use the traditional approach of first retrieving the document.\n *\n *     Model.findById(id, function (err, doc) {\n *       if (err) ..\n *       doc.remove(callback);\n *     })\n *\n * @param {Object} conditions\n * @param {Object} [options]\n * @param {Function} [callback]\n * @return {Query}\n * @see mongodb http://www.mongodb.org/display/DOCS/findAndModify+Command\n * @api public\n */\n\nModel.findOneAndRemove = function (conditions, options, callback) {\n  if (1 === arguments.length && 'function' == typeof conditions) {\n    var msg = 'Model.findOneAndRemove(): First argument must not be a function.\\n\\n'\n              + '  ' + this.modelName + '.findOneAndRemove(conditions, callback)\\n'\n              + '  ' + this.modelName + '.findOneAndRemove(conditions)\\n'\n              + '  ' + this.modelName + '.findOneAndRemove()\\n';\n    throw new TypeError(msg)\n  }\n\n  if ('function' == typeof options) {\n    callback = options;\n    options = undefined;\n  }\n\n  var fields;\n  if (options) {\n    fields = options.select;\n    options.select = undefined;\n  }\n\n  var mq = new Query({}, {}, this, this.collection);\n  mq.select(fields);\n\n  return mq.findOneAndRemove(conditions, options, callback);\n}\n\n/**\n * Issue a mongodb findAndModify remove command by a documents id.\n *\n * Finds a matching document, removes it, passing the found document (if any) to the callback.\n *\n * Executes immediately if `callback` is passed, else a `Query` object is returned.\n *\n * ####Options:\n *\n * - `sort`: if multiple docs are found by the conditions, sets the sort order to choose which doc to update\n * - `select`: sets the document fields to return\n *\n * ####Examples:\n *\n *     A.findByIdAndRemove(id, options, callback) // executes\n *     A.findByIdAndRemove(id, options)  // return Query\n *     A.findByIdAndRemove(id, callback) // executes\n *     A.findByIdAndRemove(id) // returns Query\n *     A.findByIdAndRemove()           // returns Query\n *\n * @param {ObjectId|HexString} id ObjectId or string that can be cast to one\n * @param {Object} [options]\n * @param {Function} [callback]\n * @return {Query}\n * @see Model.findOneAndRemove #model_Model.findOneAndRemove\n * @see mongodb http://www.mongodb.org/display/DOCS/findAndModify+Command\n */\n\nModel.findByIdAndRemove = function (id, options, callback) {\n  if (1 === arguments.length && 'function' == typeof id) {\n    var msg = 'Model.findByIdAndRemove(): First argument must not be a function.\\n\\n'\n              + '  ' + this.modelName + '.findByIdAndRemove(id, callback)\\n'\n              + '  ' + this.modelName + '.findByIdAndRemove(id)\\n'\n              + '  ' + this.modelName + '.findByIdAndRemove()\\n';\n    throw new TypeError(msg)\n  }\n\n  return this.findOneAndRemove({ _id: id }, options, callback);\n}\n\n/**\n * Shortcut for creating a new Document that is automatically saved to the db if valid.\n *\n * ####Example:\n *\n *     // pass individual docs\n *     Candy.create({ type: 'jelly bean' }, { type: 'snickers' }, function (err, jellybean, snickers) {\n *       if (err) // ...\n *     });\n *\n *     // pass an array\n *     var array = [{ type: 'jelly bean' }, { type: 'snickers' }];\n *     Candy.create(array, function (err, candies) {\n *       if (err) // ...\n *\n *       var jellybean = candies[0];\n *       var snickers = candies[1];\n *       // ...\n *     });\n *\n *     // callback is optional; use the returned promise if you like:\n *     var promise = Candy.create({ type: 'jawbreaker' });\n *     promise.then(function (jawbreaker) {\n *       // ...\n *     })\n *\n * @param {Array|Object...} doc(s)\n * @param {Function} [fn] callback\n * @return {Promise}\n * @api public\n */\n\nModel.create = function create (doc, fn) {\n  var args\n    , cb\n\n  if (Array.isArray(doc)) {\n    args = doc;\n    cb = fn;\n  } else {\n    var last = arguments[arguments.length - 1];\n    if ('function' == typeof last) {\n      cb = last;\n      args = utils.args(arguments, 0, arguments.length - 1);\n    } else {\n      args = utils.args(arguments);\n    }\n  }\n\n  var promise = new Promise(cb);\n  var ModelConstructor = this;\n  if (args.length === 0) {\n    process.nextTick(function() {\n      promise.fulfill.apply(promise, null);\n    });\n    return promise;\n  }\n\n  var toExecute = [];\n  args.forEach(function(doc) {\n    toExecute.push(function(callback) {\n      (new ModelConstructor(doc)).save(function(error, doc) {\n        callback(error, doc);\n      });\n    });\n  });\n\n  async.parallel(toExecute, function(error, savedDocs) {\n    if (error) {\n      return promise.reject(error);\n    }\n\n    if (doc instanceof Array) {\n      promise.fulfill.call(promise, savedDocs);\n    } else {\n      promise.fulfill.apply(promise, savedDocs);\n    }\n  });\n\n  return promise;\n};\n\n/**\n * Shortcut for creating a new Document from existing raw data, pre-saved in the DB.\n * The document returned has no paths marked as modified initially.\n *\n * ####Example:\n *\n *     // hydrate previous data into a Mongoose document\n *     var mongooseCandy = Candy.hydrate({ _id: '54108337212ffb6d459f854c', type: 'jelly bean' });\n *\n * @param {Object} obj\n * @return {Document}\n * @api public\n */\n\nModel.hydrate = function (obj) {\n  var model = require('./queryhelpers').createModel(this, obj);\n  model.init(obj);\n  return model;\n};\n\n/**\n * Updates documents in the database without returning them.\n *\n * ####Examples:\n *\n *     MyModel.update({ age: { $gt: 18 } }, { oldEnough: true }, fn);\n *     MyModel.update({ name: 'Tobi' }, { ferret: true }, { multi: true }, function (err, raw) {\n *       if (err) return handleError(err);\n *       console.log('The raw response from Mongo was ', raw);\n *     });\n *\n * ####Valid options:\n *\n *  - `safe` (boolean) safe mode (defaults to value set in schema (true))\n *  - `upsert` (boolean) whether to create the doc if it doesn't match (false)\n *  - `multi` (boolean) whether multiple documents should be updated (false)\n *  - `strict` (boolean) overrides the `strict` option for this update\n *  - `overwrite` (boolean) disables update-only mode, allowing you to overwrite the doc (false)\n *\n * All `update` values are cast to their appropriate SchemaTypes before being sent.\n *\n * The `callback` function receives `(err, rawResponse)`.\n *\n * - `err` is the error if any occurred\n * - `rawResponse` is the full response from Mongo\n *\n * ####Note:\n *\n * All top level keys which are not `atomic` operation names are treated as set operations:\n *\n * ####Example:\n *\n *     var query = { name: 'borne' };\n *     Model.update(query, { name: 'jason borne' }, options, callback)\n *\n *     // is sent as\n *     Model.update(query, { $set: { name: 'jason borne' }}, options, callback)\n *     // if overwrite option is false. If overwrite is true, sent without the $set wrapper.\n *\n * This helps prevent accidentally overwriting all documents in your collection with `{ name: 'jason borne' }`.\n *\n * ####Note:\n *\n * Be careful to not use an existing model instance for the update clause (this won't work and can cause weird behavior like infinite loops). Also, ensure that the update clause does not have an _id property, which causes Mongo to return a \"Mod on _id not allowed\" error.\n *\n * ####Note:\n *\n * To update documents without waiting for a response from MongoDB, do not pass a `callback`, then call `exec` on the returned [Query](#query-js):\n *\n *     Comment.update({ _id: id }, { $set: { text: 'changed' }}).exec();\n *\n * ####Note:\n *\n * Although values are casted to their appropriate types when using update, the following are *not* applied:\n *\n * - defaults\n * - setters\n * - validators\n * - middleware\n *\n * If you need those features, use the traditional approach of first retrieving the document.\n *\n *     Model.findOne({ name: 'borne' }, function (err, doc) {\n *       if (err) ..\n *       doc.name = 'jason borne';\n *       doc.save(callback);\n *     })\n *\n * @see strict http://mongoosejs.com/docs/guide.html#strict\n * @see response http://docs.mongodb.org/v2.6/reference/command/update/#output\n * @param {Object} conditions\n * @param {Object} doc\n * @param {Object} [options]\n * @param {Function} [callback]\n * @return {Query}\n * @api public\n */\n\nModel.update = function update (conditions, doc, options, callback) {\n  var mq = new Query({}, {}, this, this.collection);\n  // gh-2406\n  // make local deep copy of conditions\n  conditions = utils.clone(conditions);\n  options = typeof options === 'function' ? options : utils.clone(options);\n\n  return mq.update(conditions, doc, options, callback);\n};\n\n/**\n * Executes a mapReduce command.\n *\n * `o` is an object specifying all mapReduce options as well as the map and reduce functions. All options are delegated to the driver implementation. See [node-mongodb-native mapReduce() documentation](http://mongodb.github.io/node-mongodb-native/api-generated/collection.html#mapreduce) for more detail about options.\n *\n * ####Example:\n *\n *     var o = {};\n *     o.map = function () { emit(this.name, 1) }\n *     o.reduce = function (k, vals) { return vals.length }\n *     User.mapReduce(o, function (err, results) {\n *       console.log(results)\n *     })\n *\n * ####Other options:\n *\n * - `query` {Object} query filter object.\n * - `sort` {Object} sort input objects using this key\n * - `limit` {Number} max number of documents\n * - `keeptemp` {Boolean, default:false} keep temporary data\n * - `finalize` {Function} finalize function\n * - `scope` {Object} scope variables exposed to map/reduce/finalize during execution\n * - `jsMode` {Boolean, default:false} it is possible to make the execution stay in JS. Provided in MongoDB > 2.0.X\n * - `verbose` {Boolean, default:false} provide statistics on job execution time.\n * - `readPreference` {String}\n * - `out*` {Object, default: {inline:1}} sets the output target for the map reduce job.\n *\n * ####* out options:\n *\n * - `{inline:1}` the results are returned in an array\n * - `{replace: 'collectionName'}` add the results to collectionName: the results replace the collection\n * - `{reduce: 'collectionName'}` add the results to collectionName: if dups are detected, uses the reducer / finalize functions\n * - `{merge: 'collectionName'}` add the results to collectionName: if dups exist the new docs overwrite the old\n *\n * If `options.out` is set to `replace`, `merge`, or `reduce`, a Model instance is returned that can be used for further querying. Queries run against this model are all executed with the `lean` option; meaning only the js object is returned and no Mongoose magic is applied (getters, setters, etc).\n *\n * ####Example:\n *\n *     var o = {};\n *     o.map = function () { emit(this.name, 1) }\n *     o.reduce = function (k, vals) { return vals.length }\n *     o.out = { replace: 'createdCollectionNameForResults' }\n *     o.verbose = true;\n *\n *     User.mapReduce(o, function (err, model, stats) {\n *       console.log('map reduce took %d ms', stats.processtime)\n *       model.find().where('value').gt(10).exec(function (err, docs) {\n *         console.log(docs);\n *       });\n *     })\n *\n *     // a promise is returned so you may instead write\n *     var promise = User.mapReduce(o);\n *     promise.then(function (model, stats) {\n *       console.log('map reduce took %d ms', stats.processtime)\n *       return model.find().where('value').gt(10).exec();\n *     }).then(function (docs) {\n *        console.log(docs);\n *     }).then(null, handleError).end()\n *\n * @param {Object} o an object specifying map-reduce options\n * @param {Function} [callback] optional callback\n * @see http://www.mongodb.org/display/DOCS/MapReduce\n * @return {Promise}\n * @api public\n */\n\nModel.mapReduce = function mapReduce (o, callback) {\n  var promise = new Promise(callback);\n  var self = this;\n\n  if (!Model.mapReduce.schema) {\n    var opts = { noId: true, noVirtualId: true, strict: false }\n    Model.mapReduce.schema = new Schema({}, opts);\n  }\n\n  if (!o.out) o.out = { inline: 1 };\n  if (false !== o.verbose) o.verbose = true;\n\n  o.map = String(o.map);\n  o.reduce = String(o.reduce);\n\n  if (o.query) {\n    var q = new Query(o.query);\n    q.cast(this);\n    o.query = q._conditions;\n    q = undefined;\n  }\n\n  this.collection.mapReduce(null, null, o, function (err, ret, stats) {\n    if (err) return promise.error(err);\n\n    if (ret.findOne && ret.mapReduce) {\n      // returned a collection, convert to Model\n      var model = Model.compile(\n          '_mapreduce_' + ret.collectionName\n        , Model.mapReduce.schema\n        , ret.collectionName\n        , self.db\n        , self.base);\n\n      model._mapreduce = true;\n\n      return promise.fulfill(model, stats);\n    }\n\n    promise.fulfill(ret, stats);\n  });\n\n  return promise;\n}\n\n/**\n * geoNear support for Mongoose\n *\n * ####Options:\n * - `lean` {Boolean} return the raw object\n * - All options supported by the driver are also supported\n *\n * ####Example:\n *\n *     // Legacy point\n *     Model.geoNear([1,3], { maxDistance : 5, spherical : true }, function(err, results, stats) {\n *        console.log(results);\n *     });\n *\n *     // geoJson\n *     var point = { type : \"Point\", coordinates : [9,9] };\n *     Model.geoNear(point, { maxDistance : 5, spherical : true }, function(err, results, stats) {\n *        console.log(results);\n *     });\n *\n * @param {Object/Array} GeoJSON point or legacy coordinate pair [x,y] to search near\n * @param {Object} options for the qurery\n * @param {Function} [callback] optional callback for the query\n * @return {Promise}\n * @see http://docs.mongodb.org/manual/core/2dsphere/\n * @see http://mongodb.github.io/node-mongodb-native/api-generated/collection.html?highlight=geonear#geoNear\n * @api public\n */\n\nModel.geoNear = function (near, options, callback) {\n  if ('function' == typeof options) {\n    callback = options;\n    options = {};\n  }\n\n  var self = this;\n  var promise = new Promise(callback);\n  if (!near) {\n    promise.error(new Error(\"Must pass a near option to geoNear\"));\n    return promise;\n  }\n\n  var x,y;\n\n  var handler = function (err, res) {\n    if (err) return promise.error(err);\n    if (options.lean) return promise.fulfill(res.results, res.stats);\n\n    var count = res.results.length;\n    // if there are no results, fulfill the promise now\n    if (count == 0) {\n      return promise.fulfill(res.results, res.stats);\n    }\n\n    var errSeen = false;\n    for (var i=0; i < res.results.length; i++) {\n      var temp = res.results[i].obj;\n      res.results[i].obj = new self();\n      res.results[i].obj.init(temp, function (err) {\n        if (err && !errSeen) {\n          errSeen = true;\n          return promise.error(err);\n        }\n        --count || promise.fulfill(res.results, res.stats);\n      });\n    }\n  };\n\n  if (Array.isArray(near)) {\n    if (near.length != 2) {\n      promise.error(new Error(\"If using legacy coordinates, must be an array of size 2 for geoNear\"));\n      return promise;\n    }\n    x = near[0];\n    y = near[1];\n    this.collection.geoNear(x, y, options, handler);\n  } else {\n    if (near.type != \"Point\" || !Array.isArray(near.coordinates)) {\n      promise.error(new Error(\"Must pass either a legacy coordinate array or GeoJSON Point to geoNear\"));\n      return promise;\n    }\n\n    this.collection.geoNear(near, options, handler);\n  }\n\n  return promise;\n};\n\n/**\n * Performs [aggregations](http://docs.mongodb.org/manual/applications/aggregation/) on the models collection.\n *\n * If a `callback` is passed, the `aggregate` is executed and a `Promise` is returned. If a callback is not passed, the `aggregate` itself is returned.\n *\n * ####Example:\n *\n *     // Find the max balance of all accounts\n *     Users.aggregate(\n *         { $group: { _id: null, maxBalance: { $max: '$balance' }}}\n *       , { $project: { _id: 0, maxBalance: 1 }}\n *       , function (err, res) {\n *       if (err) return handleError(err);\n *       console.log(res); // [ { maxBalance: 98000 } ]\n *     });\n *\n *     // Or use the aggregation pipeline builder.\n *     Users.aggregate()\n *       .group({ _id: null, maxBalance: { $max: '$balance' } })\n *       .select('-id maxBalance')\n *       .exec(function (err, res) {\n *         if (err) return handleError(err);\n *         console.log(res); // [ { maxBalance: 98 } ]\n *     });\n *\n * ####NOTE:\n *\n * - Arguments are not cast to the model's schema because `$project` operators allow redefining the \"shape\" of the documents at any stage of the pipeline, which may leave documents in an incompatible format.\n * - The documents returned are plain javascript objects, not mongoose documents (since any shape of document can be returned).\n * - Requires MongoDB >= 2.1\n *\n * @see Aggregate #aggregate_Aggregate\n * @see MongoDB http://docs.mongodb.org/manual/applications/aggregation/\n * @param {Object|Array} [...] aggregation pipeline operator(s) or operator array\n * @param {Function} [callback]\n * @return {Aggregate|Promise}\n * @api public\n */\n\nModel.aggregate = function aggregate () {\n  var args = [].slice.call(arguments)\n    , aggregate\n    , callback;\n\n  if ('function' === typeof args[args.length - 1]) {\n    callback = args.pop();\n  }\n\n  if (1 === args.length && util.isArray(args[0])) {\n    aggregate = new Aggregate(args[0]);\n  } else {\n    aggregate = new Aggregate(args);\n  }\n\n  aggregate.bind(this);\n\n  if ('undefined' === typeof callback) {\n    return aggregate;\n  }\n\n  return aggregate.exec(callback);\n}\n\n/**\n * Implements `$geoSearch` functionality for Mongoose\n *\n * ####Example:\n *\n *     var options = { near: [10, 10], maxDistance: 5 };\n *     Locations.geoSearch({ type : \"house\" }, options, function(err, res) {\n *       console.log(res);\n *     });\n *\n * ####Options:\n * - `near` {Array} x,y point to search for\n * - `maxDistance` {Number} the maximum distance from the point near that a result can be\n * - `limit` {Number} The maximum number of results to return\n * - `lean` {Boolean} return the raw object instead of the Mongoose Model\n *\n * @param {Object} condition an object that specifies the match condition (required)\n * @param {Object} options for the geoSearch, some (near, maxDistance) are required\n * @param {Function} [callback] optional callback\n * @return {Promise}\n * @see http://docs.mongodb.org/manual/reference/command/geoSearch/\n * @see http://docs.mongodb.org/manual/core/geohaystack/\n * @api public\n */\n\nModel.geoSearch = function (conditions, options, callback) {\n  if ('function' == typeof options) {\n    callback = options;\n    options = {};\n  }\n\n  var promise = new Promise(callback);\n\n  if (conditions == undefined || !utils.isObject(conditions)) {\n    return promise.error(new Error(\"Must pass conditions to geoSearch\"));\n  }\n\n  if (!options.near) {\n    return promise.error(new Error(\"Must specify the near option in geoSearch\"));\n  }\n\n  if (!Array.isArray(options.near)) {\n    return promise.error(new Error(\"near option must be an array [x, y]\"));\n  }\n\n\n  // send the conditions in the options object\n  options.search = conditions;\n  var self = this;\n\n  this.collection.geoHaystackSearch(options.near[0], options.near[1], options, function (err, res) {\n    // have to deal with driver problem. Should be fixed in a soon-ish release\n    // (7/8/2013)\n    if (err || res.errmsg) {\n      if (!err) err = new Error(res.errmsg);\n      if (res && res.code !== undefined) err.code = res.code;\n      return promise.error(err);\n    }\n\n    var count = res.results.length;\n    if (options.lean || (count == 0)) return promise.fulfill(res.results, res.stats);\n\n    var errSeen = false;\n    for (var i=0; i < res.results.length; i++) {\n      var temp = res.results[i];\n      res.results[i] = new self();\n      res.results[i].init(temp, {}, function (err) {\n        if (err && !errSeen) {\n          errSeen = true;\n          return promise.error(err);\n        }\n\n        --count || (!errSeen && promise.fulfill(res.results, res.stats));\n      });\n    }\n  });\n\n  return promise;\n};\n\n/**\n * Populates document references.\n *\n * ####Available options:\n *\n * - path: space delimited path(s) to populate\n * - select: optional fields to select\n * - match: optional query conditions to match\n * - model: optional name of the model to use for population\n * - options: optional query options like sort, limit, etc\n *\n * ####Examples:\n *\n *     // populates a single object\n *     User.findById(id, function (err, user) {\n *       var opts = [\n *           { path: 'company', match: { x: 1 }, select: 'name' }\n *         , { path: 'notes', options: { limit: 10 }, model: 'override' }\n *       ]\n *\n *       User.populate(user, opts, function (err, user) {\n *         console.log(user);\n *       })\n *     })\n *\n *     // populates an array of objects\n *     User.find(match, function (err, users) {\n *       var opts = [{ path: 'company', match: { x: 1 }, select: 'name' }]\n *\n *       var promise = User.populate(users, opts);\n *       promise.then(console.log).end();\n *     })\n *\n *     // imagine a Weapon model exists with two saved documents:\n *     //   { _id: 389, name: 'whip' }\n *     //   { _id: 8921, name: 'boomerang' }\n *\n *     var user = { name: 'Indiana Jones', weapon: 389 }\n *     Weapon.populate(user, { path: 'weapon', model: 'Weapon' }, function (err, user) {\n *       console.log(user.weapon.name) // whip\n *     })\n *\n *     // populate many plain objects\n *     var users = [{ name: 'Indiana Jones', weapon: 389 }]\n *     users.push({ name: 'Batman', weapon: 8921 })\n *     Weapon.populate(users, { path: 'weapon' }, function (err, users) {\n *       users.forEach(function (user) {\n *         console.log('%s uses a %s', users.name, user.weapon.name)\n *         // Indiana Jones uses a whip\n *         // Batman uses a boomerang\n *       })\n *     })\n *     // Note that we didn't need to specify the Weapon model because\n *     // we were already using it's populate() method.\n *\n * @param {Document|Array} docs Either a single document or array of documents to populate.\n * @param {Object} options A hash of key/val (path, options) used for population.\n * @param {Function} [cb(err,doc)] Optional callback, executed upon completion. Receives `err` and the `doc(s)`.\n * @return {Promise}\n * @api public\n */\n\nModel.populate = function (docs, paths, cb) {\n  var promise = new Promise(cb);\n\n  // always resolve on nextTick for consistent async behavior\n  function resolve () {\n    var args = utils.args(arguments);\n    process.nextTick(function () {\n      promise.resolve.apply(promise, args);\n    });\n  }\n\n  // normalized paths\n  var paths = utils.populate(paths);\n  var pending = paths.length;\n\n  if (0 === pending) {\n    resolve(null, docs);\n    return promise;\n  }\n\n  // each path has its own query options and must be executed separately\n  var i = pending;\n  var path;\n  var model = this;\n  while (i--) {\n    path = paths[i];\n    if ('function' === typeof path.model) model = path.model;\n    populate(model, docs, path, next);\n  }\n\n  return promise;\n\n  function next (err) {\n    if (err) return resolve(err);\n    if (--pending) return;\n    resolve(null, docs);\n  }\n}\n\n/*!\n * Populates `docs`\n */\nvar excludeIdReg = /\\s?-_id\\s?/,\n  excludeIdRegGlobal = /\\s?-_id\\s?/g;\n\nfunction populate(model, docs, options, cb) {\n  var modelsMap, rawIds;\n\n  // normalize single / multiple docs passed\n  if (!Array.isArray(docs)) {\n    docs = [docs];\n  }\n\n  if (0 === docs.length || docs.every(utils.isNullOrUndefined)) {\n    return cb();\n  }\n\n  modelsMap = getModelsMapForPopulate(model, docs, options);\n  rawIds = getIdsForAndAddIdsInMapPopulate(modelsMap);\n\n  var i, len = modelsMap.length,\n    mod, match, select, promise, vals = [];\n\n  promise = new Promise(function(err, vals, options, assignmentOpts) {\n    if (err) return cb(err);\n\n    var lean = options.options && options.options.lean,\n      len = vals.length,\n      rawOrder = {}, rawDocs = {}, key, val;\n\n    // optimization:\n    // record the document positions as returned by\n    // the query result.\n    for (var i = 0; i < len; i++) {\n      val = vals[i];\n      key = String(utils.getValue('_id', val));\n      rawDocs[key] = val;\n      rawOrder[key] = i;\n\n      // flag each as result of population\n      if (!lean) val.$__.wasPopulated = true;\n    }\n\n    assignVals({\n      rawIds: rawIds,\n      rawDocs: rawDocs,\n      rawOrder: rawOrder,\n      docs: docs,\n      path: options.path,\n      options: assignmentOpts\n    });\n    cb();\n  });\n\n  for (i = 0; i < len; i++) {\n    mod = modelsMap[i];\n    select = mod.options.select;\n\n    if (mod.options.match) {\n      match = utils.object.shallowCopy(mod.options.match);\n    } else {\n      match = {};\n    }\n\n    var ids = utils.array.flatten(mod.ids, function(item) {\n      // no need to include undefined values in our query\n      return undefined !== item;\n    });\n\n    ids = utils.array.unique(ids);\n\n    if (0 === ids.length || ids.every(utils.isNullOrUndefined)) {\n      return cb();\n    }\n\n    match._id || (match._id = {\n      $in: ids\n    });\n\n    var assignmentOpts = {};\n    assignmentOpts.sort = mod.options.options && mod.options.options.sort || undefined;\n    assignmentOpts.excludeId = excludeIdReg.test(select) || (select && 0 === select._id);\n\n    if (assignmentOpts.excludeId) {\n      // override the exclusion from the query so we can use the _id\n      // for document matching during assignment. we'll delete the\n      // _id back off before returning the result.\n      if ('string' == typeof select) {\n        select = select.replace(excludeIdRegGlobal, ' ');\n      } else {\n        // preserve original select conditions by copying\n        select = utils.object.shallowCopy(select);\n        delete select._id;\n      }\n    }\n\n    if (mod.options.options && mod.options.options.limit) {\n      assignmentOpts.originalLimit = mod.options.options.limit;\n      mod.options.options.limit = mod.options.options.limit * ids.length;\n    }\n\n    mod.Model.find(match, select, mod.options.options, next.bind(this, i + 1 < len, mod.options, assignmentOpts));\n  }\n\n  function next(end, options, assignmentOpts, err, valsFromDb) {\n    if (err) return promise.resolve(err);\n    vals = vals.concat(valsFromDb);\n    if (!end) {\n      promise.resolve(err, vals, options, assignmentOpts);\n    }\n  }\n}\n\nfunction getModelsMapForPopulate(model, docs, options) {\n  var i, doc, len = docs.length,\n    available = {},\n    map = [],\n    modelNameFromQuery = options.model && options.model.modelName || options.model,\n    schema, refPath, Model, currentOptions, modelNames, modelName, discriminatorKey, modelForFindSchema;\n\n  schema = model._getSchema(options.path);\n\n  if(schema && schema.caster){\n    schema = schema.caster;\n  }\n\n  if (!schema && model.discriminators){\n    discriminatorKey = model.schema.discriminatorMapping.key\n  }\n\n  refPath = schema && schema.options && schema.options.refPath;\n\n  for (i = 0; i < len; i++) {\n    doc = docs[i];\n\n    if(refPath){\n      modelNames = utils.getValue(refPath, doc);\n    }else{\n      if(!modelNameFromQuery){\n        var schemaForCurrentDoc;\n\n        if(!schema && discriminatorKey){\n          modelForFindSchema = utils.getValue(discriminatorKey, doc);\n\n          if(modelForFindSchema){\n            schemaForCurrentDoc = model.db.model(modelForFindSchema)._getSchema(options.path);\n\n            if(schemaForCurrentDoc && schemaForCurrentDoc.caster){\n              schemaForCurrentDoc = schemaForCurrentDoc.caster;\n            }\n          }\n        } else {\n          schemaForCurrentDoc = schema;\n        }\n\n        modelNames = [\n          schemaForCurrentDoc && schemaForCurrentDoc.options && schemaForCurrentDoc.options.ref            // declared in schema\n          || model.modelName                                           // an ad-hoc structure\n        ]\n      }else{\n        modelNames = [modelNameFromQuery];  // query options\n      }\n    }\n\n    if (!modelNames)\n      continue;\n\n    if (!Array.isArray(modelNames)) {\n      modelNames = [modelNames];\n    }\n\n    var k = modelNames.length;\n    while (k--) {\n      modelName = modelNames[k];\n      if (!available[modelName]) {\n        Model = model.db.model(modelName);\n        currentOptions = {\n          model: Model\n        };\n\n        if(schema && !discriminatorKey){\n          options.model = Model;\n        }\n\n        utils.merge(currentOptions, options);\n\n        available[modelName] = {\n          Model: Model,\n          options: currentOptions,\n          docs: [doc],\n          ids: []\n        };\n        map.push(available[modelName]);\n      } else {\n        available[modelName].docs.push(doc);\n      }\n\n    }\n  }\n\n  return map;\n}\n\nfunction getIdsForAndAddIdsInMapPopulate(modelsMap) {\n  var rawIds = [] // for the correct position\n    ,\n    i, j, doc, docs, id, len, len2, ret, isDocument, populated, options, path;\n\n  len2 = modelsMap.length;\n  for (j = 0; j < len2; j++) {\n    docs = modelsMap[j].docs;\n    len = docs.length;\n    options = modelsMap[j].options;\n    path = options.path;\n\n    for (i = 0; i < len; i++) {\n      ret = undefined;\n      doc = docs[i];\n      id = String(utils.getValue(\"_id\", doc));\n      isDocument = !! doc.$__;\n\n      if (!ret || Array.isArray(ret) && 0 === ret.length) {\n        ret = utils.getValue(path, doc);\n      }\n\n      if (ret) {\n        ret = convertTo_id(ret);\n\n        options._docs[id] = Array.isArray(ret) ? ret.slice() : ret;\n      }\n\n      rawIds.push(ret);\n      modelsMap[j].ids.push(ret);\n\n      if (isDocument) {\n        // cache original populated _ids and model used\n        doc.populated(path, options._docs[id], options);\n      }\n    }\n  }\n\n  return rawIds;\n}\n\n/*!\n * Retrieve the _id of `val` if a Document or Array of Documents.\n *\n * @param {Array|Document|Any} val\n * @return {Array|Document|Any}\n */\n\nfunction convertTo_id (val) {\n  if (val instanceof Model) return val._id;\n\n  if (Array.isArray(val)) {\n    for (var i = 0; i < val.length; ++i) {\n      if (val[i] instanceof Model) {\n        val[i] = val[i]._id;\n      }\n    }\n    return val;\n  }\n\n  return val;\n}\n\n/*!\n * Assigns documents returned from a population query back\n * to the original document path.\n */\n\nfunction assignVals (o) {\n  // replace the original ids in our intermediate _ids structure\n  // with the documents found by query\n\n  assignRawDocsToIdStructure(o.rawIds, o.rawDocs, o.rawOrder, o.options);\n\n  // now update the original documents being populated using the\n  // result structure that contains real documents.\n\n  var docs = o.docs;\n  var path = o.path;\n  var rawIds = o.rawIds;\n  var options = o.options;\n\n  for (var i = 0; i < docs.length; ++i) {\n    utils.setValue(path, rawIds[i], docs[i], function (val) {\n      return valueFilter(val, options);\n    });\n  }\n}\n\n/*!\n * 1) Apply backwards compatible find/findOne behavior to sub documents\n *\n *    find logic:\n *      a) filter out non-documents\n *      b) remove _id from sub docs when user specified\n *\n *    findOne\n *      a) if no doc found, set to null\n *      b) remove _id from sub docs when user specified\n *\n * 2) Remove _ids when specified by users query.\n *\n * background:\n * _ids are left in the query even when user excludes them so\n * that population mapping can occur.\n */\n\nfunction valueFilter (val, assignmentOpts) {\n  if (Array.isArray(val)) {\n    // find logic\n    var ret = [];\n    var numValues = val.length;\n    for (var i = 0; i < numValues; ++i) {\n      var subdoc = val[i];\n      if (!isDoc(subdoc)) continue;\n      maybeRemoveId(subdoc, assignmentOpts);\n      ret.push(subdoc);\n      if (assignmentOpts.originalLimit &&\n          ret.length >= assignmentOpts.originalLimit) {\n        break;\n      }\n    }\n\n    // Since we don't want to have to create a new mongoosearray, make sure to\n    // modify the array in place\n    while (val.length > ret.length) {\n      Array.prototype.pop.apply(val, []);\n    }\n    for (var i = 0; i < ret.length; ++i) {\n      val[i] = ret[i];\n    }\n    return val;\n  }\n\n  // findOne\n  if (isDoc(val)) {\n    maybeRemoveId(val, assignmentOpts);\n    return val;\n  }\n\n  return null;\n}\n\n/*!\n * Remove _id from `subdoc` if user specified \"lean\" query option\n */\n\nfunction maybeRemoveId (subdoc, assignmentOpts) {\n  if (assignmentOpts.excludeId) {\n    if ('function' == typeof subdoc.setValue) {\n      delete subdoc._doc._id;\n    } else {\n      delete subdoc._id;\n    }\n  }\n}\n\n/*!\n * Determine if `doc` is a document returned\n * by a populate query.\n */\n\nfunction isDoc (doc) {\n  if (null == doc)\n    return false;\n\n  var type = typeof doc;\n  if ('string' == type)\n    return false;\n\n  if ('number' == type)\n    return false;\n\n  if (Buffer.isBuffer(doc))\n    return false;\n\n  if ('ObjectID' == doc.constructor.name)\n    return false;\n\n  // only docs\n  return true;\n}\n\n/*!\n * Assign `vals` returned by mongo query to the `rawIds`\n * structure returned from utils.getVals() honoring\n * query sort order if specified by user.\n *\n * This can be optimized.\n *\n * Rules:\n *\n *   if the value of the path is not an array, use findOne rules, else find.\n *   for findOne the results are assigned directly to doc path (including null results).\n *   for find, if user specified sort order, results are assigned directly\n *   else documents are put back in original order of array if found in results\n *\n * @param {Array} rawIds\n * @param {Array} vals\n * @param {Boolean} sort\n * @api private\n */\n\nfunction assignRawDocsToIdStructure (rawIds, resultDocs, resultOrder, options, recursed) {\n  // honor user specified sort order\n  var newOrder = [];\n  var sorting = options.sort && rawIds.length > 1;\n  var found;\n  var doc;\n  var sid;\n  var id;\n\n  for (var i = 0; i < rawIds.length; ++i) {\n    id = rawIds[i];\n\n    if (Array.isArray(id)) {\n      // handle [ [id0, id2], [id3] ]\n      assignRawDocsToIdStructure(id, resultDocs, resultOrder, options, true);\n      newOrder.push(id);\n      continue;\n    }\n\n    if (null === id && !sorting) {\n      // keep nulls for findOne unless sorting, which always\n      // removes them (backward compat)\n      newOrder.push(id);\n      continue;\n    }\n\n    sid = String(id);\n    found = false;\n\n    if (recursed) {\n      // apply find behavior\n\n      // assign matching documents in original order unless sorting\n      doc = resultDocs[sid];\n      if (doc) {\n        if (sorting) {\n          newOrder[resultOrder[sid]] = doc;\n        } else {\n          newOrder.push(doc);\n        }\n      } else {\n        newOrder.push(id);\n      }\n    } else {\n      // apply findOne behavior - if document in results, assign, else assign null\n      newOrder[i] = doc = resultDocs[sid] || null;\n    }\n  }\n\n  rawIds.length = 0;\n  if (newOrder.length) {\n    // reassign the documents based on corrected order\n\n    // forEach skips over sparse entries in arrays so we\n    // can safely use this to our advantage dealing with sorted\n    // result sets too.\n    newOrder.forEach(function (doc, i) {\n      rawIds[i] = doc;\n    });\n  }\n}\n\n/**\n * Finds the schema for `path`. This is different than\n * calling `schema.path` as it also resolves paths with\n * positional selectors (something.$.another.$.path).\n *\n * @param {String} path\n * @return {Schema}\n * @api private\n */\n\nModel._getSchema = function _getSchema (path) {\n  var schema = this.schema\n    , pathschema = schema.path(path);\n\n  if (pathschema)\n    return pathschema;\n\n  // look for arrays\n  return (function search (parts, schema) {\n    var p = parts.length + 1\n      , foundschema\n      , trypath\n\n    while (p--) {\n      trypath = parts.slice(0, p).join('.');\n      foundschema = schema.path(trypath);\n      if (foundschema) {\n        if (foundschema.caster) {\n\n          // array of Mixed?\n          if (foundschema.caster instanceof Types.Mixed) {\n            return foundschema.caster;\n          }\n\n          // Now that we found the array, we need to check if there\n          // are remaining document paths to look up for casting.\n          // Also we need to handle array.$.path since schema.path\n          // doesn't work for that.\n          // If there is no foundschema.schema we are dealing with\n          // a path like array.$\n          if (p !== parts.length && foundschema.schema) {\n            if ('$' === parts[p]) {\n              // comments.$.comments.$.title\n              return search(parts.slice(p+1), foundschema.schema);\n            } else {\n              // this is the last path of the selector\n              return search(parts.slice(p), foundschema.schema);\n            }\n          }\n        }\n        return foundschema;\n      }\n    }\n  })(path.split('.'), schema)\n}\n\n/*!\n * Compiler utility.\n *\n * @param {String} name model name\n * @param {Schema} schema\n * @param {String} collectionName\n * @param {Connection} connection\n * @param {Mongoose} base mongoose instance\n */\n\nModel.compile = function compile (name, schema, collectionName, connection, base) {\n  var versioningEnabled = false !== schema.options.versionKey;\n\n  if (versioningEnabled && !schema.paths[schema.options.versionKey]) {\n    // add versioning to top level documents only\n    var o = {};\n    o[schema.options.versionKey] = Number;\n    schema.add(o);\n  }\n\n  // generate new class\n  function model (doc, fields, skipId) {\n    if (!(this instanceof model))\n      return new model(doc, fields, skipId);\n    Model.call(this, doc, fields, skipId);\n  };\n\n  model.hooks = schema.s.hooks.clone();\n  model.base = base;\n  model.modelName = name;\n  model.__proto__ = Model;\n  model.prototype.__proto__ = Model.prototype;\n  model.model = Model.prototype.model;\n  model.db = model.prototype.db = connection;\n  model.discriminators = model.prototype.discriminators = undefined;\n\n  model.prototype.$__setSchema(schema);\n\n  var collectionOptions = {\n      bufferCommands: schema.options.bufferCommands\n    , capped: schema.options.capped\n  };\n\n  model.prototype.collection = connection.collection(\n      collectionName\n    , collectionOptions\n  );\n\n  // apply methods and statics\n  applyMethods(model, schema);\n  applyStatics(model, schema);\n\n  model.schema = model.prototype.schema;\n  model.collection = model.prototype.collection;\n\n  return model;\n};\n\n/*!\n * Register methods for this model\n *\n * @param {Model} model\n * @param {Schema} schema\n */\nvar applyMethods = function(model, schema) {\n  for (var i in schema.methods) {\n    if (typeof schema.methods[i] === 'function') {\n      model.prototype[i] = schema.methods[i];\n    } else {\n      (function(_i) {\n        Object.defineProperty(model.prototype, _i, {\n          get: function() {\n            var h = {};\n            for (var k in schema.methods[_i]) {\n              h[k] = schema.methods[_i][k].bind(this);\n            }\n            return h;\n          }\n        });\n      })(i);\n    }\n  }\n};\n\n/*!\n * Register statics for this model\n * @param {Model} model\n * @param {Schema} schema\n */\nvar applyStatics = function(model, schema) {\n  for (var i in schema.statics) {\n    model[i] = schema.statics[i];\n  }\n};\n\n/*!\n * Subclass this model with `conn`, `schema`, and `collection` settings.\n *\n * @param {Connection} conn\n * @param {Schema} [schema]\n * @param {String} [collection]\n * @return {Model}\n */\n\nModel.__subclass = function subclass (conn, schema, collection) {\n  // subclass model using this connection and collection name\n  var model = this;\n\n  var Model = function Model (doc, fields, skipId) {\n    if (!(this instanceof Model)) {\n      return new Model(doc, fields, skipId);\n    }\n    model.call(this, doc, fields, skipId);\n  }\n\n  Model.__proto__ = model;\n  Model.prototype.__proto__ = model.prototype;\n  Model.db = Model.prototype.db = conn;\n\n  var s = schema && 'string' != typeof schema\n    ? schema\n    : model.prototype.schema;\n\n  var options = s.options || {};\n\n  if (!collection) {\n    collection = model.prototype.schema.get('collection')\n              || utils.toCollectionName(model.modelName, options);\n  }\n\n  var collectionOptions = {\n      bufferCommands: s ? options.bufferCommands : true\n    , capped: s && options.capped\n  };\n\n  Model.prototype.collection = conn.collection(collection, collectionOptions);\n  Model.collection = Model.prototype.collection;\n  Model.init();\n  return Model;\n}\n\n/*!\n * Module exports.\n */\n\nmodule.exports = exports = Model;\n"]}