{"version":3,"sources":["connection.js"],"names":[],"mappings":";;;;;;AAIA,IAAI,kBAAkB,GAAG,OAAO,CAAC,kBAAkB,CAAC;IAChD,KAAK,GAAG,OAAO,CAAC,SAAS,CAAC;IAC1B,EAAE,GAAG,KAAK,CAAC,EAAE;IACb,MAAM,GAAG,KAAK,CAAC,MAAM;IACrB,MAAM,GAAG,KAAK,CAAC,MAAM;IACrB,MAAM,GAAG,OAAO,CAAC,uBAAuB,CAAC;IACzC,cAAc,GAAG,KAAK,CAAC,OAAO;IAC9B,KAAK,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC;;;;;;;;;AASnC,SAAS,gBAAgB,GAAG;AAC1B,oBAAkB,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;AAC1C,MAAI,CAAC,UAAU,GAAG,KAAK,CAAC;CACzB,CAAC;;;;;;;AAOF,gBAAgB,CAAC,MAAM,GAAG,MAAM,CAAC;;;;;;AAMjC,gBAAgB,CAAC,SAAS,CAAC,SAAS,GAAG,kBAAkB,CAAC,SAAS,CAAC;;;;;;;;;;AAUpE,gBAAgB,CAAC,SAAS,CAAC,MAAM,GAAG,UAAU,EAAE,EAAE;AAChD,MAAI,IAAI,CAAC,EAAE,EAAE;AACX,QAAI,CAAC,IAAI,CAAC,CAAC;GACZ;;AAED,MAAI,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;AACnE,MAAI,CAAC,EAAE,GAAG,IAAI,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;;AAErD,MAAI,IAAI,GAAG,IAAI,CAAC;AAChB,MAAI,CAAC,EAAE,CAAC,IAAI,CAAC,UAAU,GAAG,EAAE;AAC1B,QAAI,GAAG,EAAE,OAAO,EAAE,CAAC,GAAG,CAAC,CAAC;AACxB,UAAM,CAAC,IAAI,CAAC,CAAC;AACb,MAAE,EAAE,CAAC;GACN,CAAC,CAAC;;AAEH,SAAO,IAAI,CAAC;CACb,CAAC;;;;;;;;;;;;AAYF,gBAAgB,CAAC,SAAS,CAAC,KAAK,GAAG,UAAU,IAAI,EAAE;;AAEjD,MAAI,OAAO,GAAG,IAAI,IAAI,CAAC,WAAW,EAAE,CAAC;AACrC,SAAO,CAAC,IAAI,GAAG,IAAI,CAAC;AACpB,SAAO,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;AACzB,SAAO,CAAC,WAAW,GAAG,EAAE,CAAC;AACzB,SAAO,CAAC,MAAM,GAAG,EAAE,CAAC;AACpB,SAAO,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;AAC/B,SAAO,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;AAC3B,SAAO,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;AACzB,SAAO,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;AACzB,SAAO,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;AACzB,SAAO,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;AACzB,SAAO,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;AAC/B,SAAO,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;AACvC,SAAO,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;AACzC,SAAO,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;AACrC,SAAO,CAAC,UAAU,GAAG,KAAK,CAAC;;;;;;;;;AAS3B,MAAI,IAAI,GAAG,IAAI,CAAC;;AAEhB,MAAI,IAAI,CAAC,EAAE,IAAI,IAAI,CAAC,WAAW,KAAK,MAAM,CAAC,SAAS,EAAE;AACpD,UAAM,EAAE,CAAC;GACV,MAAM;AACL,QAAI,CAAC,IAAI,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC;GAChC;;AAED,WAAS,MAAM,GAAI;AACjB,WAAO,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;AAC9B,WAAO,CAAC,MAAM,EAAE,CAAC;;AAEjB,UAAM,CAAC,OAAO,CAAC,CAAC;GACjB;;AAED,SAAO,CAAC,IAAI,GAAG,IAAI,CAAC;;;AAGpB,MAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AAC5B,SAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;AAE5B,SAAO,OAAO,CAAC;CAChB,CAAC;;;;;;AAMF,SAAS,MAAM,CAAE,IAAI,EAAE;AACrB,MAAI,IAAI,CAAC,UAAU,EAAE,OAAO;AAC5B,MAAI,CAAC,UAAU,GAAG,IAAI,CAAC;;AAEvB,MAAI,CAAC,EAAE,CAAC,EAAE,CAAC,OAAO,EAAE,YAAU;AAC5B,QAAI,IAAI,CAAC,YAAY,EAAE,OAAO;;;;;AAK9B,QAAI,IAAI,CAAC,EAAE,CAAC,YAAY,CAAC,aAAa,EAAE;AACtC,UAAI,CAAC,UAAU,GAAG,MAAM,CAAC,YAAY,CAAC;AACtC,UAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AACnB,aAAO;KACR;AACD,QAAI,CAAC,OAAO,EAAE,CAAC;GAChB,CAAC,CAAC;AACH,MAAI,CAAC,EAAE,CAAC,EAAE,CAAC,OAAO,EAAE,UAAS,GAAG,EAAC;AAC/B,QAAI,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;GACzB,CAAC,CAAC;AACH,MAAI,CAAC,EAAE,CAAC,EAAE,CAAC,WAAW,EAAE,YAAW;AACjC,QAAI,CAAC,UAAU,GAAG,MAAM,CAAC,SAAS,CAAC;AACnC,QAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;GAC1B,CAAC,CAAC;AACH,MAAI,CAAC,EAAE,CAAC,EAAE,CAAC,SAAS,EAAE,UAAS,GAAG,EAAC;AACjC,QAAI,KAAK,GAAG,IAAI,KAAK,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,IAAI,oBAAoB,CAAC,CAAC;AAC9D,QAAI,CAAC,IAAI,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;GAC3B,CAAC,CAAC;AACH,MAAI,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,EAAE,UAAU,GAAG,EAAE,EAAE,EAAE;AACpC,QAAI,MAAM,CAAC,YAAY,KAAK,IAAI,CAAC,UAAU,IAAI,EAAE,IAAI,EAAE,CAAC,YAAY,EAAE;AACpE,UAAI,CAAC,UAAU,GAAG,MAAM,CAAC,SAAS,CAAC;AACnC,UAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;KAC1B;GACF,CAAC,CAAC;AACH,MAAI,CAAC,EAAE,CAAC,EAAE,CAAC,YAAY,EAAE,UAAS,GAAG,EAAE;AACrC,QAAI,CAAC,IAAI,CAAC,YAAY,EAAE,GAAG,CAAC,CAAC;GAC9B,CAAC,CAAC;CACJ;;;;;;AAMD,SAAS,IAAI,CAAE,IAAI,EAAE;AACnB,MAAI,CAAC,IAAI,CAAC,EAAE,EAAE,MAAM,IAAI,KAAK,CAAC,YAAY,CAAC,CAAC;AAC5C,MAAI,CAAC,EAAE,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC;AACpC,MAAI,CAAC,EAAE,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC;AACpC,MAAI,CAAC,EAAE,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC;AACtC,MAAI,CAAC,EAAE,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC;AACnC,MAAI,CAAC,EAAE,CAAC,kBAAkB,CAAC,WAAW,CAAC,CAAC;AACxC,MAAI,CAAC,UAAU,GAAG,KAAK,CAAC;CACzB;;;;;;;;;;;;AAYD,gBAAgB,CAAC,SAAS,CAAC,SAAS,GAAG,UAAU,EAAE,EAAE;AACnD,MAAI,IAAI,CAAC,EAAE,EAAE;AACX,QAAI,CAAC,IAAI,CAAC,CAAC;GACZ;;AAED,MAAI,OAAO,GAAG,EAAE;MACZ,IAAI,GAAG,IAAI,CAAC;;AAEhB,MAAI,CAAC,KAAK,CAAC,OAAO,CAAC,UAAU,MAAM,EAAE;AACnC,QAAI,IAAI,GAAG,MAAM,CAAC,IAAI,IAAI,MAAM,CAAC,GAAG,CAAC;AACrC,QAAI,IAAI,GAAG,MAAM,CAAC,IAAI,IAAI,KAAK,CAAC;AAChC,WAAO,CAAC,IAAI,CAAC,IAAI,MAAM,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;GAC3D,CAAC,CAAA;;AAEF,MAAI,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,GAC5B,IAAI,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,GACxC,IAAI,cAAc,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;AACtD,MAAI,CAAC,EAAE,GAAG,IAAI,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;;AAErD,MAAI,CAAC,EAAE,CAAC,EAAE,CAAC,WAAW,EAAE,YAAY;AAClC,QAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAA;GACvB,CAAC,CAAC;;AAEH,MAAI,CAAC,EAAE,CAAC,IAAI,CAAC,UAAU,GAAG,EAAE;AAC1B,QAAI,GAAG,EAAE,OAAO,EAAE,CAAC,GAAG,CAAC,CAAC;AACxB,MAAE,EAAE,CAAC;AACL,UAAM,CAAC,IAAI,CAAC,CAAC;GACd,CAAC,CAAC;;AAEH,SAAO,IAAI,CAAC;CACb,CAAC;;;;;;;;;;AAUF,gBAAgB,CAAC,SAAS,CAAC,OAAO,GAAG,UAAU,EAAE,EAAE;AACjD,MAAI,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC;AAChB,MAAI,EAAE,EAAE,EAAE,EAAE,CAAC;AACb,SAAO,IAAI,CAAC;CACb,CAAA;;;;;;;;;;;;AAYD,gBAAgB,CAAC,SAAS,CAAC,YAAY,GAAG,UAAU,MAAM,EAAE,WAAW,EAAE;AACvE,MAAI,CAAC,GAAG,MAAM,IAAI,EAAE,CAAC;AACrB,GAAC,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,GAAG,EAAE,CAAA,AAAC,CAAC;AACpB,GAAC,CAAC,IAAI,KAAK,CAAC,CAAC,IAAI,GAAG,EAAE,CAAA,AAAC,CAAC;AACxB,GAAC,CAAC,MAAM,KAAK,CAAC,CAAC,MAAM,GAAG,EAAE,CAAA,AAAC,CAAC;AAC5B,GAAC,CAAC,OAAO,KAAK,CAAC,CAAC,OAAO,GAAG,EAAE,CAAA,AAAC,CAAC;AAC9B,GAAC,CAAC,MAAM,CAAC,aAAa,KAAK,CAAC,CAAC,MAAM,CAAC,aAAa,GAAG,EAAE,CAAA,AAAC,CAAC;AACxD,GAAC,CAAC,OAAO,CAAC,aAAa,KAAK,CAAC,CAAC,OAAO,CAAC,aAAa,GAAG,EAAE,CAAA,AAAC,CAAC;;AAE1D,MAAI,IAAI,GAAG,WAAW,IAAI,EAAE,CAAC;AAC7B,QAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,UAAU,IAAI,EAAE;AACxC,YAAQ,IAAI;AACV,WAAK,KAAK,CAAC;AACX,WAAK,UAAU;AACb,YAAI,WAAW,IAAI,OAAO,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;AACxC,WAAC,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;SAC/C;AACD,cAAM;AAAA,AACR,WAAK,SAAS;AACZ,YAAI,WAAW,IAAI,OAAO,CAAC,CAAC,MAAM,CAAC,QAAQ,EAAE;AAC3C,WAAC,CAAC,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;SAChC;AACD,cAAM;AAAA,AACR,WAAK,eAAe;AAClB,YAAI,WAAW,IAAI,OAAO,CAAC,CAAC,MAAM,CAAC,cAAc,EAAE;AACjD,WAAC,CAAC,MAAM,CAAC,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;SACtC;AACD,cAAM;AAAA,AACR,WAAK,iBAAiB,CAAC;AACvB,WAAK,kBAAkB;AACrB,YAAI,WAAW,IAAI,OAAO,CAAC,CAAC,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE;AACtD,WAAC,CAAC,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;SAC3E;AACD,cAAM;AAAA,AACR,WAAK,QAAQ;AACX,YAAI,WAAW,IAAI,OAAO,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE;AACvC,WAAC,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;SAC5B;AACD,cAAM;AAAA,AACR,WAAK,YAAY;AACf,YAAI,WAAW,IAAI,OAAO,CAAC,CAAC,IAAI,CAAC,UAAU,EAAE;AAC3C,WAAC,CAAC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;SAChC;AACD,cAAM;AAAA,AACR,WAAK,SAAS,CAAC;AACf,WAAK,eAAe,CAAC;AACrB,WAAK,SAAS;AACZ,YAAI,WAAW,IAAI,OAAO,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;AACzC,WAAC,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;SAC9B;AACD,cAAM;AAAA,AACR,WAAK,YAAY;AACf,YAAI,WAAW,IAAI,OAAO,CAAC,CAAC,OAAO,CAAC,OAAO,EAAE;AAC3C,WAAC,CAAC,OAAO,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;SAChC;AACD,cAAM;AAAA,AACR,WAAK,eAAe;AAClB,YAAI,WAAW,IAAI,OAAO,CAAC,CAAC,OAAO,CAAC,cAAc,EAAE;AAClD,WAAC,CAAC,OAAO,CAAC,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;SACvC;AACD,cAAM;AAAA,AACR,WAAK,cAAc;AACjB,YAAI,WAAW,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,aAAa,EAAE;AAC5C,WAAC,CAAC,EAAE,CAAC,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;SACjC;AACD,cAAM;AAAA,AACR,WAAK,GAAG,CAAC;AACT,WAAK,MAAM,CAAC;AACZ,WAAK,OAAO,CAAC;AACb,WAAK,SAAS,CAAC;AACf,WAAK,YAAY;AACf,YAAI,WAAW,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE;AACpC,WAAC,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;SACzB;AACD,cAAM;AAAA,AACR,WAAK,gBAAgB;AACnB,YAAI,WAAW,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,eAAe,EAAE;AAC9C,WAAC,CAAC,EAAE,CAAC,eAAe,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;SACnC;AACD,cAAM;AAAA,AACR,WAAK,oBAAoB;AACvB,YAAI,WAAW,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,oBAAoB,EAAE;AACnD,WAAC,CAAC,EAAE,CAAC,oBAAoB,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;SACxC;AACD,cAAM;AAAA,KACT;GACF,CAAC,CAAA;;AAEF,MAAI,EAAE,gBAAgB,IAAI,CAAC,CAAC,MAAM,CAAA,AAAC,EAAE;AACnC,KAAC,CAAC,MAAM,CAAC,cAAc,GAAG,IAAI,CAAC;GAChC;;AAED,MAAI,CAAC,CAAC,CAAC,EAAE,CAAC,eAAe,EAAE;;AAEzB,KAAC,CAAC,EAAE,CAAC,eAAe,GAAG,SAAS,CAAC;GAClC;;;AAGD,GAAC,CAAC,EAAE,CAAC,mBAAmB,GAAG,KAAK,CAAC;;;AAGjC,MAAI,EAAE,SAAS,IAAI,CAAC,CAAC,EAAE,IAAI,GAAG,IAAI,CAAC,CAAC,EAAE,IAChC,OAAO,IAAI,CAAC,CAAC,EAAE,IAAI,MAAM,IAAI,CAAC,CAAC,EAAE,IAAI,GAAG,IAAI,CAAC,CAAC,EAAE,CAAA,AAAC,EAAE;AACvD,KAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC;GACZ;;AAED,UAAQ,CAAC,CAAC,CAAC,CAAC;AACZ,SAAO,CAAC,CAAC;CACV,CAAA;;;;;;;;AAQD,SAAS,QAAQ,CAAE,CAAC,EAAE;AACpB,MAAI,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE;AACjC,QAAI,CAAC,CAAC,EAAE,CAAC,OAAO,IAAI,CAAC,CAAC,EAAE,CAAC,KAAK,IAAI,CAAC,CAAC,EAAE,CAAC,IAAI,EAAE;AAC3C,YAAM,IAAI,KAAK,CACX,wBAAwB,GACxB,6DAA6D,CAAC,CAAC;KACpE;GACF;CACF;;;;;;AAMD,MAAM,CAAC,OAAO,GAAG,gBAAgB,CAAC","file":"connection-compiled.js","sourcesContent":["/*!\n * Module dependencies.\n */\n\nvar MongooseConnection = require('../../connection')\n  , mongo = require('mongodb')\n  , Db = mongo.Db\n  , Server = mongo.Server\n  , Mongos = mongo.Mongos\n  , STATES = require('../../connectionstate')\n  , ReplSetServers = mongo.ReplSet\n  , utils = require('../../utils');\n\n/**\n * A [node-mongodb-native](https://github.com/mongodb/node-mongodb-native) connection implementation.\n *\n * @inherits Connection\n * @api private\n */\n\nfunction NativeConnection() {\n  MongooseConnection.apply(this, arguments);\n  this._listening = false;\n};\n\n/**\n * Expose the possible connection states.\n * @api public\n */\n\nNativeConnection.STATES = STATES;\n\n/*!\n * Inherits from Connection.\n */\n\nNativeConnection.prototype.__proto__ = MongooseConnection.prototype;\n\n/**\n * Opens the connection to MongoDB.\n *\n * @param {Function} fn\n * @return {Connection} this\n * @api private\n */\n\nNativeConnection.prototype.doOpen = function (fn) {\n  if (this.db) {\n    mute(this);\n  }\n\n  var server = new Server(this.host, this.port, this.options.server);\n  this.db = new Db(this.name, server, this.options.db);\n\n  var self = this;\n  this.db.open(function (err) {\n    if (err) return fn(err);\n    listen(self);\n    fn();\n  });\n\n  return this;\n};\n\n/**\n * Switches to a different database using the same connection pool.\n *\n * Returns a new connection object, with the new db.\n *\n * @param {String} name The database name\n * @return {Connection} New Connection Object\n * @api public\n */\n\nNativeConnection.prototype.useDb = function (name) {\n  // we have to manually copy all of the attributes...\n  var newConn = new this.constructor();\n  newConn.name = name;\n  newConn.base = this.base;\n  newConn.collections = {};\n  newConn.models = {};\n  newConn.replica = this.replica;\n  newConn.hosts = this.hosts;\n  newConn.host = this.host;\n  newConn.port = this.port;\n  newConn.user = this.user;\n  newConn.pass = this.pass;\n  newConn.options = this.options;\n  newConn._readyState = this._readyState;\n  newConn._closeCalled = this._closeCalled;\n  newConn._hasOpened = this._hasOpened;\n  newConn._listening = false;\n\n  // First, when we create another db object, we are not guaranteed to have a\n  // db object to work with. So, in the case where we have a db object and it\n  // is connected, we can just proceed with setting everything up. However, if\n  // we do not have a db or the state is not connected, then we need to wait on\n  // the 'open' event of the connection before doing the rest of the setup\n  // the 'connected' event is the first time we'll have access to the db object\n\n  var self = this;\n\n  if (this.db && this._readyState === STATES.connected) {\n    wireup();\n  } else {\n    this.once('connected', wireup);\n  }\n\n  function wireup () {\n    newConn.db = self.db.db(name);\n    newConn.onOpen();\n    // setup the events appropriately\n    listen(newConn);\n  }\n\n  newConn.name = name;\n\n  // push onto the otherDbs stack, this is used when state changes\n  this.otherDbs.push(newConn);\n  newConn.otherDbs.push(this);\n\n  return newConn;\n};\n\n/*!\n * Register listeners for important events and bubble appropriately.\n */\n\nfunction listen (conn) {\n  if (conn._listening) return;\n  conn._listening = true;\n\n  conn.db.on('close', function(){\n    if (conn._closeCalled) return;\n\n    // the driver never emits an `open` event. auto_reconnect still\n    // emits a `close` event but since we never get another\n    // `open` we can't emit close\n    if (conn.db.serverConfig.autoReconnect) {\n      conn.readyState = STATES.disconnected;\n      conn.emit('close');\n      return;\n    }\n    conn.onClose();\n  });\n  conn.db.on('error', function(err){\n    conn.emit('error', err);\n  });\n  conn.db.on('reconnect', function() {\n    conn.readyState = STATES.connected;\n    conn.emit('reconnected');\n  });\n  conn.db.on('timeout', function(err){\n    var error = new Error(err && err.err || 'connection timeout');\n    conn.emit('error', error);\n  });\n  conn.db.on('open', function (err, db) {\n    if (STATES.disconnected === conn.readyState && db && db.databaseName) {\n      conn.readyState = STATES.connected;\n      conn.emit('reconnected');\n    }\n  });\n  conn.db.on('parseError', function(err) {\n    conn.emit('parseError', err);\n  });\n}\n\n/*!\n * Remove listeners registered in `listen`\n */\n\nfunction mute (conn) {\n  if (!conn.db) throw new Error('missing db');\n  conn.db.removeAllListeners(\"close\");\n  conn.db.removeAllListeners(\"error\");\n  conn.db.removeAllListeners(\"timeout\");\n  conn.db.removeAllListeners(\"open\");\n  conn.db.removeAllListeners(\"fullsetup\");\n  conn._listening = false;\n}\n\n/**\n * Opens a connection to a MongoDB ReplicaSet.\n *\n * See description of [doOpen](#NativeConnection-doOpen) for server options. In this case `options.replset` is also passed to ReplSetServers.\n *\n * @param {Function} fn\n * @api private\n * @return {Connection} this\n */\n\nNativeConnection.prototype.doOpenSet = function (fn) {\n  if (this.db) {\n    mute(this);\n  }\n\n  var servers = []\n    , self = this;\n\n  this.hosts.forEach(function (server) {\n    var host = server.host || server.ipc;\n    var port = server.port || 27017;\n    servers.push(new Server(host, port, self.options.server));\n  })\n\n  var server = this.options.mongos\n    ? new Mongos(servers, this.options.mongos)\n    : new ReplSetServers(servers, this.options.replset);\n  this.db = new Db(this.name, server, this.options.db);\n\n  this.db.on('fullsetup', function () {\n    self.emit('fullsetup')\n  });\n\n  this.db.open(function (err) {\n    if (err) return fn(err);\n    fn();\n    listen(self);\n  });\n\n  return this;\n};\n\n/**\n * Closes the connection\n *\n * @param {Function} fn\n * @return {Connection} this\n * @api private\n */\n\nNativeConnection.prototype.doClose = function (fn) {\n  this.db.close();\n  if (fn) fn();\n  return this;\n}\n\n/**\n * Prepares default connection options for the node-mongodb-native driver.\n *\n * _NOTE: `passed` options take precedence over connection string options._\n *\n * @param {Object} passed options that were passed directly during connection\n * @param {Object} [connStrOptions] options that were passed in the connection string\n * @api private\n */\n\nNativeConnection.prototype.parseOptions = function (passed, connStrOpts) {\n  var o = passed || {};\n  o.db || (o.db = {});\n  o.auth || (o.auth = {});\n  o.server || (o.server = {});\n  o.replset || (o.replset = {});\n  o.server.socketOptions || (o.server.socketOptions = {});\n  o.replset.socketOptions || (o.replset.socketOptions = {});\n\n  var opts = connStrOpts || {};\n  Object.keys(opts).forEach(function (name) {\n    switch (name) {\n      case 'ssl':\n      case 'poolSize':\n        if ('undefined' == typeof o.server[name]) {\n          o.server[name] = o.replset[name] = opts[name];\n        }\n        break;\n      case 'slaveOk':\n        if ('undefined' == typeof o.server.slave_ok) {\n          o.server.slave_ok = opts[name];\n        }\n        break;\n      case 'autoReconnect':\n        if ('undefined' == typeof o.server.auto_reconnect) {\n          o.server.auto_reconnect = opts[name];\n        }\n        break;\n      case 'socketTimeoutMS':\n      case 'connectTimeoutMS':\n        if ('undefined' == typeof o.server.socketOptions[name]) {\n          o.server.socketOptions[name] = o.replset.socketOptions[name] = opts[name];\n        }\n        break;\n      case 'authdb':\n        if ('undefined' == typeof o.auth.authdb) {\n          o.auth.authdb = opts[name];\n        }\n        break;\n      case 'authSource':\n        if ('undefined' == typeof o.auth.authSource) {\n          o.auth.authSource = opts[name];\n        }\n        break;\n      case 'retries':\n      case 'reconnectWait':\n      case 'rs_name':\n        if ('undefined' == typeof o.replset[name]) {\n          o.replset[name] = opts[name];\n        }\n        break;\n      case 'replicaSet':\n        if ('undefined' == typeof o.replset.rs_name) {\n          o.replset.rs_name = opts[name];\n        }\n        break;\n      case 'readSecondary':\n        if ('undefined' == typeof o.replset.read_secondary) {\n          o.replset.read_secondary = opts[name];\n        }\n        break;\n      case 'nativeParser':\n        if ('undefined' == typeof o.db.native_parser) {\n          o.db.native_parser = opts[name];\n        }\n        break;\n      case 'w':\n      case 'safe':\n      case 'fsync':\n      case 'journal':\n      case 'wtimeoutMS':\n        if ('undefined' == typeof o.db[name]) {\n          o.db[name] = opts[name];\n        }\n        break;\n      case 'readPreference':\n        if ('undefined' == typeof o.db.read_preference) {\n          o.db.read_preference = opts[name];\n        }\n        break;\n      case 'readPreferenceTags':\n        if ('undefined' == typeof o.db.read_preference_tags) {\n          o.db.read_preference_tags = opts[name];\n        }\n        break;\n    }\n  })\n\n  if (!('auto_reconnect' in o.server)) {\n    o.server.auto_reconnect = true;\n  }\n\n  if (!o.db.read_preference) {\n    // read from primaries by default\n    o.db.read_preference = 'primary';\n  }\n\n  // mongoose creates its own ObjectIds\n  o.db.forceServerObjectId = false;\n\n  // default safe using new nomenclature\n  if (!('journal' in o.db || 'j' in o.db ||\n        'fsync' in o.db || 'safe' in o.db || 'w' in o.db)) {\n    o.db.w = 1;\n  }\n\n  validate(o);\n  return o;\n}\n\n/*!\n * Validates the driver db options.\n *\n * @param {Object} o\n */\n\nfunction validate (o) {\n  if (-1 === o.db.w || 0 === o.db.w) {\n    if (o.db.journal || o.db.fsync || o.db.safe) {\n      throw new Error(\n          'Invalid writeConcern: '\n        + 'w set to -1 or 0 cannot be combined with safe|fsync|journal');\n    }\n  }\n}\n\n/*!\n * Module exports.\n */\n\nmodule.exports = NativeConnection;\n"]}