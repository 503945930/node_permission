{"version":3,"sources":["buffer.js"],"names":[],"mappings":";;;;;;;AAKA,IAAI,MAAM,GAAG,MAAM,CAAC,oBAAoB,IAAI,gCAAgC,CAAC;;;;;;AAM7E,IAAI,MAAM,GAAG,OAAO,CAAC,uCAAuC,CAAC;IACzD,KAAK,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;;;;;;;;;;;;;;;AAehC,SAAS,cAAc,CAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE;AAC9C,MAAI,MAAM,GAAG,SAAS,CAAC,MAAM,CAAC;AAC9B,MAAI,GAAG,CAAC;;AAER,MAAI,CAAC,KAAK,MAAM,IAAI,IAAI,KAAK,SAAS,CAAC,CAAC,CAAC,IAAI,SAAS,KAAK,SAAS,CAAC,CAAC,CAAC,EAAE;AACvE,OAAG,GAAG,CAAC,CAAC;GACT,MAAM;AACL,OAAG,GAAG,KAAK,CAAC;GACb;;AAED,MAAI,QAAQ,CAAC;AACb,MAAI,IAAI,CAAC;AACT,MAAI,GAAG,CAAC;;AAER,MAAI,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;;AAEzB,QAAI,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;AACjB,OAAG,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;GACjB,MAAM;AACL,YAAQ,GAAG,MAAM,CAAC;GACnB;;AAED,MAAI,GAAG,GAAG,IAAI,MAAM,CAAC,GAAG,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAC;AAC5C,OAAK,CAAC,QAAQ,CAAE,GAAG,EAAE,cAAc,CAAC,KAAK,CAAE,CAAC;AAC5C,KAAG,CAAC,gBAAgB,GAAG,IAAI,CAAC;;;AAG5B,QAAM,CAAC,gBAAgB,CAAC,GAAG,EAAE;AACzB,cAAU,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE;AACzB,SAAK,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE;AACtB,WAAO,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE;GAC1B,CAAC,CAAC;;AAEH,MAAI,GAAG,IAAI,QAAQ,KAAK,OAAO,IAAI,EAAE;AACnC,UAAM,CAAC,cAAc,CAAC,GAAG,EAAE,SAAS,EAAE;AAClC,WAAK,EAAE,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;KAC/B,CAAC,CAAC;GACJ;;AAED,KAAG,CAAC,QAAQ,GAAG,CAAC,CAAC;AACjB,SAAO,GAAG,CAAC;CACZ;;;;;;;;AAQD,cAAc,CAAC,KAAK,GAAG;;;;;;;;;;AAUrB,SAAO,EAAE,SAAS;;;;;;;;;;AAUlB,UAAQ,EAAE,SAAS;;;;;;;;;;AAUnB,eAAa,EAAE,yBAAY;AACzB,QAAI,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC;;AAE1B,QAAI,MAAM,EAAE;AACV,YAAM,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KACjC;AACD,WAAO,IAAI,CAAC;GACb;;;;;;;;;;AAUD,OAAK,EAAE,iBAAY;AACjB,QAAI,OAAO,GAAG,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;;AAE5D,QAAI,OAAO,GAAG,CAAC,EAAE;AACf,UAAI,CAAC,aAAa,EAAE,CAAC;KACtB;;AAED,WAAO,OAAO,CAAC;GAChB;;;;;;;;;;;;;;;AAeD,MAAI,EAAE,cAAU,MAAM,EAAE;AACtB,QAAI,GAAG,GAAG,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;;AAEvD,QAAI,MAAM,IAAI,MAAM,CAAC,gBAAgB,EAAE;AACrC,YAAM,CAAC,aAAa,EAAE,CAAC;KACxB;;AAED,WAAO,GAAG,CAAC;GACZ;CACF,CAAC;;;;;;AAMF,CAAC;;AAED,qEAAqE,GACrE,8BAA8B,GAC9B,uCAAuC;;;AAGvC,0DAA0D,GAC1D,sDAAsD,GACtD,uDAAuD,CAAA,CACrD,KAAK,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,UAAU,MAAM,EAAE;AACrC,MAAI,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,OAAO;AACtC,gBAAc,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,IAAI,QAAQ,CACzC,6BAA6B,GAAC,MAAM,GAAC,0BAA0B,GAC/D,uBAAuB,GACvB,aAAa,CACd,CAAA;CACF,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;AAyBH,cAAc,CAAC,KAAK,CAAC,QAAQ,GAAG,UAAU,OAAO,EAAE;AACjD,MAAI,OAAO,GAAG,QAAQ,IAAI,OAAO,OAAO,GACpC,OAAO,GACN,IAAI,CAAC,QAAQ,IAAI,CAAC,AAAC,CAAC;AACzB,SAAO,IAAI,MAAM,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;CAClC,CAAC;;;;;;;;;;;AAWF,cAAc,CAAC,KAAK,CAAC,MAAM,GAAG,UAAU,KAAK,EAAE;AAC7C,MAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE;AAC3B,WAAO,KAAK,CAAC;GACd;;AAED,MAAI,IAAI,CAAC,MAAM,KAAK,KAAK,CAAC,MAAM,EAAE;AAChC,WAAO,KAAK,CAAC;GACd;;AAED,OAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;AACpC,QAAI,IAAI,CAAC,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,EAAE,OAAO,KAAK,CAAC;GACxC;;AAED,SAAO,IAAI,CAAC;CACb,CAAC;;;;;;;;;;;;;;;;;;;;;;;;AAwBF,cAAc,CAAC,KAAK,CAAC,OAAO,GAAG,UAAU,OAAO,EAAE;AAChD,MAAI,QAAQ,IAAI,OAAO,OAAO,EAAE;AAC9B,UAAM,IAAI,SAAS,CAAC,oCAAoC,CAAC,CAAC;GAC3D;;AAED,MAAI,IAAI,CAAC,QAAQ,IAAI,OAAO,EAAE;AAC5B,QAAI,CAAC,aAAa,EAAE,CAAC;GACtB;;AAED,MAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;CACzB,CAAC;;;;;;AAMF,cAAc,CAAC,MAAM,GAAG,MAAM,CAAC;;AAE/B,MAAM,CAAC,OAAO,GAAG,cAAc,CAAC","file":"buffer-compiled.js","sourcesContent":["\n/*!\n * Access driver.\n */\n\nvar driver = global.MONGOOSE_DRIVER_PATH || '../drivers/node-mongodb-native';\n\n/*!\n * Module dependencies.\n */\n\nvar Binary = require('../drivers/node-mongodb-native/binary')\n  , utils = require('../utils');\n\n/**\n * Mongoose Buffer constructor.\n *\n * Values always have to be passed to the constructor to initialize.\n *\n * @param {Buffer} value\n * @param {String} encode\n * @param {Number} offset\n * @api private\n * @inherits Buffer\n * @see http://bit.ly/f6CnZU\n */\n\nfunction MongooseBuffer (value, encode, offset) {\n  var length = arguments.length;\n  var val;\n\n  if (0 === length || null === arguments[0] || undefined === arguments[0]) {\n    val = 0;\n  } else {\n    val = value;\n  }\n\n  var encoding;\n  var path;\n  var doc;\n\n  if (Array.isArray(encode)) {\n    // internal casting\n    path = encode[0];\n    doc = encode[1];\n  } else {\n    encoding = encode;\n  }\n\n  var buf = new Buffer(val, encoding, offset);\n  utils.decorate( buf, MongooseBuffer.mixin );\n  buf.isMongooseBuffer = true;\n\n  // make sure these internal props don't show up in Object.keys()\n  Object.defineProperties(buf, {\n      validators: { value: [] }\n    , _path: { value: path }\n    , _parent: { value: doc }\n  });\n\n  if (doc && \"string\" === typeof path) {\n    Object.defineProperty(buf, '_schema', {\n        value: doc.schema.path(path)\n    });\n  }\n\n  buf._subtype = 0;\n  return buf;\n}\n\n/*!\n * Inherit from Buffer.\n */\n\n//MongooseBuffer.prototype = new Buffer(0);\n\nMongooseBuffer.mixin = {\n\n  /**\n   * Parent owner document\n   *\n   * @api private\n   * @property _parent\n   * @receiver MongooseBuffer\n   */\n\n  _parent: undefined,\n\n  /**\n   * Default subtype for the Binary representing this Buffer\n   *\n   * @api private\n   * @property _subtype\n   * @receiver MongooseBuffer\n   */\n\n  _subtype: undefined,\n\n  /**\n   * Marks this buffer as modified.\n   *\n   * @api private\n   * @method _markModified\n   * @receiver MongooseBuffer\n   */\n\n  _markModified: function () {\n    var parent = this._parent;\n\n    if (parent) {\n      parent.markModified(this._path);\n    }\n    return this;\n  },\n\n  /**\n   * Writes the buffer.\n   *\n   * @api public\n   * @method write\n   * @receiver MongooseBuffer\n   */\n\n  write: function () {\n    var written = Buffer.prototype.write.apply(this, arguments);\n\n    if (written > 0) {\n      this._markModified();\n    }\n\n    return written;\n  },\n\n  /**\n   * Copies the buffer.\n   *\n   * ####Note:\n   *\n   * `Buffer#copy` does not mark `target` as modified so you must copy from a `MongooseBuffer` for it to work as expected. This is a work around since `copy` modifies the target, not this.\n   *\n   * @return {MongooseBuffer}\n   * @param {Buffer} target\n   * @method copy\n   * @receiver MongooseBuffer\n   */\n\n  copy: function (target) {\n    var ret = Buffer.prototype.copy.apply(this, arguments);\n\n    if (target && target.isMongooseBuffer) {\n      target._markModified();\n    }\n\n    return ret;\n  }\n};\n\n/*!\n * Compile other Buffer methods marking this buffer as modified.\n */\n\n;(\n// node < 0.5\n'writeUInt8 writeUInt16 writeUInt32 writeInt8 writeInt16 writeInt32 ' +\n'writeFloat writeDouble fill ' +\n'utf8Write binaryWrite asciiWrite set ' +\n\n// node >= 0.5\n'writeUInt16LE writeUInt16BE writeUInt32LE writeUInt32BE ' +\n'writeInt16LE writeInt16BE writeInt32LE writeInt32BE ' +\n'writeFloatLE writeFloatBE writeDoubleLE writeDoubleBE'\n).split(' ').forEach(function (method) {\n  if (!Buffer.prototype[method]) return;\n  MongooseBuffer.mixin[method] = new Function(\n    'var ret = Buffer.prototype.'+method+'.apply(this, arguments);' +\n    'this._markModified();' +\n    'return ret;'\n  )\n});\n\n/**\n * Converts this buffer to its Binary type representation.\n *\n * ####SubTypes:\n *\n *   var bson = require('bson')\n *   bson.BSON_BINARY_SUBTYPE_DEFAULT\n *   bson.BSON_BINARY_SUBTYPE_FUNCTION\n *   bson.BSON_BINARY_SUBTYPE_BYTE_ARRAY\n *   bson.BSON_BINARY_SUBTYPE_UUID\n *   bson.BSON_BINARY_SUBTYPE_MD5\n *   bson.BSON_BINARY_SUBTYPE_USER_DEFINED\n *\n *   doc.buffer.toObject(bson.BSON_BINARY_SUBTYPE_USER_DEFINED);\n *\n * @see http://bsonspec.org/#/specification\n * @param {Hex} [subtype]\n * @return {Binary}\n * @api public\n * @method toObject\n * @receiver MongooseBuffer\n */\n\nMongooseBuffer.mixin.toObject = function (options) {\n  var subtype = 'number' == typeof options\n    ? options\n    : (this._subtype || 0);\n  return new Binary(this, subtype);\n};\n\n/**\n * Determines if this buffer is equals to `other` buffer\n *\n * @param {Buffer} other\n * @return {Boolean}\n * @method equals\n * @receiver MongooseBuffer\n */\n\nMongooseBuffer.mixin.equals = function (other) {\n  if (!Buffer.isBuffer(other)) {\n    return false;\n  }\n\n  if (this.length !== other.length) {\n    return false;\n  }\n\n  for (var i = 0; i < this.length; ++i) {\n    if (this[i] !== other[i]) return false;\n  }\n\n  return true;\n};\n\n/**\n * Sets the subtype option and marks the buffer modified.\n *\n * ####SubTypes:\n *\n *   var bson = require('bson')\n *   bson.BSON_BINARY_SUBTYPE_DEFAULT\n *   bson.BSON_BINARY_SUBTYPE_FUNCTION\n *   bson.BSON_BINARY_SUBTYPE_BYTE_ARRAY\n *   bson.BSON_BINARY_SUBTYPE_UUID\n *   bson.BSON_BINARY_SUBTYPE_MD5\n *   bson.BSON_BINARY_SUBTYPE_USER_DEFINED\n *\n *   doc.buffer.subtype(bson.BSON_BINARY_SUBTYPE_UUID);\n *\n * @see http://bsonspec.org/#/specification\n * @param {Hex} subtype\n * @api public\n * @method subtype\n * @receiver MongooseBuffer\n */\n\nMongooseBuffer.mixin.subtype = function (subtype) {\n  if ('number' != typeof subtype) {\n    throw new TypeError('Invalid subtype. Expected a number');\n  }\n\n  if (this._subtype != subtype) {\n    this._markModified();\n  }\n\n  this._subtype = subtype;\n};\n\n/*!\n * Module exports.\n */\n\nMongooseBuffer.Binary = Binary;\n\nmodule.exports = MongooseBuffer;\n"]}