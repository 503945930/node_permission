{"version":3,"sources":["aggregate.js"],"names":[],"mappings":"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","file":"aggregate-compiled.js","sourcesContent":["\n// import async to make control flow simplier\nvar async = require('async');\n\n// import the rest of the normal stuff\nvar mongoose = require('../../lib');\n\nrequire('./person.js')();\n\nvar Person = mongoose.model('Person');\n\n// define some dummy data\nvar data = [\n  { name : 'bill', age : 25, birthday : new Date().setFullYear((new\n    Date().getFullYear() - 25)), gender : \"Male\",\n    likes : ['movies', 'games', 'dogs']},\n  { name : 'mary', age : 30, birthday : new Date().setFullYear((new\n    Date().getFullYear() - 30)), gender : \"Female\",\n    likes : ['movies', 'birds', 'cats']},\n  { name : 'bob', age : 21, birthday : new Date().setFullYear((new\n    Date().getFullYear() - 21)), gender : \"Male\",\n    likes : ['tv', 'games', 'rabbits']},\n  { name : 'lilly', age : 26, birthday : new Date().setFullYear((new\n    Date().getFullYear() - 26)), gender : \"Female\",\n    likes : ['books', 'cats', 'dogs']},\n  { name : 'alucard', age : 1000, birthday : new Date().setFullYear((new\n    Date().getFullYear() - 1000)), gender : \"Male\",\n    likes : ['glasses', 'wine', 'the night']},\n];\n\n\nmongoose.connect('mongodb://localhost/persons', function (err) {\n  if (err) throw err;\n\n  // create all of the dummy people\n  async.each(data, function (item, cb) {\n    Person.create(item, cb);\n  }, function (err) {\n    \n    // run an aggregate query that will get all of the people who like a given\n    // item. To see the full documentation on ways to use the aggregate\n    // framework, see http://docs.mongodb.org/manual/core/aggregation/\n    Person.aggregate(\n      // select the fields we want to deal with\n      { $project : { name : 1, likes : 1 } },\n      // unwind 'likes', which will create a document for each like\n      { $unwind : \"$likes\" },\n      // group everything by the like and then add each name with that like to\n      // the set for the like\n      { $group : {\n        _id : { likes : \"$likes\" },\n        likers : { $addToSet : \"$name\" }\n      } },\n      function (err, result) {\n        if (err) throw err;\n        console.log(result);\n        //[ { _id: { likes: 'the night' }, likers: [ 'alucard' ] },\n        //{ _id: { likes: 'wine' }, likers: [ 'alucard' ] },\n        //{ _id: { likes: 'books' }, likers: [ 'lilly' ] },\n        //{ _id: { likes: 'glasses' }, likers: [ 'alucard' ] },\n        //{ _id: { likes: 'birds' }, likers: [ 'mary' ] },\n        //{ _id: { likes: 'rabbits' }, likers: [ 'bob' ] },\n        //{ _id: { likes: 'cats' }, likers: [ 'lilly', 'mary' ] },\n        //{ _id: { likes: 'dogs' }, likers: [ 'lilly', 'bill' ] },\n        //{ _id: { likes: 'tv' }, likers: [ 'bob' ] },\n        //{ _id: { likes: 'games' }, likers: [ 'bob', 'bill' ] },\n        //{ _id: { likes: 'movies' }, likers: [ 'mary', 'bill' ] } ]\n\n        cleanup();\n    });\n  });\n});\n\nfunction cleanup() {\n  Person.remove(function() {\n    mongoose.disconnect();\n  });\n}\n"]}