{"version":3,"sources":["population-options.js"],"names":[],"mappings":"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","file":"population-options-compiled.js","sourcesContent":["\nvar mongoose = require('../../lib')\nvar Schema = mongoose.Schema;\n\nconsole.log('Running mongoose version %s', mongoose.version);\n\n/**\n * Console schema\n */\n\nvar consoleSchema = Schema({\n    name: String\n  , manufacturer: String\n  , released: Date\n})\nvar Console = mongoose.model('Console', consoleSchema);\n\n/**\n * Game schema\n */\n\nvar gameSchema = Schema({\n    name: String\n  , developer: String\n  , released: Date\n  , consoles: [{ type: Schema.Types.ObjectId, ref: 'Console' }]\n})\nvar Game = mongoose.model('Game', gameSchema);\n\n/**\n * Connect to the console database on localhost with\n * the default port (27017)\n */\n\nmongoose.connect('mongodb://localhost/console', function (err) {\n  // if we failed to connect, abort\n  if (err) throw err;\n\n  // we connected ok\n  createData();\n})\n\n/**\n * Data generation\n */\n\nfunction createData () {\n  Console.create({\n      name: 'Nintendo 64'\n    , manufacturer: 'Nintendo'\n    , released: 'September 29, 1996'\n  }, {\n      name: 'Super Nintendo'\n    , manufacturer: 'Nintendo'\n    , released: 'August 23, 1991'\n  }, {\n      name: 'XBOX 360'\n    , manufacturer: 'Microsoft'\n    , released: 'November 22, 2005'\n  }, function (err, nintendo64, superNintendo, xbox360) {\n    if (err) return done(err);\n\n    Game.create({\n        name: 'Legend of Zelda: Ocarina of Time'\n      , developer: 'Nintendo'\n      , released: new Date('November 21, 1998')\n      , consoles: [nintendo64]\n    }, {\n        name: 'Mario Kart'\n      , developer: 'Nintendo'\n      , released: 'September 1, 1992'\n      , consoles: [superNintendo]\n    }, {\n        name: 'Perfect Dark Zero'\n      , developer: 'Rare'\n      , released: 'November 17, 2005'\n      , consoles: [xbox360]\n    }, function (err) {\n      if (err) return done(err);\n      example();\n    })\n  })\n}\n\n/**\n * Population\n */\n\nfunction example () {\n  Game\n  .find({})\n  .populate({\n      path: 'consoles'\n    , match: { manufacturer: 'Nintendo' }\n    , select: 'name'\n    , options: { comment: 'population' }\n  })\n  .exec(function (err, games) {\n    if (err) return done(err);\n\n    games.forEach(function (game) {\n      console.log(\n          '\"%s\" was released for the %s on %s'\n        , game.name\n        , game.consoles.length ? game.consoles[0].name : '??'\n        , game.released.toLocaleDateString());\n    })\n\n    return done();\n  })\n}\n\n/**\n * Clean up\n */\n\nfunction done (err) {\n  if (err) console.error(err);\n  Console.remove(function () {\n    Game.remove(function () {\n      mongoose.disconnect();\n    })\n  })\n}\n"]}