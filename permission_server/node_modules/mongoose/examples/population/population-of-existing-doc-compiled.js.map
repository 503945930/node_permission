{"version":3,"sources":["population-of-existing-doc.js"],"names":[],"mappings":"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","file":"population-of-existing-doc-compiled.js","sourcesContent":["\nvar mongoose = require('../../lib')\nvar Schema = mongoose.Schema;\n\nconsole.log('Running mongoose version %s', mongoose.version);\n\n/**\n * Console schema\n */\n\nvar consoleSchema = Schema({\n    name: String\n  , manufacturer: String\n  , released: Date\n})\nvar Console = mongoose.model('Console', consoleSchema);\n\n/**\n * Game schema\n */\n\nvar gameSchema = Schema({\n    name: String\n  , developer: String\n  , released: Date\n  , consoles: [{ type: Schema.Types.ObjectId, ref: 'Console' }]\n})\nvar Game = mongoose.model('Game', gameSchema);\n\n/**\n * Connect to the console database on localhost with\n * the default port (27017)\n */\n\nmongoose.connect('mongodb://localhost/console', function (err) {\n  // if we failed to connect, abort\n  if (err) throw err;\n\n  // we connected ok\n  createData();\n})\n\n/**\n * Data generation\n */\n\nfunction createData () {\n  Console.create({\n      name: 'Nintendo 64'\n    , manufacturer: 'Nintendo'\n    , released: 'September 29, 1996'\n  }, function (err, nintendo64) {\n    if (err) return done(err);\n\n    Game.create({\n        name: 'Legend of Zelda: Ocarina of Time'\n      , developer: 'Nintendo'\n      , released: new Date('November 21, 1998')\n      , consoles: [nintendo64]\n    }, function (err) {\n      if (err) return done(err);\n      example();\n    })\n  })\n}\n\n/**\n * Population\n */\n\nfunction example () {\n  Game\n  .findOne({ name: /^Legend of Zelda/ })\n  .exec(function (err, ocinara) {\n    if (err) return done(err);\n\n    console.log('\"%s\" console _id: %s', ocinara.name, ocinara.consoles[0]);\n\n    // population of existing document\n    ocinara.populate('consoles', function (err) {\n      if (err) return done(err);\n\n      console.log(\n          '\"%s\" was released for the %s on %s'\n        , ocinara.name\n        , ocinara.consoles[0].name\n        , ocinara.released.toLocaleDateString());\n\n      done();\n    })\n  })\n}\n\nfunction done (err) {\n  if (err) console.error(err);\n  Console.remove(function () {\n    Game.remove(function () {\n      mongoose.disconnect();\n    })\n  })\n}\n"]}