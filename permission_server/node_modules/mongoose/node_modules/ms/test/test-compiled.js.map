{"version":3,"sources":["test.js"],"names":[],"mappings":";;;;;;;AAKA,IAAI,WAAW,IAAI,OAAO,OAAO,EAAE;AACjC,QAAM,GAAG,OAAO,CAAC,WAAW,CAAC,CAAC;AAC9B,IAAE,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;CACvB;;;;;;AAMD,QAAQ,CAAC,OAAO,EAAE,YAAY;;AAE5B,IAAE,CAAC,oBAAoB,EAAE,YAAY;AACnC,UAAM,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;GACxB,CAAC,CAAC;;AAEH,IAAE,CAAC,yCAAyC,EAAE,YAAY;AACxD,UAAM,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;GAChC,CAAC,CAAC;;AAEH,IAAE,CAAC,6BAA6B,EAAE,YAAY;AAC5C,UAAM,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;GAC/B,CAAC,CAAC;;AAEH,IAAE,CAAC,6BAA6B,EAAE,YAAY;AAC5C,UAAM,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC;GACjC,CAAC,CAAC;;AAEH,IAAE,CAAC,wBAAwB,EAAE,YAAY;AACvC,UAAM,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC;GACnC,CAAC,CAAC;;AAEH,IAAE,CAAC,wBAAwB,EAAE,YAAY;AACvC,UAAM,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;GAC9B,CAAC,CAAC;;AAEH,IAAE,CAAC,yBAAyB,EAAE,YAAY;AACxC,UAAM,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;GAChC,CAAC,CAAC;;AAEH,IAAE,CAAC,2BAA2B,EAAE,YAAY;AAC1C,UAAM,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC;GACnC,CAAC,CAAC;;AAEH,IAAE,CAAC,8BAA8B,EAAE,YAAY;AAC7C,UAAM,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;GACpC,CAAC,CAAC;;AAEH,IAAE,CAAC,4BAA4B,EAAE,YAAY;AAC3C,UAAM,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC;GACnC,CAAC,CAAC;;AAEH,IAAE,CAAC,0CAA0C,EAAE,YAAY;AACzD,UAAM,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;GAC9B,CAAC,CAAC;CAEJ,CAAC,CAAC","file":"test-compiled.js","sourcesContent":["\n/**\n * Dependencies.\n */\n\nif ('undefined' != typeof require) {\n  expect = require('expect.js');\n  ms = require('../ms');\n}\n\n/**\n * Test.\n */\n\ndescribe('ms.js', function () {\n\n  it('should preserve ms', function () {\n    expect(100).to.be(100);\n  });\n\n  it('should convert number strings to number', function () {\n    expect(ms('1e+5')).to.be(1e+5);\n  });\n \n  it('should convert from m to ms', function () {\n    expect(ms('1m')).to.be(60000);\n  });\n\n  it('should convert from h to ms', function () {\n    expect(ms('1h')).to.be(3600000);\n  });\n\n  it('should convert d to ms', function () {\n    expect(ms('2d')).to.be(172800000);\n  });\n\n  it('should convert s to ms', function () {\n    expect(ms('1s')).to.be(1000);\n  });\n\n  it('should convert ms to ms', function () {\n    expect(ms('100ms')).to.be(100);\n  });\n\n  it('should work with decimals', function () {\n    expect(ms('1.5h')).to.be(5400000);\n  });\n\n  it('should return NaN if invalid', function () {\n    expect(isNaN(ms('â˜ƒ'))).to.be(true);\n  });\n\n  it('should be case-insensitive', function () {\n    expect(ms('1.5H')).to.be(5400000);\n  });\n\n  it('should work with numbers starting with .', function () {\n    expect(ms('.5ms')).to.be(.5);\n  });\n\n});\n"]}