{"version":3,"sources":["charset.js"],"names":[],"mappings":"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","file":"charset-compiled.js","sourcesContent":["module.exports = preferredCharsets;\npreferredCharsets.preferredCharsets = preferredCharsets;\n\nfunction parseAcceptCharset(accept) {\n  var accepts = accept.split(',');\n\n  for (var i = 0, j = 0; i < accepts.length; i++) {\n    var charset = parseCharset(accepts[i].trim(), i);\n\n    if (charset) {\n      accepts[j++] = charset;\n    }\n  }\n\n  // trim accepts\n  accepts.length = j;\n\n  return accepts;\n}\n\nfunction parseCharset(s, i) {\n  var match = s.match(/^\\s*(\\S+?)\\s*(?:;(.*))?$/);\n  if (!match) return null;\n\n  var charset = match[1];\n  var q = 1;\n  if (match[2]) {\n    var params = match[2].split(';')\n    for (var i = 0; i < params.length; i ++) {\n      var p = params[i].trim().split('=');\n      if (p[0] === 'q') {\n        q = parseFloat(p[1]);\n        break;\n      }\n    }\n  }\n\n  return {\n    charset: charset,\n    q: q,\n    i: i\n  };\n}\n\nfunction getCharsetPriority(charset, accepted, index) {\n  var priority = {o: -1, q: 0, s: 0};\n\n  for (var i = 0; i < accepted.length; i++) {\n    var spec = specify(charset, accepted[i], index);\n\n    if (spec && (priority.s - spec.s || priority.q - spec.q || priority.o - spec.o) < 0) {\n      priority = spec;\n    }\n  }\n\n  return priority;\n}\n\nfunction specify(charset, spec, index) {\n  var s = 0;\n  if(spec.charset.toLowerCase() === charset.toLowerCase()){\n    s |= 1;\n  } else if (spec.charset !== '*' ) {\n    return null\n  }\n\n  return {\n    i: index,\n    o: spec.i,\n    q: spec.q,\n    s: s\n  }\n}\n\nfunction preferredCharsets(accept, provided) {\n  // RFC 2616 sec 14.2: no header = *\n  var accepts = parseAcceptCharset(accept === undefined ? '*' : accept || '');\n\n  if (!provided) {\n    // sorted list of all charsets\n    return accepts.filter(isQuality).sort(compareSpecs).map(function getCharset(spec) {\n      return spec.charset;\n    });\n  }\n\n  var priorities = provided.map(function getPriority(type, index) {\n    return getCharsetPriority(type, accepts, index);\n  });\n\n  // sorted list of accepted charsets\n  return priorities.filter(isQuality).sort(compareSpecs).map(function getCharset(priority) {\n    return provided[priorities.indexOf(priority)];\n  });\n}\n\nfunction compareSpecs(a, b) {\n  return (b.q - a.q) || (b.s - a.s) || (a.o - b.o) || (a.i - b.i) || 0;\n}\n\nfunction isQuality(spec) {\n  return spec.q > 0;\n}\n"]}