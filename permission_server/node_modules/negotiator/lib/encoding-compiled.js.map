{"version":3,"sources":["encoding.js"],"names":[],"mappings":"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","file":"encoding-compiled.js","sourcesContent":["module.exports = preferredEncodings;\npreferredEncodings.preferredEncodings = preferredEncodings;\n\nfunction parseAcceptEncoding(accept) {\n  var accepts = accept.split(',');\n  var hasIdentity = false;\n  var minQuality = 1;\n\n  for (var i = 0, j = 0; i < accepts.length; i++) {\n    var encoding = parseEncoding(accepts[i].trim(), i);\n\n    if (encoding) {\n      accepts[j++] = encoding;\n      hasIdentity = hasIdentity || specify('identity', encoding);\n      minQuality = Math.min(minQuality, encoding.q || 1);\n    }\n  }\n\n  if (!hasIdentity) {\n    /*\n     * If identity doesn't explicitly appear in the accept-encoding header,\n     * it's added to the list of acceptable encoding with the lowest q\n     */\n    accepts[j++] = {\n      encoding: 'identity',\n      q: minQuality,\n      i: i\n    };\n  }\n\n  // trim accepts\n  accepts.length = j;\n\n  return accepts;\n}\n\nfunction parseEncoding(s, i) {\n  var match = s.match(/^\\s*(\\S+?)\\s*(?:;(.*))?$/);\n\n  if (!match) return null;\n\n  var encoding = match[1];\n  var q = 1;\n  if (match[2]) {\n    var params = match[2].split(';');\n    for (var i = 0; i < params.length; i ++) {\n      var p = params[i].trim().split('=');\n      if (p[0] === 'q') {\n        q = parseFloat(p[1]);\n        break;\n      }\n    }\n  }\n\n  return {\n    encoding: encoding,\n    q: q,\n    i: i\n  };\n}\n\nfunction getEncodingPriority(encoding, accepted, index) {\n  var priority = {o: -1, q: 0, s: 0};\n\n  for (var i = 0; i < accepted.length; i++) {\n    var spec = specify(encoding, accepted[i], index);\n\n    if (spec && (priority.s - spec.s || priority.q - spec.q || priority.o - spec.o) < 0) {\n      priority = spec;\n    }\n  }\n\n  return priority;\n}\n\nfunction specify(encoding, spec, index) {\n  var s = 0;\n  if(spec.encoding.toLowerCase() === encoding.toLowerCase()){\n    s |= 1;\n  } else if (spec.encoding !== '*' ) {\n    return null\n  }\n\n  return {\n    i: index,\n    o: spec.i,\n    q: spec.q,\n    s: s\n  }\n};\n\nfunction preferredEncodings(accept, provided) {\n  var accepts = parseAcceptEncoding(accept || '');\n\n  if (!provided) {\n    // sorted list of all encodings\n    return accepts.filter(isQuality).sort(compareSpecs).map(function getEncoding(spec) {\n      return spec.encoding;\n    });\n  }\n\n  var priorities = provided.map(function getPriority(type, index) {\n    return getEncodingPriority(type, accepts, index);\n  });\n\n  // sorted list of accepted encodings\n  return priorities.filter(isQuality).sort(compareSpecs).map(function getEncoding(priority) {\n    return provided[priorities.indexOf(priority)];\n  });\n}\n\nfunction compareSpecs(a, b) {\n  return (b.q - a.q) || (b.s - a.s) || (a.o - b.o) || (a.i - b.i) || 0;\n}\n\nfunction isQuality(spec) {\n  return spec.q > 0;\n}\n"]}