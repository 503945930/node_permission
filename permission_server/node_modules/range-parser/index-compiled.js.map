{"version":3,"sources":["index.js"],"names":[],"mappings":";;;;;;;;;;;;AAUA,MAAM,CAAC,OAAO,GAAG,UAAS,IAAI,EAAE,GAAG,EAAC;AAClC,MAAI,KAAK,GAAG,IAAI,CAAC;AACjB,MAAI,CAAC,GAAG,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;;AAEzB,MAAI,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC;;AAEvB,MAAI,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,UAAS,KAAK,EAAC;AACvD,QAAI,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC;QACxB,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;QAC9B,GAAG,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;;;AAGjC,QAAI,KAAK,CAAC,KAAK,CAAC,EAAE;AAChB,WAAK,GAAG,IAAI,GAAG,GAAG,CAAC;AACnB,SAAG,GAAG,IAAI,GAAG,CAAC,CAAC;;KAEhB,MAAM,IAAI,KAAK,CAAC,GAAG,CAAC,EAAE;AACrB,WAAG,GAAG,IAAI,GAAG,CAAC,CAAC;OAChB;;;AAGD,QAAI,GAAG,GAAG,IAAI,GAAG,CAAC,EAAE,GAAG,GAAG,IAAI,GAAG,CAAC,CAAC;;;AAGnC,QAAI,KAAK,CAAC,KAAK,CAAC,IACX,KAAK,CAAC,GAAG,CAAC,IACV,KAAK,GAAG,GAAG,IACX,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,KAAK,CAAC;;AAE9B,WAAO;AACL,WAAK,EAAE,KAAK;AACZ,SAAG,EAAE,GAAG;KACT,CAAC;GACH,CAAC,CAAC;;AAEH,KAAG,CAAC,IAAI,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;;AAE3B,SAAO,KAAK,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC;CACzB,CAAC","file":"index-compiled.js","sourcesContent":["\n/**\n * Parse \"Range\" header `str` relative to the given file `size`.\n *\n * @param {Number} size\n * @param {String} str\n * @return {Array}\n * @api public\n */\n\nmodule.exports = function(size, str){\n  var valid = true;\n  var i = str.indexOf('=');\n\n  if (-1 == i) return -2;\n\n  var arr = str.slice(i + 1).split(',').map(function(range){\n    var range = range.split('-')\n      , start = parseInt(range[0], 10)\n      , end = parseInt(range[1], 10);\n\n    // -nnn\n    if (isNaN(start)) {\n      start = size - end;\n      end = size - 1;\n    // nnn-\n    } else if (isNaN(end)) {\n      end = size - 1;\n    }\n\n    // limit last-byte-pos to current length\n    if (end > size - 1) end = size - 1;\n\n    // invalid\n    if (isNaN(start)\n      || isNaN(end)\n      || start > end\n      || start < 0) valid = false;\n\n    return {\n      start: start,\n      end: end\n    };\n  });\n\n  arr.type = str.slice(0, i);\n\n  return valid ? arr : -1;\n};\n"]}