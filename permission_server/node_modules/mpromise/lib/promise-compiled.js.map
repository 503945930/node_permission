{"version":3,"sources":["promise.js"],"names":[],"mappings":"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","file":"promise-compiled.js","sourcesContent":["'use strict';\nvar util = require('util');\nvar EventEmitter = require('events').EventEmitter;\nfunction toArray(arr, start, end) {\n  return Array.prototype.slice.call(arr, start, end)\n}\nfunction strongUnshift(x, arrLike) {\n  var arr = toArray(arrLike);\n  arr.unshift(x);\n  return arr;\n}\n\n\n/**\n * Promise constructor.\n *\n * _NOTE: The success and failure event names can be overridden by setting `Promise.SUCCESS` and `Promise.FAILURE` respectively._\n *\n * @param {Function} back a function that accepts `fn(err, ...){}` as signature\n * @inherits NodeJS EventEmitter http://nodejs.org/api/events.html#events_class_events_eventemitter\n * @event `reject`: Emits when the promise is rejected (event name may be overridden)\n * @event `fulfill`: Emits when the promise is fulfilled (event name may be overridden)\n * @api public\n */\nfunction Promise(back) {\n  this.emitter = new EventEmitter();\n  this.emitted = {};\n  this.ended = false;\n  if ('function' == typeof back)\n    this.onResolve(back);\n}\n\n\n/*\n * Module exports.\n */\nmodule.exports = Promise;\n\n\n/*!\n * event names\n */\nPromise.SUCCESS = 'fulfill';\nPromise.FAILURE = 'reject';\n\n\n/**\n * Adds `listener` to the `event`.\n *\n * If `event` is either the success or failure event and the event has already been emitted, the`listener` is called immediately and passed the results of the original emitted event.\n *\n * @param {String} event\n * @param {Function} callback\n * @return {Promise} this\n * @api private\n */\nPromise.prototype.on = function (event, callback) {\n  if (this.emitted[event])\n    callback.apply(undefined, this.emitted[event]);\n  else\n    this.emitter.on(event, callback);\n\n  return this;\n};\n\n\n/**\n * Keeps track of emitted events to run them on `on`.\n *\n * @api private\n */\nPromise.prototype.safeEmit = function (event) {\n  // ensures a promise can't be fulfill() or reject() more than once\n  if (event == Promise.SUCCESS || event == Promise.FAILURE) {\n    if (this.emitted[Promise.SUCCESS] || this.emitted[Promise.FAILURE]) {\n      return this;\n    }\n    this.emitted[event] = toArray(arguments, 1);\n  }\n\n  this.emitter.emit.apply(this.emitter, arguments);\n  return this;\n};\n\n\n/**\n * Fulfills this promise with passed arguments.\n *\n * If this promise has already been fulfilled or rejected, no action is taken.\n *\n * @api public\n */\nPromise.prototype.fulfill = function () {\n  return this.safeEmit.apply(this, strongUnshift(Promise.SUCCESS, arguments));\n};\n\n\n/**\n * Rejects this promise with `reason`.\n *\n * If this promise has already been fulfilled or rejected, no action is taken.\n *\n * @api public\n * @param {Object|String} reason\n * @return {Promise} this\n */\nPromise.prototype.reject = function (reason) {\n  if (this.ended && !this.hasRejectListeners()) throw reason;\n  return this.safeEmit(Promise.FAILURE, reason);\n};\n\n\n/**\n * Resolves this promise to a rejected state if `err` is passed or\n * fulfilled state if no `err` is passed.\n *\n * @param {Error} [err] error or null\n * @param {Object} [val] value to fulfill the promise with\n * @api public\n */\nPromise.prototype.resolve = function (err, val) {\n  if (err) return this.reject(err);\n  return this.fulfill(val);\n};\n\n\n/**\n * Adds a listener to the SUCCESS event.\n *\n * @return {Promise} this\n * @api public\n */\nPromise.prototype.onFulfill = function (fn) {\n  if (!fn) return this;\n  if ('function' != typeof fn) throw new TypeError(\"fn should be a function\");\n  return this.on(Promise.SUCCESS, fn);\n};\n\n\nPromise.prototype.hasRejectListeners = function () {\n  return this.emitter.listeners(Promise.FAILURE).length > 0;\n};\n\n\n/**\n * Adds a listener to the FAILURE event.\n *\n * @return {Promise} this\n * @api public\n */\nPromise.prototype.onReject = function (fn) {\n  if (!fn) return this;\n  if ('function' != typeof fn) throw new TypeError(\"fn should be a function\");\n  return this.on(Promise.FAILURE, fn);\n};\n\n\n/**\n * Adds a single function as a listener to both SUCCESS and FAILURE.\n *\n * It will be executed with traditional node.js argument position:\n * function (err, args...) {}\n *\n * Also marks the promise as `end`ed, since it's the common use-case, and yet has no\n * side effects unless `fn` is undefined or null.\n *\n * @param {Function} fn\n * @return {Promise} this\n */\nPromise.prototype.onResolve = function (fn) {\n  this.end();\n  if (!fn) return this;\n  if ('function' != typeof fn) throw new TypeError(\"fn should be a function\");\n  this.on(Promise.FAILURE, function (err) { fn.call(this, err); });\n  this.on(Promise.SUCCESS, function () { fn.apply(this, strongUnshift(null, arguments)); });\n  return this;\n};\n\n\n/**\n * Creates a new promise and returns it. If `onFulfill` or\n * `onReject` are passed, they are added as SUCCESS/ERROR callbacks\n * to this promise after the next tick.\n *\n * Conforms to [promises/A+](https://github.com/promises-aplus/promises-spec) specification. Read for more detail how to use this method.\n *\n * ####Example:\n *\n *     var p = new Promise;\n *     p.then(function (arg) {\n *       return arg + 1;\n *     }).then(function (arg) {\n *       throw new Error(arg + ' is an error!');\n *     }).then(null, function (err) {\n *       assert.ok(err instanceof Error);\n *       assert.equal('2 is an error', err.message);\n *     });\n *     p.complete(1);\n *\n * @see promises-A+ https://github.com/promises-aplus/promises-spec\n * @param {Function} onFulfill\n * @param {Function} [onReject]\n * @return {Promise} newPromise\n */\nPromise.prototype.then = function (onFulfill, onReject) {\n  var newPromise = new Promise;\n\n  if ('function' == typeof onFulfill) {\n    this.onFulfill(handler(newPromise, onFulfill));\n  } else {\n    this.onFulfill(newPromise.fulfill.bind(newPromise));\n  }\n\n  if ('function' == typeof onReject) {\n    this.onReject(handler(newPromise, onReject));\n  } else {\n    this.onReject(newPromise.reject.bind(newPromise));\n  }\n\n  return newPromise;\n};\n\n\nfunction handler(promise, fn) {\n  function newTickHandler() {\n    var pDomain = promise.emitter.domain;\n    if (pDomain && pDomain !== process.domain) pDomain.enter();\n    try {\n      var x = fn.apply(undefined, boundHandler.args);\n    } catch (err) {\n      promise.reject(err);\n      return;\n    }\n    resolve(promise, x);\n  }\n  function boundHandler() {\n    boundHandler.args = arguments;\n    process.nextTick(newTickHandler);\n  }\n  return boundHandler;\n}\n\n\nfunction resolve(promise, x) {\n  function fulfillOnce() {\n    if (done++) return;\n    resolve.apply(undefined, strongUnshift(promise, arguments));\n  }\n  function rejectOnce(reason) {\n    if (done++) return;\n    promise.reject(reason);\n  }\n\n  if (promise === x) {\n    promise.reject(new TypeError(\"promise and x are the same\"));\n    return;\n  }\n  var rest = toArray(arguments, 1);\n  var type = typeof x;\n  if ('undefined' == type || null == x || !('object' == type || 'function' == type)) {\n    promise.fulfill.apply(promise, rest);\n    return;\n  }\n\n  try {\n    var theThen = x.then;\n  } catch (err) {\n    promise.reject(err);\n    return;\n  }\n\n  if ('function' != typeof theThen) {\n    promise.fulfill.apply(promise, rest);\n    return;\n  }\n\n  var done = 0;\n  try {\n    var ret = theThen.call(x, fulfillOnce, rejectOnce);\n    return ret;\n  } catch (err) {\n    if (done++) return;\n    promise.reject(err);\n  }\n}\n\n\n/**\n * Signifies that this promise was the last in a chain of `then()s`: if a handler passed to the call to `then` which produced this promise throws, the exception will go uncaught.\n *\n * ####Example:\n *\n *     var p = new Promise;\n *     p.then(function(){ throw new Error('shucks') });\n *     setTimeout(function () {\n *       p.fulfill();\n *       // error was caught and swallowed by the promise returned from\n *       // p.then(). we either have to always register handlers on\n *       // the returned promises or we can do the following...\n *     }, 10);\n *\n *     // this time we use .end() which prevents catching thrown errors\n *     var p = new Promise;\n *     var p2 = p.then(function(){ throw new Error('shucks') }).end(); // <--\n *     setTimeout(function () {\n *       p.fulfill(); // throws \"shucks\"\n *     }, 10);\n *\n * @api public\n * @param {Function} [onReject]\n * @return {Promise} this\n */\nPromise.prototype.end = function (onReject) {\n  this.onReject(onReject);\n  this.ended = true;\n  return this;\n};\n\n\n/**\n * A debug utility function that adds handlers to a promise that will log some output to the `console`\n *\n * ####Example:\n *\n *     var p = new Promise;\n *     p.then(function(){ throw new Error('shucks') });\n *     setTimeout(function () {\n *       p.fulfill();\n *       // error was caught and swallowed by the promise returned from\n *       // p.then(). we either have to always register handlers on\n *       // the returned promises or we can do the following...\n *     }, 10);\n *\n *     // this time we use .end() which prevents catching thrown errors\n *     var p = new Promise;\n *     var p2 = p.then(function(){ throw new Error('shucks') }).end(); // <--\n *     setTimeout(function () {\n *       p.fulfill(); // throws \"shucks\"\n *     }, 10);\n *\n * @api public\n * @param {Promise} p\n * @param {String} name\n * @return {Promise} this\n */\nPromise.trace = function (p, name) {\n  p.then(\n    function () {\n      console.log(\"%s fulfill %j\", name, toArray(arguments));\n    },\n    function () {\n      console.log(\"%s reject %j\", name, toArray(arguments));\n    }\n  )\n};\n\n\nPromise.prototype.chain = function (p2) {\n  var p1 = this;\n  p1.onFulfill(p2.fulfill.bind(p2));\n  p1.onReject(p2.reject.bind(p2));\n  return p2;\n};\n\n\nPromise.prototype.all = function (promiseOfArr) {\n  var pRet = new Promise;\n  this.then(promiseOfArr).then(\n    function (promiseArr) {\n      var count = 0;\n      var ret = [];\n      var errSentinel;\n      if (!promiseArr.length) pRet.resolve();\n      promiseArr.forEach(function (promise, index) {\n        if (errSentinel) return;\n        count++;\n        promise.then(\n          function (val) {\n            if (errSentinel) return;\n            ret[index] = val;\n            --count;\n            if (count == 0) pRet.fulfill(ret);\n          },\n          function (err) {\n            if (errSentinel) return;\n            errSentinel = err;\n            pRet.reject(err);\n          }\n        );\n      });\n      return pRet;\n    }\n    , pRet.reject.bind(pRet)\n  );\n  return pRet;\n};\n\n\nPromise.hook = function (arr) {\n  var p1 = new Promise;\n  var pFinal = new Promise;\n  var signalP = function () {\n    --count;\n    if (count == 0)\n      pFinal.fulfill();\n    return pFinal;\n  };\n  var count = 1;\n  var ps = p1;\n  arr.forEach(function (hook) {\n    ps = ps.then(\n      function () {\n        var p = new Promise;\n        count++;\n        hook(p.resolve.bind(p), signalP);\n        return p;\n      }\n    )\n  });\n  ps = ps.then(signalP);\n  p1.resolve();\n  return ps;\n};\n\n\n/* This is for the A+ tests, but it's very useful as well */\nPromise.fulfilled = function fulfilled() { var p = new Promise; p.fulfill.apply(p, arguments); return p; };\nPromise.rejected = function rejected(reason) { return new Promise().reject(reason); };\nPromise.deferred = function deferred() {\n  var p = new Promise;\n  return {\n    promise: p,\n    reject: p.reject.bind(p),\n    resolve: p.fulfill.bind(p),\n    callback: p.resolve.bind(p)\n  }\n};\n/* End A+ tests adapter bit */\n\n\n"]}