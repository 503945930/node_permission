{"version":3,"sources":["ipaddr.js"],"names":[],"mappings":";;AAAA,CAAC,YAAW;AACV,MAAI,UAAU,EAAE,MAAM,EAAE,QAAQ,EAAE,WAAW,EAAE,QAAQ,EAAE,WAAW,EAAE,SAAS,EAAE,IAAI,CAAC;;AAEtF,QAAM,GAAG,EAAE,CAAC;;AAEZ,MAAI,GAAG,IAAI,CAAC;;AAEZ,MAAI,AAAC,OAAO,MAAM,KAAK,WAAW,IAAI,MAAM,KAAK,IAAI,IAAK,MAAM,CAAC,OAAO,EAAE;AACxE,UAAM,CAAC,OAAO,GAAG,MAAM,CAAC;GACzB,MAAM;AACL,QAAI,CAAC,QAAQ,CAAC,GAAG,MAAM,CAAC;GACzB;;AAED,WAAS,GAAG,UAAS,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE;AACtD,QAAI,IAAI,EAAE,KAAK,CAAC;AAChB,QAAI,KAAK,CAAC,MAAM,KAAK,MAAM,CAAC,MAAM,EAAE;AAClC,YAAM,IAAI,KAAK,CAAC,8DAA8D,CAAC,CAAC;KACjF;AACD,QAAI,GAAG,CAAC,CAAC;AACT,WAAO,QAAQ,GAAG,CAAC,EAAE;AACnB,WAAK,GAAG,QAAQ,GAAG,QAAQ,CAAC;AAC5B,UAAI,KAAK,GAAG,CAAC,EAAE;AACb,aAAK,GAAG,CAAC,CAAC;OACX;AACD,UAAI,KAAK,CAAC,IAAI,CAAC,IAAI,KAAK,KAAK,MAAM,CAAC,IAAI,CAAC,IAAI,KAAK,EAAE;AAClD,eAAO,KAAK,CAAC;OACd;AACD,cAAQ,IAAI,QAAQ,CAAC;AACrB,UAAI,IAAI,CAAC,CAAC;KACX;AACD,WAAO,IAAI,CAAC;GACb,CAAC;;AAEF,QAAM,CAAC,WAAW,GAAG,UAAS,OAAO,EAAE,SAAS,EAAE,WAAW,EAAE;AAC7D,QAAI,SAAS,EAAE,YAAY,EAAE,MAAM,EAAE,EAAE,EAAE,IAAI,CAAC;AAC9C,QAAI,WAAW,IAAI,IAAI,EAAE;AACvB,iBAAW,GAAG,SAAS,CAAC;KACzB;AACD,SAAK,SAAS,IAAI,SAAS,EAAE;AAC3B,kBAAY,GAAG,SAAS,CAAC,SAAS,CAAC,CAAC;AACpC,UAAI,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,KAAK,gBAAgB,EAAE;AACvD,oBAAY,GAAG,CAAC,YAAY,CAAC,CAAC;OAC/B;AACD,WAAK,EAAE,GAAG,CAAC,EAAE,IAAI,GAAG,YAAY,CAAC,MAAM,EAAE,EAAE,GAAG,IAAI,EAAE,EAAE,EAAE,EAAE;AACxD,cAAM,GAAG,YAAY,CAAC,EAAE,CAAC,CAAC;AAC1B,YAAI,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,EAAE,MAAM,CAAC,EAAE;AACxC,iBAAO,SAAS,CAAC;SAClB;OACF;KACF;AACD,WAAO,WAAW,CAAC;GACpB,CAAC;;AAEF,QAAM,CAAC,IAAI,GAAG,CAAC,YAAW;AACxB,aAAS,IAAI,CAAC,MAAM,EAAE;AACpB,UAAI,KAAK,EAAE,EAAE,EAAE,IAAI,CAAC;AACpB,UAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;AACvB,cAAM,IAAI,KAAK,CAAC,sCAAsC,CAAC,CAAC;OACzD;AACD,WAAK,EAAE,GAAG,CAAC,EAAE,IAAI,GAAG,MAAM,CAAC,MAAM,EAAE,EAAE,GAAG,IAAI,EAAE,EAAE,EAAE,EAAE;AAClD,aAAK,GAAG,MAAM,CAAC,EAAE,CAAC,CAAC;AACnB,YAAI,EAAG,CAAC,IAAI,KAAK,IAAI,KAAK,IAAI,GAAG,CAAA,AAAE,EAAE;AACnC,gBAAM,IAAI,KAAK,CAAC,8BAA8B,CAAC,CAAC;SACjD;OACF;AACD,UAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;;AAED,QAAI,CAAC,SAAS,CAAC,IAAI,GAAG,YAAW;AAC/B,aAAO,MAAM,CAAC;KACf,CAAC;;AAEF,QAAI,CAAC,SAAS,CAAC,QAAQ,GAAG,YAAW;AACnC,aAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KAC9B,CAAC;;AAEF,QAAI,CAAC,SAAS,CAAC,WAAW,GAAG,YAAW;AACtC,aAAO,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;KAC7B,CAAC;;AAEF,QAAI,CAAC,SAAS,CAAC,KAAK,GAAG,UAAS,KAAK,EAAE,SAAS,EAAE;AAChD,UAAI,IAAI,CAAC;AACT,UAAI,SAAS,KAAK,KAAK,CAAC,EAAE;AACxB,YAAI,GAAG,KAAK,EAAE,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,SAAS,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;OACpD;AACD,UAAI,KAAK,CAAC,IAAI,EAAE,KAAK,MAAM,EAAE;AAC3B,cAAM,IAAI,KAAK,CAAC,qDAAqD,CAAC,CAAC;OACxE;AACD,aAAO,SAAS,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,SAAS,CAAC,CAAC;KAC3D,CAAC;;AAEF,QAAI,CAAC,SAAS,CAAC,aAAa,GAAG;AAC7B,iBAAW,EAAE,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAC1C,eAAS,EAAE,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;AACjD,eAAS,EAAE,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAC1C,eAAS,EAAE,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;AAC7C,cAAQ,EAAE,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACzC,eAAS,EAAE,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;AAC5G,cAAQ,EAAE,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;KACjN,CAAC;;AAEF,QAAI,CAAC,SAAS,CAAC,KAAK,GAAG,YAAW;AAChC,aAAO,MAAM,CAAC,WAAW,CAAC,IAAI,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;KACrD,CAAC;;AAEF,QAAI,CAAC,SAAS,CAAC,mBAAmB,GAAG,YAAW;AAC9C,aAAO,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,GAAI,IAAI,CAAC,QAAQ,EAAE,AAAC,CAAC,CAAC;KACzD,CAAC;;AAEF,WAAO,IAAI,CAAC;GAEb,CAAA,EAAG,CAAC;;AAEL,UAAQ,GAAG,sBAAsB,CAAC;;AAElC,aAAW,GAAG;AACZ,aAAS,EAAE,IAAI,MAAM,CAAC,GAAG,GAAG,QAAQ,GAAG,KAAK,GAAG,QAAQ,GAAG,KAAK,GAAG,QAAQ,GAAG,KAAK,GAAG,QAAQ,GAAG,GAAG,EAAE,GAAG,CAAC;AACzG,aAAS,EAAE,IAAI,MAAM,CAAC,GAAG,GAAG,QAAQ,GAAG,GAAG,EAAE,GAAG,CAAC;GACjD,CAAC;;AAEF,QAAM,CAAC,IAAI,CAAC,MAAM,GAAG,UAAS,MAAM,EAAE;AACpC,QAAI,KAAK,EAAE,YAAY,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,CAAC;AAC5C,gBAAY,GAAG,UAAS,MAAM,EAAE;AAC9B,UAAI,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;AAC1C,eAAO,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;OAC5B,MAAM;AACL,eAAO,QAAQ,CAAC,MAAM,CAAC,CAAC;OACzB;KACF,CAAC;AACF,QAAI,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,WAAW,CAAC,SAAS,CAAC,EAAE;AAC/C,aAAO,CAAC,YAAW;AACjB,YAAI,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,CAAC;AAC7B,YAAI,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACzB,gBAAQ,GAAG,EAAE,CAAC;AACd,aAAK,EAAE,GAAG,CAAC,EAAE,IAAI,GAAG,IAAI,CAAC,MAAM,EAAE,EAAE,GAAG,IAAI,EAAE,EAAE,EAAE,EAAE;AAChD,cAAI,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC;AAChB,kBAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;SACnC;AACD,eAAO,QAAQ,CAAC;OACjB,CAAA,EAAG,CAAC;KACN,MAAM,IAAI,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,WAAW,CAAC,SAAS,CAAC,EAAE;AACtD,WAAK,GAAG,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/B,UAAI,KAAK,GAAG,UAAU,IAAI,KAAK,GAAG,CAAC,EAAE;AACnC,cAAM,IAAI,KAAK,CAAC,uCAAuC,CAAC,CAAC;OAC1D;AACD,aAAO,AAAC,CAAC,YAAW;AAClB,YAAI,EAAE,EAAE,QAAQ,CAAC;AACjB,gBAAQ,GAAG,EAAE,CAAC;AACd,aAAK,KAAK,GAAG,EAAE,GAAG,CAAC,EAAE,EAAE,IAAI,EAAE,EAAE,KAAK,GAAG,EAAE,IAAI,CAAC,EAAE;AAC9C,kBAAQ,CAAC,IAAI,CAAC,AAAC,KAAK,IAAI,KAAK,GAAI,IAAI,CAAC,CAAC;SACxC;AACD,eAAO,QAAQ,CAAC;OACjB,CAAA,EAAG,CAAE,OAAO,EAAE,CAAC;KACjB,MAAM;AACL,aAAO,IAAI,CAAC;KACb;GACF,CAAC;;AAEF,QAAM,CAAC,IAAI,GAAG,CAAC,YAAW;AACxB,aAAS,IAAI,CAAC,KAAK,EAAE;AACnB,UAAI,IAAI,EAAE,EAAE,EAAE,IAAI,CAAC;AACnB,UAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;AACtB,cAAM,IAAI,KAAK,CAAC,qCAAqC,CAAC,CAAC;OACxD;AACD,WAAK,EAAE,GAAG,CAAC,EAAE,IAAI,GAAG,KAAK,CAAC,MAAM,EAAE,EAAE,GAAG,IAAI,EAAE,EAAE,EAAE,EAAE;AACjD,YAAI,GAAG,KAAK,CAAC,EAAE,CAAC,CAAC;AACjB,YAAI,EAAG,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,MAAM,CAAA,AAAE,EAAE;AACpC,gBAAM,IAAI,KAAK,CAAC,4CAA4C,CAAC,CAAC;SAC/D;OACF;AACD,UAAI,CAAC,KAAK,GAAG,KAAK,CAAC;KACpB;;AAED,QAAI,CAAC,SAAS,CAAC,IAAI,GAAG,YAAW;AAC/B,aAAO,MAAM,CAAC;KACf,CAAC;;AAEF,QAAI,CAAC,SAAS,CAAC,QAAQ,GAAG,YAAW;AACnC,UAAI,kBAAkB,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,WAAW,EAAE,EAAE,EAAE,IAAI,CAAC;AACrE,iBAAW,GAAG,CAAC,YAAW;AACxB,YAAI,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,CAAC;AAC7B,YAAI,GAAG,IAAI,CAAC,KAAK,CAAC;AAClB,gBAAQ,GAAG,EAAE,CAAC;AACd,aAAK,EAAE,GAAG,CAAC,EAAE,IAAI,GAAG,IAAI,CAAC,MAAM,EAAE,EAAE,GAAG,IAAI,EAAE,EAAE,EAAE,EAAE;AAChD,cAAI,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC;AAChB,kBAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;SAClC;AACD,eAAO,QAAQ,CAAC;OACjB,CAAA,CAAE,IAAI,CAAC,IAAI,CAAC,CAAC;AACd,wBAAkB,GAAG,EAAE,CAAC;AACxB,cAAQ,GAAG,UAAS,IAAI,EAAE;AACxB,eAAO,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;OACtC,CAAC;AACF,WAAK,GAAG,CAAC,CAAC;AACV,WAAK,EAAE,GAAG,CAAC,EAAE,IAAI,GAAG,WAAW,CAAC,MAAM,EAAE,EAAE,GAAG,IAAI,EAAE,EAAE,EAAE,EAAE;AACvD,YAAI,GAAG,WAAW,CAAC,EAAE,CAAC,CAAC;AACvB,gBAAQ,KAAK;AACX,eAAK,CAAC;AACJ,gBAAI,IAAI,KAAK,GAAG,EAAE;AAChB,sBAAQ,CAAC,EAAE,CAAC,CAAC;aACd,MAAM;AACL,sBAAQ,CAAC,IAAI,CAAC,CAAC;aAChB;AACD,iBAAK,GAAG,CAAC,CAAC;AACV,kBAAM;AAAA,AACR,eAAK,CAAC;AACJ,gBAAI,IAAI,KAAK,GAAG,EAAE;AAChB,mBAAK,GAAG,CAAC,CAAC;aACX,MAAM;AACL,sBAAQ,CAAC,IAAI,CAAC,CAAC;aAChB;AACD,kBAAM;AAAA,AACR,eAAK,CAAC;AACJ,gBAAI,IAAI,KAAK,GAAG,EAAE;AAChB,sBAAQ,CAAC,EAAE,CAAC,CAAC;AACb,sBAAQ,CAAC,IAAI,CAAC,CAAC;AACf,mBAAK,GAAG,CAAC,CAAC;aACX;AACD,kBAAM;AAAA,AACR,eAAK,CAAC;AACJ,oBAAQ,CAAC,IAAI,CAAC,CAAC;AAAA,SAClB;OACF;AACD,UAAI,KAAK,KAAK,CAAC,EAAE;AACf,gBAAQ,CAAC,EAAE,CAAC,CAAC;AACb,gBAAQ,CAAC,EAAE,CAAC,CAAC;OACd;AACD,aAAO,kBAAkB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KACrC,CAAC;;AAEF,QAAI,CAAC,SAAS,CAAC,WAAW,GAAG,YAAW;AACtC,UAAI,KAAK,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC;AAChC,WAAK,GAAG,EAAE,CAAC;AACX,UAAI,GAAG,IAAI,CAAC,KAAK,CAAC;AAClB,WAAK,EAAE,GAAG,CAAC,EAAE,IAAI,GAAG,IAAI,CAAC,MAAM,EAAE,EAAE,GAAG,IAAI,EAAE,EAAE,EAAE,EAAE;AAChD,YAAI,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC;AAChB,aAAK,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC;AACtB,aAAK,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC;OACzB;AACD,aAAO,KAAK,CAAC;KACd,CAAC;;AAEF,QAAI,CAAC,SAAS,CAAC,kBAAkB,GAAG,YAAW;AAC7C,UAAI,IAAI,CAAC;AACT,aAAO,AAAC,CAAC,YAAW;AAClB,YAAI,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,CAAC;AAC7B,YAAI,GAAG,IAAI,CAAC,KAAK,CAAC;AAClB,gBAAQ,GAAG,EAAE,CAAC;AACd,aAAK,EAAE,GAAG,CAAC,EAAE,IAAI,GAAG,IAAI,CAAC,MAAM,EAAE,EAAE,GAAG,IAAI,EAAE,EAAE,EAAE,EAAE;AAChD,cAAI,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC;AAChB,kBAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;SAClC;AACD,eAAO,QAAQ,CAAC;OACjB,CAAA,CAAE,IAAI,CAAC,IAAI,CAAC,CAAE,IAAI,CAAC,GAAG,CAAC,CAAC;KAC1B,CAAC;;AAEF,QAAI,CAAC,SAAS,CAAC,KAAK,GAAG,UAAS,KAAK,EAAE,SAAS,EAAE;AAChD,UAAI,IAAI,CAAC;AACT,UAAI,SAAS,KAAK,KAAK,CAAC,EAAE;AACxB,YAAI,GAAG,KAAK,EAAE,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,SAAS,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;OACpD;AACD,UAAI,KAAK,CAAC,IAAI,EAAE,KAAK,MAAM,EAAE;AAC3B,cAAM,IAAI,KAAK,CAAC,qDAAqD,CAAC,CAAC;OACxE;AACD,aAAO,SAAS,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,CAAC,KAAK,EAAE,EAAE,EAAE,SAAS,CAAC,CAAC;KAC1D,CAAC;;AAEF,QAAI,CAAC,SAAS,CAAC,aAAa,GAAG;AAC7B,iBAAW,EAAE,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC;AACtD,eAAS,EAAE,CAAC,IAAI,IAAI,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;AACxD,eAAS,EAAE,CAAC,IAAI,IAAI,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;AACvD,cAAQ,EAAE,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC;AACnD,iBAAW,EAAE,CAAC,IAAI,IAAI,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;AACzD,gBAAU,EAAE,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;AACzD,aAAO,EAAE,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;AACtD,aAAO,EAAE,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;AACzD,YAAM,EAAE,CAAC,IAAI,IAAI,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;AACrD,YAAM,EAAE,CAAC,IAAI,IAAI,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;AACrD,cAAQ,EAAE,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,MAAM,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;KAC9D,CAAC;;AAEF,QAAI,CAAC,SAAS,CAAC,KAAK,GAAG,YAAW;AAChC,aAAO,MAAM,CAAC,WAAW,CAAC,IAAI,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;KACrD,CAAC;;AAEF,QAAI,CAAC,SAAS,CAAC,mBAAmB,GAAG,YAAW;AAC9C,aAAO,IAAI,CAAC,KAAK,EAAE,KAAK,YAAY,CAAC;KACtC,CAAC;;AAEF,QAAI,CAAC,SAAS,CAAC,aAAa,GAAG,YAAW;AACxC,UAAI,IAAI,EAAE,GAAG,EAAE,IAAI,CAAC;AACpB,UAAI,CAAC,IAAI,CAAC,mBAAmB,EAAE,EAAE;AAC/B,cAAM,IAAI,KAAK,CAAC,0DAA0D,CAAC,CAAC;OAC7E;AACD,UAAI,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;AAC3D,aAAO,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,EAAE,IAAI,GAAG,IAAI,EAAE,GAAG,IAAI,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC;KACxE,CAAC;;AAEF,WAAO,IAAI,CAAC;GAEb,CAAA,EAAG,CAAC;;AAEL,UAAQ,GAAG,mBAAmB,CAAC;;AAE/B,aAAW,GAAG;AACZ,YAAQ,EAAE,IAAI,MAAM,CAAC,SAAS,GAAG,QAAQ,GAAG,sBAAsB,EAAE,GAAG,CAAC;AACxE,gBAAY,EAAE,IAAI,MAAM,CAAC,AAAC,OAAO,GAAG,QAAQ,GAAG,aAAa,GAAG,QAAQ,GAAG,KAAK,IAAK,EAAE,GAAG,QAAQ,GAAG,KAAK,GAAG,QAAQ,GAAG,KAAK,GAAG,QAAQ,GAAG,KAAK,GAAG,QAAQ,GAAG,GAAG,CAAA,AAAC,EAAE,GAAG,CAAC;GACxK,CAAC;;AAEF,YAAU,GAAG,UAAS,MAAM,EAAE,KAAK,EAAE;AACnC,QAAI,UAAU,EAAE,SAAS,EAAE,IAAI,EAAE,WAAW,EAAE,gBAAgB,CAAC;AAC/D,QAAI,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE;AACrD,aAAO,IAAI,CAAC;KACb;AACD,cAAU,GAAG,CAAC,CAAC;AACf,aAAS,GAAG,CAAC,CAAC,CAAC;AACf,WAAO,CAAC,SAAS,GAAG,MAAM,CAAC,OAAO,CAAC,GAAG,EAAE,SAAS,GAAG,CAAC,CAAC,CAAA,IAAK,CAAC,EAAE;AAC5D,gBAAU,EAAE,CAAC;KACd;AACD,QAAI,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;AACrB,gBAAU,EAAE,CAAC;KACd;AACD,QAAI,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,GAAG,EAAE;AACrC,gBAAU,EAAE,CAAC;KACd;AACD,QAAI,UAAU,GAAG,KAAK,EAAE;AACtB,aAAO,IAAI,CAAC;KACb;AACD,oBAAgB,GAAG,KAAK,GAAG,UAAU,CAAC;AACtC,eAAW,GAAG,GAAG,CAAC;AAClB,WAAO,gBAAgB,EAAE,EAAE;AACzB,iBAAW,IAAI,IAAI,CAAC;KACrB;AACD,UAAM,GAAG,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;AAC3C,QAAI,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;AACrB,YAAM,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;KAC1B;AACD,QAAI,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,GAAG,EAAE;AACrC,YAAM,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;KAC9B;AACD,WAAO,CAAC,YAAW;AACjB,UAAI,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,CAAC;AAC7B,UAAI,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AACzB,cAAQ,GAAG,EAAE,CAAC;AACd,WAAK,EAAE,GAAG,CAAC,EAAE,IAAI,GAAG,IAAI,CAAC,MAAM,EAAE,EAAE,GAAG,IAAI,EAAE,EAAE,EAAE,EAAE;AAChD,YAAI,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC;AAChB,gBAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;OACnC;AACD,aAAO,QAAQ,CAAC;KACjB,CAAA,EAAG,CAAC;GACN,CAAC;;AAEF,QAAM,CAAC,IAAI,CAAC,MAAM,GAAG,UAAS,MAAM,EAAE;AACpC,QAAI,KAAK,EAAE,KAAK,CAAC;AACjB,QAAI,MAAM,CAAC,KAAK,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,EAAE;AACvC,aAAO,UAAU,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;KAC9B,MAAM,IAAI,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC,EAAE;AAC5D,WAAK,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAC7C,UAAI,KAAK,EAAE;AACT,aAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzD,aAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzD,eAAO,KAAK,CAAC;OACd;KACF;AACD,WAAO,IAAI,CAAC;GACb,CAAC;;AAEF,QAAM,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,GAAG,UAAS,MAAM,EAAE;AACzD,WAAO,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,IAAI,CAAC;GACrC,CAAC;;AAEF,QAAM,CAAC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,IAAI,CAAC,OAAO,GAAG,UAAS,MAAM,EAAE;AAC3D,QAAI,CAAC,CAAC;AACN,QAAI;AACF,UAAI,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;AAC9B,aAAO,IAAI,CAAC;KACb,CAAC,OAAO,MAAM,EAAE;AACf,OAAC,GAAG,MAAM,CAAC;AACX,aAAO,KAAK,CAAC;KACd;GACF,CAAC;;AAEF,QAAM,CAAC,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,GAAG,UAAS,MAAM,EAAE;AACvD,QAAI,KAAK,CAAC;AACV,SAAK,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;AAC5B,QAAI,KAAK,KAAK,IAAI,EAAE;AAClB,YAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAC;KACpE;AACD,WAAO,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC;GACxB,CAAC;;AAEF,QAAM,CAAC,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC,SAAS,GAAG,UAAS,MAAM,EAAE;AAC/D,QAAI,KAAK,CAAC;AACV,QAAI,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,eAAe,CAAC,EAAE;AACzC,aAAO,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;KACnD;AACD,UAAM,IAAI,KAAK,CAAC,mDAAmD,CAAC,CAAC;GACtE,CAAC;;AAEF,QAAM,CAAC,OAAO,GAAG,UAAS,MAAM,EAAE;AAChC,WAAO,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;GACnE,CAAC;;AAEF,QAAM,CAAC,KAAK,GAAG,UAAS,MAAM,EAAE;AAC9B,QAAI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;AAC/B,aAAO,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;KAClC,MAAM,IAAI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;AACtC,aAAO,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;KAClC,MAAM;AACL,YAAM,IAAI,KAAK,CAAC,sDAAsD,CAAC,CAAC;KACzE;GACF,CAAC;;AAEF,QAAM,CAAC,SAAS,GAAG,UAAS,MAAM,EAAE;AAClC,QAAI,CAAC,CAAC;AACN,QAAI;AACF,aAAO,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;KACtC,CAAC,OAAO,MAAM,EAAE;AACf,OAAC,GAAG,MAAM,CAAC;AACX,UAAI;AACF,eAAO,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;OACtC,CAAC,OAAO,MAAM,EAAE;AACf,SAAC,GAAG,MAAM,CAAC;AACX,cAAM,IAAI,KAAK,CAAC,2DAA2D,CAAC,CAAC;OAC9E;KACF;GACF,CAAC;;AAEF,QAAM,CAAC,OAAO,GAAG,UAAS,MAAM,EAAE;AAChC,QAAI,IAAI,CAAC;AACT,QAAI,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;AAC1B,QAAI,IAAI,CAAC,IAAI,EAAE,KAAK,MAAM,IAAI,IAAI,CAAC,mBAAmB,EAAE,EAAE;AACxD,aAAO,IAAI,CAAC,aAAa,EAAE,CAAC;KAC7B,MAAM;AACL,aAAO,IAAI,CAAC;KACb;GACF,CAAC;CAEH,CAAA,CAAE,IAAI,WAAM,CAAC","file":"ipaddr-compiled.js","sourcesContent":["(function() {\n  var expandIPv6, ipaddr, ipv4Part, ipv4Regexes, ipv6Part, ipv6Regexes, matchCIDR, root;\n\n  ipaddr = {};\n\n  root = this;\n\n  if ((typeof module !== \"undefined\" && module !== null) && module.exports) {\n    module.exports = ipaddr;\n  } else {\n    root['ipaddr'] = ipaddr;\n  }\n\n  matchCIDR = function(first, second, partSize, cidrBits) {\n    var part, shift;\n    if (first.length !== second.length) {\n      throw new Error(\"ipaddr: cannot match CIDR for objects with different lengths\");\n    }\n    part = 0;\n    while (cidrBits > 0) {\n      shift = partSize - cidrBits;\n      if (shift < 0) {\n        shift = 0;\n      }\n      if (first[part] >> shift !== second[part] >> shift) {\n        return false;\n      }\n      cidrBits -= partSize;\n      part += 1;\n    }\n    return true;\n  };\n\n  ipaddr.subnetMatch = function(address, rangeList, defaultName) {\n    var rangeName, rangeSubnets, subnet, _i, _len;\n    if (defaultName == null) {\n      defaultName = 'unicast';\n    }\n    for (rangeName in rangeList) {\n      rangeSubnets = rangeList[rangeName];\n      if (toString.call(rangeSubnets[0]) !== '[object Array]') {\n        rangeSubnets = [rangeSubnets];\n      }\n      for (_i = 0, _len = rangeSubnets.length; _i < _len; _i++) {\n        subnet = rangeSubnets[_i];\n        if (address.match.apply(address, subnet)) {\n          return rangeName;\n        }\n      }\n    }\n    return defaultName;\n  };\n\n  ipaddr.IPv4 = (function() {\n    function IPv4(octets) {\n      var octet, _i, _len;\n      if (octets.length !== 4) {\n        throw new Error(\"ipaddr: ipv4 octet count should be 4\");\n      }\n      for (_i = 0, _len = octets.length; _i < _len; _i++) {\n        octet = octets[_i];\n        if (!((0 <= octet && octet <= 255))) {\n          throw new Error(\"ipaddr: ipv4 octet is a byte\");\n        }\n      }\n      this.octets = octets;\n    }\n\n    IPv4.prototype.kind = function() {\n      return 'ipv4';\n    };\n\n    IPv4.prototype.toString = function() {\n      return this.octets.join(\".\");\n    };\n\n    IPv4.prototype.toByteArray = function() {\n      return this.octets.slice(0);\n    };\n\n    IPv4.prototype.match = function(other, cidrRange) {\n      var _ref;\n      if (cidrRange === void 0) {\n        _ref = other, other = _ref[0], cidrRange = _ref[1];\n      }\n      if (other.kind() !== 'ipv4') {\n        throw new Error(\"ipaddr: cannot match ipv4 address with non-ipv4 one\");\n      }\n      return matchCIDR(this.octets, other.octets, 8, cidrRange);\n    };\n\n    IPv4.prototype.SpecialRanges = {\n      unspecified: [[new IPv4([0, 0, 0, 0]), 8]],\n      broadcast: [[new IPv4([255, 255, 255, 255]), 32]],\n      multicast: [[new IPv4([224, 0, 0, 0]), 4]],\n      linkLocal: [[new IPv4([169, 254, 0, 0]), 16]],\n      loopback: [[new IPv4([127, 0, 0, 0]), 8]],\n      \"private\": [[new IPv4([10, 0, 0, 0]), 8], [new IPv4([172, 16, 0, 0]), 12], [new IPv4([192, 168, 0, 0]), 16]],\n      reserved: [[new IPv4([192, 0, 0, 0]), 24], [new IPv4([192, 0, 2, 0]), 24], [new IPv4([192, 88, 99, 0]), 24], [new IPv4([198, 51, 100, 0]), 24], [new IPv4([203, 0, 113, 0]), 24], [new IPv4([240, 0, 0, 0]), 4]]\n    };\n\n    IPv4.prototype.range = function() {\n      return ipaddr.subnetMatch(this, this.SpecialRanges);\n    };\n\n    IPv4.prototype.toIPv4MappedAddress = function() {\n      return ipaddr.IPv6.parse(\"::ffff:\" + (this.toString()));\n    };\n\n    return IPv4;\n\n  })();\n\n  ipv4Part = \"(0?\\\\d+|0x[a-f0-9]+)\";\n\n  ipv4Regexes = {\n    fourOctet: new RegExp(\"^\" + ipv4Part + \"\\\\.\" + ipv4Part + \"\\\\.\" + ipv4Part + \"\\\\.\" + ipv4Part + \"$\", 'i'),\n    longValue: new RegExp(\"^\" + ipv4Part + \"$\", 'i')\n  };\n\n  ipaddr.IPv4.parser = function(string) {\n    var match, parseIntAuto, part, shift, value;\n    parseIntAuto = function(string) {\n      if (string[0] === \"0\" && string[1] !== \"x\") {\n        return parseInt(string, 8);\n      } else {\n        return parseInt(string);\n      }\n    };\n    if (match = string.match(ipv4Regexes.fourOctet)) {\n      return (function() {\n        var _i, _len, _ref, _results;\n        _ref = match.slice(1, 6);\n        _results = [];\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n          part = _ref[_i];\n          _results.push(parseIntAuto(part));\n        }\n        return _results;\n      })();\n    } else if (match = string.match(ipv4Regexes.longValue)) {\n      value = parseIntAuto(match[1]);\n      if (value > 0xffffffff || value < 0) {\n        throw new Error(\"ipaddr: address outside defined range\");\n      }\n      return ((function() {\n        var _i, _results;\n        _results = [];\n        for (shift = _i = 0; _i <= 24; shift = _i += 8) {\n          _results.push((value >> shift) & 0xff);\n        }\n        return _results;\n      })()).reverse();\n    } else {\n      return null;\n    }\n  };\n\n  ipaddr.IPv6 = (function() {\n    function IPv6(parts) {\n      var part, _i, _len;\n      if (parts.length !== 8) {\n        throw new Error(\"ipaddr: ipv6 part count should be 8\");\n      }\n      for (_i = 0, _len = parts.length; _i < _len; _i++) {\n        part = parts[_i];\n        if (!((0 <= part && part <= 0xffff))) {\n          throw new Error(\"ipaddr: ipv6 part should fit to two octets\");\n        }\n      }\n      this.parts = parts;\n    }\n\n    IPv6.prototype.kind = function() {\n      return 'ipv6';\n    };\n\n    IPv6.prototype.toString = function() {\n      var compactStringParts, part, pushPart, state, stringParts, _i, _len;\n      stringParts = (function() {\n        var _i, _len, _ref, _results;\n        _ref = this.parts;\n        _results = [];\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n          part = _ref[_i];\n          _results.push(part.toString(16));\n        }\n        return _results;\n      }).call(this);\n      compactStringParts = [];\n      pushPart = function(part) {\n        return compactStringParts.push(part);\n      };\n      state = 0;\n      for (_i = 0, _len = stringParts.length; _i < _len; _i++) {\n        part = stringParts[_i];\n        switch (state) {\n          case 0:\n            if (part === '0') {\n              pushPart('');\n            } else {\n              pushPart(part);\n            }\n            state = 1;\n            break;\n          case 1:\n            if (part === '0') {\n              state = 2;\n            } else {\n              pushPart(part);\n            }\n            break;\n          case 2:\n            if (part !== '0') {\n              pushPart('');\n              pushPart(part);\n              state = 3;\n            }\n            break;\n          case 3:\n            pushPart(part);\n        }\n      }\n      if (state === 2) {\n        pushPart('');\n        pushPart('');\n      }\n      return compactStringParts.join(\":\");\n    };\n\n    IPv6.prototype.toByteArray = function() {\n      var bytes, part, _i, _len, _ref;\n      bytes = [];\n      _ref = this.parts;\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        part = _ref[_i];\n        bytes.push(part >> 8);\n        bytes.push(part & 0xff);\n      }\n      return bytes;\n    };\n\n    IPv6.prototype.toNormalizedString = function() {\n      var part;\n      return ((function() {\n        var _i, _len, _ref, _results;\n        _ref = this.parts;\n        _results = [];\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n          part = _ref[_i];\n          _results.push(part.toString(16));\n        }\n        return _results;\n      }).call(this)).join(\":\");\n    };\n\n    IPv6.prototype.match = function(other, cidrRange) {\n      var _ref;\n      if (cidrRange === void 0) {\n        _ref = other, other = _ref[0], cidrRange = _ref[1];\n      }\n      if (other.kind() !== 'ipv6') {\n        throw new Error(\"ipaddr: cannot match ipv6 address with non-ipv6 one\");\n      }\n      return matchCIDR(this.parts, other.parts, 16, cidrRange);\n    };\n\n    IPv6.prototype.SpecialRanges = {\n      unspecified: [new IPv6([0, 0, 0, 0, 0, 0, 0, 0]), 128],\n      linkLocal: [new IPv6([0xfe80, 0, 0, 0, 0, 0, 0, 0]), 10],\n      multicast: [new IPv6([0xff00, 0, 0, 0, 0, 0, 0, 0]), 8],\n      loopback: [new IPv6([0, 0, 0, 0, 0, 0, 0, 1]), 128],\n      uniqueLocal: [new IPv6([0xfc00, 0, 0, 0, 0, 0, 0, 0]), 7],\n      ipv4Mapped: [new IPv6([0, 0, 0, 0, 0, 0xffff, 0, 0]), 96],\n      rfc6145: [new IPv6([0, 0, 0, 0, 0xffff, 0, 0, 0]), 96],\n      rfc6052: [new IPv6([0x64, 0xff9b, 0, 0, 0, 0, 0, 0]), 96],\n      '6to4': [new IPv6([0x2002, 0, 0, 0, 0, 0, 0, 0]), 16],\n      teredo: [new IPv6([0x2001, 0, 0, 0, 0, 0, 0, 0]), 32],\n      reserved: [[new IPv6([0x2001, 0xdb8, 0, 0, 0, 0, 0, 0]), 32]]\n    };\n\n    IPv6.prototype.range = function() {\n      return ipaddr.subnetMatch(this, this.SpecialRanges);\n    };\n\n    IPv6.prototype.isIPv4MappedAddress = function() {\n      return this.range() === 'ipv4Mapped';\n    };\n\n    IPv6.prototype.toIPv4Address = function() {\n      var high, low, _ref;\n      if (!this.isIPv4MappedAddress()) {\n        throw new Error(\"ipaddr: trying to convert a generic ipv6 address to ipv4\");\n      }\n      _ref = this.parts.slice(-2), high = _ref[0], low = _ref[1];\n      return new ipaddr.IPv4([high >> 8, high & 0xff, low >> 8, low & 0xff]);\n    };\n\n    return IPv6;\n\n  })();\n\n  ipv6Part = \"(?:[0-9a-f]+::?)+\";\n\n  ipv6Regexes = {\n    \"native\": new RegExp(\"^(::)?(\" + ipv6Part + \")?([0-9a-f]+)?(::)?$\", 'i'),\n    transitional: new RegExp((\"^((?:\" + ipv6Part + \")|(?:::)(?:\" + ipv6Part + \")?)\") + (\"\" + ipv4Part + \"\\\\.\" + ipv4Part + \"\\\\.\" + ipv4Part + \"\\\\.\" + ipv4Part + \"$\"), 'i')\n  };\n\n  expandIPv6 = function(string, parts) {\n    var colonCount, lastColon, part, replacement, replacementCount;\n    if (string.indexOf('::') !== string.lastIndexOf('::')) {\n      return null;\n    }\n    colonCount = 0;\n    lastColon = -1;\n    while ((lastColon = string.indexOf(':', lastColon + 1)) >= 0) {\n      colonCount++;\n    }\n    if (string[0] === ':') {\n      colonCount--;\n    }\n    if (string[string.length - 1] === ':') {\n      colonCount--;\n    }\n    if (colonCount > parts) {\n      return null;\n    }\n    replacementCount = parts - colonCount;\n    replacement = ':';\n    while (replacementCount--) {\n      replacement += '0:';\n    }\n    string = string.replace('::', replacement);\n    if (string[0] === ':') {\n      string = string.slice(1);\n    }\n    if (string[string.length - 1] === ':') {\n      string = string.slice(0, -1);\n    }\n    return (function() {\n      var _i, _len, _ref, _results;\n      _ref = string.split(\":\");\n      _results = [];\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        part = _ref[_i];\n        _results.push(parseInt(part, 16));\n      }\n      return _results;\n    })();\n  };\n\n  ipaddr.IPv6.parser = function(string) {\n    var match, parts;\n    if (string.match(ipv6Regexes['native'])) {\n      return expandIPv6(string, 8);\n    } else if (match = string.match(ipv6Regexes['transitional'])) {\n      parts = expandIPv6(match[1].slice(0, -1), 6);\n      if (parts) {\n        parts.push(parseInt(match[2]) << 8 | parseInt(match[3]));\n        parts.push(parseInt(match[4]) << 8 | parseInt(match[5]));\n        return parts;\n      }\n    }\n    return null;\n  };\n\n  ipaddr.IPv4.isIPv4 = ipaddr.IPv6.isIPv6 = function(string) {\n    return this.parser(string) !== null;\n  };\n\n  ipaddr.IPv4.isValid = ipaddr.IPv6.isValid = function(string) {\n    var e;\n    try {\n      new this(this.parser(string));\n      return true;\n    } catch (_error) {\n      e = _error;\n      return false;\n    }\n  };\n\n  ipaddr.IPv4.parse = ipaddr.IPv6.parse = function(string) {\n    var parts;\n    parts = this.parser(string);\n    if (parts === null) {\n      throw new Error(\"ipaddr: string is not formatted like ip address\");\n    }\n    return new this(parts);\n  };\n\n  ipaddr.IPv4.parseCIDR = ipaddr.IPv6.parseCIDR = function(string) {\n    var match;\n    if (match = string.match(/^(.+)\\/(\\d+)$/)) {\n      return [this.parse(match[1]), parseInt(match[2])];\n    }\n    throw new Error(\"ipaddr: string is not formatted like a CIDR range\");\n  };\n\n  ipaddr.isValid = function(string) {\n    return ipaddr.IPv6.isValid(string) || ipaddr.IPv4.isValid(string);\n  };\n\n  ipaddr.parse = function(string) {\n    if (ipaddr.IPv6.isValid(string)) {\n      return ipaddr.IPv6.parse(string);\n    } else if (ipaddr.IPv4.isValid(string)) {\n      return ipaddr.IPv4.parse(string);\n    } else {\n      throw new Error(\"ipaddr: the address has neither IPv6 nor IPv4 format\");\n    }\n  };\n\n  ipaddr.parseCIDR = function(string) {\n    var e;\n    try {\n      return ipaddr.IPv6.parseCIDR(string);\n    } catch (_error) {\n      e = _error;\n      try {\n        return ipaddr.IPv4.parseCIDR(string);\n      } catch (_error) {\n        e = _error;\n        throw new Error(\"ipaddr: the address has neither IPv6 nor IPv4 CIDR format\");\n      }\n    }\n  };\n\n  ipaddr.process = function(string) {\n    var addr;\n    addr = this.parse(string);\n    if (addr.kind() === 'ipv6' && addr.isIPv4MappedAddress()) {\n      return addr.toIPv4Address();\n    } else {\n      return addr;\n    }\n  };\n\n}).call(this);\n"]}