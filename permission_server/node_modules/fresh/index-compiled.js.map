{"version":3,"sources":["index.js"],"names":[],"mappings":";;;;;;;AAKA,MAAM,CAAC,OAAO,GAAG,KAAK,CAAC;;;;;;;;;;;;;;;AAevB,SAAS,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE;;AAEvB,MAAI,WAAW,GAAG,IAAI,CAAC;AACvB,MAAI,WAAW,GAAG,IAAI,CAAC;;;AAGvB,MAAI,aAAa,GAAG,GAAG,CAAC,mBAAmB,CAAC,CAAC;AAC7C,MAAI,SAAS,GAAG,GAAG,CAAC,eAAe,CAAC,CAAC;AACrC,MAAI,YAAY,GAAG,GAAG,CAAC,eAAe,CAAC,CAAC;AACxC,MAAI,IAAI,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC;AACvB,MAAI,EAAE,GAAG,GAAG,CAAC,eAAe,CAAC,CAAC;;;AAG9B,MAAI,CAAC,aAAa,IAAI,CAAC,SAAS,EAAE,OAAO,KAAK,CAAC;;;AAG/C,MAAI,EAAE,IAAI,EAAE,CAAC,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,EAAE,OAAO,KAAK,CAAC;;;AAGtD,MAAI,SAAS,EAAE,SAAS,GAAG,SAAS,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;;;AAGpD,MAAI,SAAS,EAAE,WAAW,GAAG,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,SAAS,CAAC,CAAC,CAAC,CAAC;;;AAG7E,MAAI,aAAa,EAAE;AACjB,iBAAa,GAAG,IAAI,IAAI,CAAC,aAAa,CAAC,CAAC;AACxC,gBAAY,GAAG,IAAI,IAAI,CAAC,YAAY,CAAC,CAAC;AACtC,eAAW,GAAG,YAAY,IAAI,aAAa,CAAC;GAC7C;;AAED,SAAO,CAAC,EAAG,WAAW,IAAI,WAAW,CAAA,AAAC,CAAC;CACxC","file":"index-compiled.js","sourcesContent":["\n/**\n * Expose `fresh()`.\n */\n\nmodule.exports = fresh;\n\n/**\n * Check freshness of `req` and `res` headers.\n *\n * When the cache is \"fresh\" __true__ is returned,\n * otherwise __false__ is returned to indicate that\n * the cache is now stale.\n *\n * @param {Object} req\n * @param {Object} res\n * @return {Boolean}\n * @api public\n */\n\nfunction fresh(req, res) {\n  // defaults\n  var etagMatches = true;\n  var notModified = true;\n\n  // fields\n  var modifiedSince = req['if-modified-since'];\n  var noneMatch = req['if-none-match'];\n  var lastModified = res['last-modified'];\n  var etag = res['etag'];\n  var cc = req['cache-control'];\n\n  // unconditional request\n  if (!modifiedSince && !noneMatch) return false;\n\n  // check for no-cache cache request directive\n  if (cc && cc.indexOf('no-cache') !== -1) return false;  \n\n  // parse if-none-match\n  if (noneMatch) noneMatch = noneMatch.split(/ *, */);\n\n  // if-none-match\n  if (noneMatch) etagMatches = ~noneMatch.indexOf(etag) || '*' == noneMatch[0];\n\n  // if-modified-since\n  if (modifiedSince) {\n    modifiedSince = new Date(modifiedSince);\n    lastModified = new Date(lastModified);\n    notModified = lastModified <= modifiedSince;\n  }\n\n  return !! (etagMatches && notModified);\n}"]}