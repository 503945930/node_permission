{"version":3,"sources":["index.js"],"names":[],"mappings":";;AACA,IAAI,QAAQ,GAAG,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC;;AAEzC,SAAS,QAAQ,CAAE,CAAC,EAAE;AACpB,SAAO,QAAQ,IAAI,OAAO,CAAC,IACpB,iBAAiB,IAAI,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;CAC9C;;AAED,MAAM,CAAC,OAAO,GAAG,OAAO,GAAG,UAAU,MAAM,EAAE;AAC3C,MAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;AACrB,UAAM,IAAI,SAAS,CAAC,cAAc,CAAC,CAAC;GACrC;;AAED,MAAI,KAAK,GAAG,EAAE,CAAC;AACf,MAAI,MAAM,CAAC,MAAM,EAAE,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACnC,MAAI,MAAM,CAAC,SAAS,EAAE,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACtC,MAAI,MAAM,CAAC,UAAU,EAAE,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACvC,SAAO,IAAI,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;CAClD,CAAA","file":"index-compiled.js","sourcesContent":["\nvar toString = Object.prototype.toString;\n\nfunction isRegExp (o) {\n  return 'object' == typeof o\n      && '[object RegExp]' == toString.call(o);\n}\n\nmodule.exports = exports = function (regexp) {\n  if (!isRegExp(regexp)) {\n    throw new TypeError('Not a RegExp');\n  }\n\n  var flags = [];\n  if (regexp.global) flags.push('g');\n  if (regexp.multiline) flags.push('m');\n  if (regexp.ignoreCase) flags.push('i');\n  return new RegExp(regexp.source, flags.join(''));\n}\n\n"]}