{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index-compiled.js","sourcesContent":["\nvar assert = require('assert')\nvar clone = require('../');\n\ndescribe('regexp-clone', function(){\n  function hasEqualSource (a, b) {\n    assert.ok(a !== b);\n    assert.equal(a.source, b.source);\n  }\n\n  function isInsensitive (a) {\n    assert.ok(a.ignoreCase);\n  }\n\n  function isGlobal (a) {\n    assert.ok(a.global);\n  }\n\n  function isMultiline (a) {\n    assert.ok(a.multiline);\n  }\n\n  function insensitiveFlag (a) {\n    var b = clone(a);\n    hasEqualSource(a, b);\n    isInsensitive(a);\n    isInsensitive(b);\n  }\n\n  function globalFlag (a) {\n    var b = clone(a);\n    hasEqualSource(a, b);\n    isGlobal(a);\n    isGlobal(b);\n  }\n\n  function multilineFlag (a) {\n    var b = clone(a);\n    hasEqualSource(a, b);\n    isMultiline(a);\n    isMultiline(b);\n  }\n\n  describe('literals', function(){\n    it('insensitive flag', function(done){\n      var a = /hello/i;\n      insensitiveFlag(a);\n      done();\n    })\n    it('global flag', function(done){\n      var a = /hello/g;\n      globalFlag(a);\n      done();\n    })\n    it('multiline flag', function(done){\n      var a = /hello/m;\n      multilineFlag(a);\n      done();\n    })\n    it('no flags', function(done){\n      var a = /hello/;\n      var b = clone(a);\n      hasEqualSource(a, b);\n      assert.ok(!a.insensitive);\n      assert.ok(!a.global);\n      assert.ok(!a.global);\n      done();\n    })\n    it('all flags', function(done){\n      var a = /hello/gim;\n      insensitiveFlag(a);\n      globalFlag(a);\n      multilineFlag(a);\n      done();\n    })\n  })\n\n  describe('instances', function(){\n    it('insensitive flag', function(done){\n      var a = new RegExp('hello', 'i');\n      insensitiveFlag(a);\n      done();\n    })\n    it('global flag', function(done){\n      var a = new RegExp('hello', 'g');\n      globalFlag(a);\n      done();\n    })\n    it('multiline flag', function(done){\n      var a = new RegExp('hello', 'm');\n      multilineFlag(a);\n      done();\n    })\n    it('no flags', function(done){\n      var a = new RegExp('hmm');\n      var b = clone(a);\n      hasEqualSource(a, b);\n      assert.ok(!a.insensitive);\n      assert.ok(!a.global);\n      assert.ok(!a.global);\n      done();\n    })\n    it('all flags', function(done){\n      var a = new RegExp('hello', 'gim');\n      insensitiveFlag(a);\n      globalFlag(a);\n      multilineFlag(a);\n      done();\n    })\n  })\n})\n\n"]}