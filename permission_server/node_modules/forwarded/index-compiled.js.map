{"version":3,"sources":["index.js"],"names":[],"mappings":";;;;;;;;;;;;AAUA,MAAM,CAAC,OAAO,GAAG,SAAS,CAAA;;;;;;;;;AAS1B,SAAS,SAAS,CAAC,GAAG,EAAE;AACtB,MAAI,CAAC,GAAG,EAAE;AACR,UAAM,IAAI,SAAS,CAAC,0BAA0B,CAAC,CAAA;GAChD;;;AAGD,MAAI,UAAU,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,iBAAiB,CAAC,IAAI,EAAE,CAAA,CACnD,KAAK,CAAC,OAAO,CAAC,CACd,MAAM,CAAC,OAAO,CAAC,CACf,OAAO,EAAE,CAAA;AACZ,MAAI,UAAU,GAAG,GAAG,CAAC,UAAU,CAAC,aAAa,CAAA;AAC7C,MAAI,KAAK,GAAG,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC,CAAA;;;AAG3C,SAAO,KAAK,CAAA;CACb","file":"index-compiled.js","sourcesContent":["/*!\n * forwarded\n * Copyright(c) 2014 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n/**\n * Module exports.\n */\n\nmodule.exports = forwarded\n\n/**\n * Get all addresses in the request, using the `X-Forwarded-For` header.\n *\n * @param {Object} req\n * @api public\n */\n\nfunction forwarded(req) {\n  if (!req) {\n    throw new TypeError('argument req is required')\n  }\n\n  // simple header parsing\n  var proxyAddrs = (req.headers['x-forwarded-for'] || '')\n    .split(/ *, */)\n    .filter(Boolean)\n    .reverse()\n  var socketAddr = req.connection.remoteAddress\n  var addrs = [socketAddr].concat(proxyAddrs)\n\n  // return all addresses\n  return addrs\n}\n"]}