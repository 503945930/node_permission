{"version":3,"sources":["view.js"],"names":[],"mappings":"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","file":"view-compiled.js","sourcesContent":["/**\n * Module dependencies.\n */\n\nvar debug = require('debug')('express:view');\nvar path = require('path');\nvar fs = require('fs');\nvar utils = require('./utils');\n\n/**\n * Module variables.\n * @private\n */\n\nvar dirname = path.dirname;\nvar basename = path.basename;\nvar extname = path.extname;\nvar join = path.join;\nvar resolve = path.resolve;\n\n/**\n * Expose `View`.\n */\n\nmodule.exports = View;\n\n/**\n * Initialize a new `View` with the given `name`.\n *\n * Options:\n *\n *   - `defaultEngine` the default template engine name\n *   - `engines` template engine require() cache\n *   - `root` root path for view lookup\n *\n * @param {String} name\n * @param {Object} options\n * @api private\n */\n\nfunction View(name, options) {\n  options = options || {};\n  this.name = name;\n  this.root = options.root;\n  var engines = options.engines;\n  this.defaultEngine = options.defaultEngine;\n  var ext = this.ext = extname(name);\n  if (!ext && !this.defaultEngine) throw new Error('No default engine was specified and no extension was provided.');\n  if (!ext) name += (ext = this.ext = ('.' != this.defaultEngine[0] ? '.' : '') + this.defaultEngine);\n  this.engine = engines[ext] || (engines[ext] = require(ext.slice(1)).__express);\n  this.path = this.lookup(name);\n}\n\n/**\n * Lookup view by the given `name`\n *\n * @param {String} name\n * @return {String}\n * @api private\n */\n\nView.prototype.lookup = function lookup(name) {\n  var path;\n  var roots = [].concat(this.root);\n\n  debug('lookup \"%s\"', name);\n\n  for (var i = 0; i < roots.length && !path; i++) {\n    var root = roots[i];\n\n    // resolve the path\n    var loc = resolve(root, name);\n    var dir = dirname(loc);\n    var file = basename(loc);\n\n    // resolve the file\n    path = this.resolve(dir, file);\n  }\n\n  return path;\n};\n\n/**\n * Render with the given `options` and callback `fn(err, str)`.\n *\n * @param {Object} options\n * @param {Function} fn\n * @api private\n */\n\nView.prototype.render = function render(options, fn) {\n  debug('render \"%s\"', this.path);\n  this.engine(this.path, options, fn);\n};\n\n/**\n * Resolve the file within the given directory.\n *\n * @param {string} dir\n * @param {string} file\n * @private\n */\n\nView.prototype.resolve = function resolve(dir, file) {\n  var ext = this.ext;\n  var path;\n  var stat;\n\n  // <path>.<ext>\n  path = join(dir, file);\n  stat = tryStat(path);\n\n  if (stat && stat.isFile()) {\n    return path;\n  }\n\n  // <path>/index.<ext>\n  path = join(dir, basename(file, ext), 'index' + ext);\n  stat = tryStat(path);\n\n  if (stat && stat.isFile()) {\n    return path;\n  }\n};\n\n/**\n * Return a stat, maybe.\n *\n * @param {string} path\n * @return {fs.Stats}\n * @private\n */\n\nfunction tryStat(path) {\n  debug('stat \"%s\"', path);\n\n  try {\n    return fs.statSync(path);\n  } catch (e) {\n    return undefined;\n  }\n}\n"]}