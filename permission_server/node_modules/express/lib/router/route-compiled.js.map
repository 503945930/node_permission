{"version":3,"sources":["route.js"],"names":[],"mappings":"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","file":"route-compiled.js","sourcesContent":["/**\n * Module dependencies.\n */\n\nvar debug = require('debug')('express:router:route');\nvar Layer = require('./layer');\nvar methods = require('methods');\nvar utils = require('../utils');\n\n/**\n * Expose `Route`.\n */\n\nmodule.exports = Route;\n\n/**\n * Initialize `Route` with the given `path`,\n *\n * @param {String} path\n * @api private\n */\n\nfunction Route(path) {\n  debug('new %s', path);\n  this.path = path;\n  this.stack = [];\n\n  // route handlers for various http methods\n  this.methods = {};\n}\n\n/**\n * @api private\n */\n\nRoute.prototype._handles_method = function _handles_method(method) {\n  if (this.methods._all) {\n    return true;\n  }\n\n  method = method.toLowerCase();\n\n  if (method === 'head' && !this.methods['head']) {\n    method = 'get';\n  }\n\n  return Boolean(this.methods[method]);\n};\n\n/**\n * @return {Array} supported HTTP methods\n * @api private\n */\n\nRoute.prototype._options = function _options() {\n  var methods = Object.keys(this.methods);\n\n  // append automatic head\n  if (this.methods.get && !this.methods.head) {\n    methods.push('head');\n  }\n\n  for (var i = 0; i < methods.length; i++) {\n    // make upper case\n    methods[i] = methods[i].toUpperCase();\n  }\n\n  return methods;\n};\n\n/**\n * dispatch req, res into this route\n *\n * @api private\n */\n\nRoute.prototype.dispatch = function(req, res, done){\n  var idx = 0;\n  var stack = this.stack;\n  if (stack.length === 0) {\n    return done();\n  }\n\n  var method = req.method.toLowerCase();\n  if (method === 'head' && !this.methods['head']) {\n    method = 'get';\n  }\n\n  req.route = this;\n\n  next();\n\n  function next(err) {\n    if (err && err === 'route') {\n      return done();\n    }\n\n    var layer = stack[idx++];\n    if (!layer) {\n      return done(err);\n    }\n\n    if (layer.method && layer.method !== method) {\n      return next(err);\n    }\n\n    if (err) {\n      layer.handle_error(err, req, res, next);\n    } else {\n      layer.handle_request(req, res, next);\n    }\n  }\n};\n\n/**\n * Add a handler for all HTTP verbs to this route.\n *\n * Behaves just like middleware and can respond or call `next`\n * to continue processing.\n *\n * You can use multiple `.all` call to add multiple handlers.\n *\n *   function check_something(req, res, next){\n *     next();\n *   };\n *\n *   function validate_user(req, res, next){\n *     next();\n *   };\n *\n *   route\n *   .all(validate_user)\n *   .all(check_something)\n *   .get(function(req, res, next){\n *     res.send('hello world');\n *   });\n *\n * @param {function} handler\n * @return {Route} for chaining\n * @api public\n */\n\nRoute.prototype.all = function(){\n  var callbacks = utils.flatten([].slice.call(arguments));\n  callbacks.forEach(function(fn) {\n    if (typeof fn !== 'function') {\n      var type = {}.toString.call(fn);\n      var msg = 'Route.all() requires callback functions but got a ' + type;\n      throw new Error(msg);\n    }\n\n    var layer = Layer('/', {}, fn);\n    layer.method = undefined;\n\n    this.methods._all = true;\n    this.stack.push(layer);\n  }, this);\n\n  return this;\n};\n\nmethods.forEach(function(method){\n  Route.prototype[method] = function(){\n    var callbacks = utils.flatten([].slice.call(arguments));\n\n    callbacks.forEach(function(fn) {\n      if (typeof fn !== 'function') {\n        var type = {}.toString.call(fn);\n        var msg = 'Route.' + method + '() requires callback functions but got a ' + type;\n        throw new Error(msg);\n      }\n\n      debug('%s %s', method, this.path);\n\n      var layer = Layer('/', {}, fn);\n      layer.method = method;\n\n      this.methods[method] = true;\n      this.stack.push(layer);\n    }, this);\n    return this;\n  };\n});\n"]}